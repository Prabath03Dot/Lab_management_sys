{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useMove, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './Saturation.styles.js';\nimport { convertHsvaTo } from '../converters/converters.js';\n\nfunction Saturation(_ref) {\n  let {\n    value,\n    onChange,\n    focusable = true,\n    __staticSelector = \"saturation\",\n    size,\n    color,\n    saturationLabel,\n    classNames,\n    styles\n  } = _ref;\n  const {\n    classes\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const [position, setPosition] = useState({\n    x: value.s / 100,\n    y: 1 - value.v / 100\n  });\n  const {\n    ref\n  } = useMove(_ref2 => {\n    let {\n      x,\n      y\n    } = _ref2;\n    onChange({\n      s: Math.round(x * 100),\n      v: Math.round((1 - y) * 100)\n    });\n  });\n  useEffect(() => {\n    setPosition({\n      x: value.s / 100,\n      y: 1 - value.v / 100\n    });\n  }, [value.s, value.v]);\n\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n\n    const _position = clampUseMovePosition(pos);\n\n    onChange({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100)\n    });\n  };\n\n  const handleKeyDown = event => {\n    switch (event.nativeEvent.code) {\n      case \"ArrowUp\":\n        {\n          handleArrow(event, {\n            y: position.y - 0.05,\n            x: position.x\n          });\n          break;\n        }\n\n      case \"ArrowDown\":\n        {\n          handleArrow(event, {\n            y: position.y + 0.05,\n            x: position.x\n          });\n          break;\n        }\n\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturation,\n    ref,\n    role: \"slider\",\n    \"aria-label\": saturationLabel,\n    \"aria-valuenow\": position.x,\n    \"aria-valuetext\": convertHsvaTo(\"rgba\", value),\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundColor: `hsl(${value.h}, 100%, 50%)`\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(90deg, #fff, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(0deg, #000, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector,\n    classNames,\n    styles,\n    position,\n    className: classes.saturationThumb,\n    style: {\n      backgroundColor: color\n    },\n    size\n  }));\n}\n\nSaturation.displayName = \"@mantine/core/Saturation\";\nexport { Saturation };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\ColorPicker\\Saturation\\Saturation.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMove, clampUseMovePosition, UseMovePosition } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, ClassNames } from '@mantine/styles';\nimport { HsvaColor } from '../types';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport useStyles from './Saturation.styles';\nimport { convertHsvaTo } from '../converters';\n\nexport type SaturationStylesNames =\n  | Exclude<ClassNames<typeof useStyles>, 'saturationOverlay' | 'saturationThumb'>\n  | ThumbStylesNames;\n\ninterface SaturationProps extends DefaultProps<SaturationStylesNames> {\n  value: HsvaColor;\n  onChange(color: Partial<HsvaColor>): void;\n  saturationLabel?: string;\n  size: MantineSize;\n  color: string;\n  focusable?: boolean;\n  __staticSelector?: string;\n}\n\nexport function Saturation({\n  value,\n  onChange,\n  focusable = true,\n  __staticSelector = 'saturation',\n  size,\n  color,\n  saturationLabel,\n  classNames,\n  styles,\n}: SaturationProps) {\n  const { classes } = useStyles({ size }, { classNames, styles, name: __staticSelector });\n  const [position, setPosition] = useState({ x: value.s / 100, y: 1 - value.v / 100 });\n\n  const { ref } = useMove(({ x, y }) => {\n    onChange({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n  });\n\n  useEffect(() => {\n    setPosition({ x: value.s / 100, y: 1 - value.v / 100 });\n  }, [value.s, value.v]);\n\n  const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange({ s: Math.round(_position.x * 100), v: Math.round((1 - _position.y) * 100) });\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.nativeEvent.code) {\n      case 'ArrowUp': {\n        handleArrow(event, { y: position.y - 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowDown': {\n        handleArrow(event, { y: position.y + 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowRight': {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case 'ArrowLeft': {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  return (\n    <div\n      className={classes.saturation}\n      ref={ref}\n      role=\"slider\"\n      aria-label={saturationLabel}\n      aria-valuenow={position.x}\n      aria-valuetext={convertHsvaTo('rgba', value)}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n    >\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundColor: `hsl(${value.h}, 100%, 50%)` }}\n      />\n\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundImage: 'linear-gradient(90deg, #fff, transparent)' }}\n      />\n\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundImage: 'linear-gradient(0deg, #000, transparent)' }}\n      />\n\n      <Thumb\n        __staticSelector={__staticSelector}\n        classNames={classNames}\n        styles={styles}\n        position={position}\n        className={classes.saturationThumb}\n        style={{ backgroundColor: color }}\n        size={size}\n      />\n    </div>\n  );\n}\n\nSaturation.displayName = '@mantine/core/Saturation';\n"]},"metadata":{},"sourceType":"module"}