{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst DEFAULT_EVENTS = [\"keypress\", \"mousemove\", \"touchmove\", \"click\", \"scroll\"];\nconst DEFAULT_OPTIONS = {\n  events: DEFAULT_EVENTS,\n  initialState: true\n};\n\nfunction useIdle(timeout, options) {\n  const {\n    events,\n    initialState\n  } = __spreadValues(__spreadValues({}, DEFAULT_OPTIONS), options);\n\n  const [idle, setIdle] = useState(initialState);\n  const timer = useRef();\n  useEffect(() => {\n    const handleEvents = () => {\n      setIdle(false);\n\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n\n      timer.current = window.setTimeout(() => {\n        setIdle(true);\n      }, timeout);\n    };\n\n    events.forEach(event => document.addEventListener(event, handleEvents));\n    return () => {\n      events.forEach(event => document.removeEventListener(event, handleEvents));\n    };\n  }, [timeout]);\n  return idle;\n}\n\nexport { useIdle };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-idle\\use-idle.ts"],"names":[],"mappings":";AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAYA,MAAM,cAAc,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,WAA1B,EAAuC,OAAvC,EAAgD,QAAhD,CAAvB;AACA,MAAM,eAAe,GAAG;AACtB,EAAA,MAAM,EAAE,cADc;AAEtB,EAAA,YAAY,EAAE;AAFQ,CAAxB;;AAIO,SAAS,OAAT,CAAiB,OAAjB,EAA0B,OAA1B,EAAmC;AACxC,QAAM;AAAE,IAAA,MAAF;AAAU,IAAA;AAAV,MAA2B,cAAc,CAAC,cAAc,CAAC,EAAD,EAAK,eAAL,CAAf,EAAsC,OAAtC,CAA/C;;AACA,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAC,YAAD,CAAhC;AACA,QAAM,KAAK,GAAG,MAAM,EAApB;AACA,EAAA,SAAS,CAAC,MAAM;AACd,UAAM,YAAY,GAAG,MAAM;AACzB,MAAA,OAAO,CAAC,KAAD,CAAP;;AACA,UAAI,KAAK,CAAC,OAAV,EAAmB;AACjB,QAAA,MAAM,CAAC,YAAP,CAAoB,KAAK,CAAC,OAA1B;AACD;;AACD,MAAA,KAAK,CAAC,OAAN,GAAgB,MAAM,CAAC,UAAP,CAAkB,MAAM;AACtC,QAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFe,EAEb,OAFa,CAAhB;AAGD,KARD;;AASA,IAAA,MAAM,CAAC,OAAP,CAAgB,KAAD,IAAW,QAAQ,CAAC,gBAAT,CAA0B,KAA1B,EAAiC,YAAjC,CAA1B;AACA,WAAO,MAAM;AACX,MAAA,MAAM,CAAC,OAAP,CAAgB,KAAD,IAAW,QAAQ,CAAC,mBAAT,CAA6B,KAA7B,EAAoC,YAApC,CAA1B;AACD,KAFD;AAGD,GAdQ,EAcN,CAAC,OAAD,CAdM,CAAT;AAeA,SAAO,IAAP;AACF","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['keypress', 'mousemove', 'touchmove', 'click', 'scroll'];\nconst DEFAULT_OPTIONS = {\n  events: DEFAULT_EVENTS,\n  initialState: true,\n};\n\nexport function useIdle(\n  timeout: number,\n  options?: Partial<{ events: string[]; initialState: boolean }>\n) {\n  const { events, initialState } = { ...DEFAULT_OPTIONS, ...options };\n  const [idle, setIdle] = useState<boolean>(initialState);\n  const timer = useRef<number>();\n\n  useEffect(() => {\n    const handleEvents = () => {\n      setIdle(false);\n\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n\n      timer.current = window.setTimeout(() => {\n        setIdle(true);\n      }, timeout);\n    };\n\n    events.forEach((event) => document.addEventListener(event, handleEvents));\n\n    return () => {\n      events.forEach((event) => document.removeEventListener(event, handleEvents));\n    };\n  }, [timeout]);\n\n  return idle;\n}\n"]},"metadata":{},"sourceType":"module"}