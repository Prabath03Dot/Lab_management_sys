{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea.js';\nimport useStyles from './SelectDropdown.styles.js';\nimport { Popper } from '../../Popper/Popper.js';\nimport { Paper } from '../../Paper/Paper.js';\nconst SelectDropdown = forwardRef((_ref, ref) => {\n  let {\n    mounted,\n    transition,\n    transitionDuration,\n    transitionTimingFunction,\n    uuid,\n    shadow,\n    maxDropdownHeight,\n    withinPortal = true,\n    children,\n    classNames,\n    styles,\n    dropdownComponent,\n    referenceElement,\n    direction = \"column\",\n    onDirectionChange,\n    switchDirectionOnFlip = false,\n    zIndex = getDefaultZIndex(\"popover\"),\n    dropdownPosition = \"flip\",\n    __staticSelector\n  } = _ref;\n  const {\n    classes\n  } = useStyles({\n    native: dropdownComponent !== SelectScrollArea\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const previousPlacement = useRef(\"bottom\");\n  return /* @__PURE__ */React.createElement(Popper, {\n    referenceElement,\n    mounted,\n    transition,\n    transitionDuration,\n    exitTransitionDuration: 0,\n    transitionTimingFunction,\n    position: dropdownPosition === \"flip\" ? \"bottom\" : dropdownPosition,\n    withinPortal,\n    zIndex,\n    modifiers: [{\n      name: \"preventOverflow\",\n      enabled: false\n    }, {\n      name: \"flip\",\n      enabled: dropdownPosition === \"flip\"\n    }, {\n      name: \"sameWidth\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: _ref2 => {\n        let {\n          state\n        } = _ref2;\n        state.styles.popper.width = `${state.rects.reference.width}px`;\n      },\n      effect: _ref3 => {\n        let {\n          state\n        } = _ref3;\n        state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n      }\n    }, {\n      name: \"directionControl\",\n      enabled: true,\n      phase: \"main\",\n      fn: _ref4 => {\n        let {\n          state\n        } = _ref4;\n\n        if (previousPlacement.current !== state.placement) {\n          previousPlacement.current = state.placement;\n          const nextDirection = state.placement === \"top\" ? \"column-reverse\" : \"column\";\n\n          if (direction !== nextDirection && switchDirectionOnFlip) {\n            onDirectionChange && onDirectionChange(nextDirection);\n          }\n        }\n      }\n    }]\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      maxHeight: maxDropdownHeight,\n      display: \"flex\"\n    }\n  }, /* @__PURE__ */React.createElement(Paper, {\n    component: dropdownComponent || \"div\",\n    id: `${uuid}-items`,\n    \"aria-labelledby\": `${uuid}-label`,\n    role: \"listbox\",\n    className: classes.dropdown,\n    shadow,\n    ref,\n    onMouseDown: event => event.preventDefault()\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: direction,\n      width: \"100%\"\n    }\n  }, children))));\n});\nSelectDropdown.displayName = \"@mantine/core/SelectDropdown\";\nexport { SelectDropdown };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Select\\SelectDropdown\\SelectDropdown.tsx"],"names":[],"mappings":";;;;;;AAMY,MAAC,cAAc,GAAG,UAAU,CAAC,OAoBtC,GApBsC,KAoB9B;AAAA,MApB+B;AACxC,IAAA,OADwC;AAExC,IAAA,UAFwC;AAGxC,IAAA,kBAHwC;AAIxC,IAAA,wBAJwC;AAKxC,IAAA,IALwC;AAMxC,IAAA,MANwC;AAOxC,IAAA,iBAPwC;AAQxC,IAAA,YAAY,GAAG,IARyB;AASxC,IAAA,QATwC;AAUxC,IAAA,UAVwC;AAWxC,IAAA,MAXwC;AAYxC,IAAA,iBAZwC;AAaxC,IAAA,gBAbwC;AAcxC,IAAA,SAAS,GAAG,QAd4B;AAexC,IAAA,iBAfwC;AAgBxC,IAAA,qBAAqB,GAAG,KAhBgB;AAiBxC,IAAA,MAAM,GAAG,gBAAgB,CAAC,SAAD,CAjBe;AAkBxC,IAAA,gBAAgB,GAAG,MAlBqB;AAmBxC,IAAA;AAnBwC,GAoB/B;AACT,QAAM;AAAE,IAAA;AAAF,MAAc,SAAS,CAAC;AAAE,IAAA,MAAM,EAAE,iBAAiB,KAAK;AAAhC,GAAD,EAAqD;AAAE,IAAA,UAAF;AAAc,IAAA,MAAd;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAArD,CAA7B;AACA,QAAM,iBAAiB,GAAG,MAAM,CAAC,QAAD,CAAhC;AACA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,MAApB,EAA4B;AACjD,IAAA,gBADiD;AAEjD,IAAA,OAFiD;AAGjD,IAAA,UAHiD;AAIjD,IAAA,kBAJiD;AAKjD,IAAA,sBAAsB,EAAE,CALyB;AAMjD,IAAA,wBANiD;AAOjD,IAAA,QAAQ,EAAE,gBAAgB,KAAK,MAArB,GAA8B,QAA9B,GAAyC,gBAPF;AAQjD,IAAA,YARiD;AASjD,IAAA,MATiD;AAUjD,IAAA,SAAS,EAAE,CACT;AACE,MAAA,IAAI,EAAE,iBADR;AAEE,MAAA,OAAO,EAAE;AAFX,KADS,EAKT;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,OAAO,EAAE,gBAAgB,KAAK;AAFhC,KALS,EAST;AACE,MAAA,IAAI,EAAE,WADR;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,EAAE,aAHT;AAIE,MAAA,QAAQ,EAAE,CAAC,eAAD,CAJZ;AAKE,MAAA,EAAE,EAAE,SAAe;AAAA,YAAd;AAAE,UAAA;AAAF,SAAc;AACjB,QAAA,KAAK,CAAC,MAAN,CAAa,MAAb,CAAoB,KAApB,GAA6B,GAAE,KAAK,CAAC,KAAN,CAAY,SAAZ,CAAsB,KAAM,IAA3D;AACD,OAPH;AAQE,MAAA,MAAM,EAAE,SAAe;AAAA,YAAd;AAAE,UAAA;AAAF,SAAc;AACrB,QAAA,KAAK,CAAC,QAAN,CAAe,MAAf,CAAsB,KAAtB,CAA4B,KAA5B,GAAqC,GAAE,KAAK,CAAC,QAAN,CAAe,SAAf,CAAyB,WAAY,IAA5E;AACD;AAVH,KATS,EAqBT;AACE,MAAA,IAAI,EAAE,kBADR;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,EAAE,MAHT;AAIE,MAAA,EAAE,EAAE,SAAe;AAAA,YAAd;AAAE,UAAA;AAAF,SAAc;;AACjB,YAAI,iBAAiB,CAAC,OAAlB,KAA8B,KAAK,CAAC,SAAxC,EAAmD;AACjD,UAAA,iBAAiB,CAAC,OAAlB,GAA4B,KAAK,CAAC,SAAlC;AACA,gBAAM,aAAa,GAAG,KAAK,CAAC,SAAN,KAAoB,KAApB,GAA4B,gBAA5B,GAA+C,QAArE;;AACA,cAAI,SAAS,KAAK,aAAd,IAA+B,qBAAnC,EAA0D;AACxD,YAAA,iBAAiB,IAAI,iBAAiB,CAAC,aAAD,CAAtC;AACD;AACF;AACF;AAZH,KArBS;AAVsC,GAA5B,EA8CtB,eAAkB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC5C,IAAA,KAAK,EAAE;AAAE,MAAA,SAAS,EAAE,iBAAb;AAAgC,MAAA,OAAO,EAAE;AAAzC;AADqC,GAA3B,EAElB,eAAkB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC5C,IAAA,SAAS,EAAE,iBAAiB,IAAI,KADY;AAE5C,IAAA,EAAE,EAAG,GAAE,IAAK,QAFgC;AAG5C,uBAAoB,GAAE,IAAK,QAHiB;AAI5C,IAAA,IAAI,EAAE,SAJsC;AAK5C,IAAA,SAAS,EAAE,OAAO,CAAC,QALyB;AAM5C,IAAA,MAN4C;AAO5C,IAAA,GAP4C;AAQ5C,IAAA,WAAW,EAAG,KAAD,IAAW,KAAK,CAAC,cAAN;AARoB,GAA3B,EASlB,eAAkB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC5C,IAAA,KAAK,EAAE;AAAE,MAAA,OAAO,EAAE,MAAX;AAAmB,MAAA,aAAa,EAAE,SAAlC;AAA6C,MAAA,KAAK,EAAE;AAApD;AADqC,GAA3B,EAEhB,QAFgB,CATA,CAFA,CA9CI,CAAvB;AA4DD,CAnFuC,CAA5B;AAoFZ,cAAc,CAAC,WAAf,GAA6B,8BAA7B","sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { DefaultProps, MantineShadow, ClassNames, getDefaultZIndex } from '@mantine/styles';\nimport type { Placement } from '@popperjs/core';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea';\nimport { MantineTransition } from '../../Transition';\nimport { Paper } from '../../Paper';\nimport useStyles from './SelectDropdown.styles';\nimport { Popper } from '../../Popper';\n\nexport type SelectDropdownStylesNames = ClassNames<typeof useStyles>;\n\ninterface SelectDropdownProps extends DefaultProps<SelectDropdownStylesNames> {\n  mounted: boolean;\n  transition: MantineTransition;\n  transitionDuration: number;\n  transitionTimingFunction: string;\n  uuid: string;\n  shadow: MantineShadow;\n  maxDropdownHeight?: number | string;\n  withinPortal?: boolean;\n  children: React.ReactNode;\n  __staticSelector: string;\n  dropdownComponent?: React.FC<any>;\n  referenceElement?: HTMLElement;\n  direction?: React.CSSProperties['flexDirection'];\n  onDirectionChange?: (direction: React.CSSProperties['flexDirection']) => void;\n  switchDirectionOnFlip?: boolean;\n  zIndex?: number;\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n}\n\nexport const SelectDropdown = forwardRef<HTMLDivElement, SelectDropdownProps>(\n  (\n    {\n      mounted,\n      transition,\n      transitionDuration,\n      transitionTimingFunction,\n      uuid,\n      shadow,\n      maxDropdownHeight,\n      withinPortal = true,\n      children,\n      classNames,\n      styles,\n      dropdownComponent,\n      referenceElement,\n      direction = 'column',\n      onDirectionChange,\n      switchDirectionOnFlip = false,\n      zIndex = getDefaultZIndex('popover'),\n      dropdownPosition = 'flip',\n      __staticSelector,\n    }: SelectDropdownProps,\n    ref\n  ) => {\n    const { classes } = useStyles(\n      { native: dropdownComponent !== SelectScrollArea },\n      { classNames, styles, name: __staticSelector }\n    );\n\n    const previousPlacement = useRef<Placement>('bottom');\n\n    return (\n      <Popper\n        referenceElement={referenceElement}\n        mounted={mounted}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        exitTransitionDuration={0}\n        transitionTimingFunction={transitionTimingFunction}\n        position={dropdownPosition === 'flip' ? 'bottom' : dropdownPosition}\n        withinPortal={withinPortal}\n        zIndex={zIndex}\n        modifiers={[\n          {\n            name: 'preventOverflow',\n            enabled: false,\n          },\n          {\n            name: 'flip',\n            enabled: dropdownPosition === 'flip',\n          },\n          {\n            // @ts-ignore\n            name: 'sameWidth',\n            enabled: true,\n            phase: 'beforeWrite',\n            requires: ['computeStyles'],\n            fn: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.styles.popper.width = `${state.rects.reference.width}px`;\n            },\n            effect: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n            },\n          },\n          {\n            // @ts-ignore\n            name: 'directionControl',\n            enabled: true,\n            phase: 'main',\n            fn: ({ state }) => {\n              if (previousPlacement.current !== state.placement) {\n                previousPlacement.current = state.placement;\n\n                const nextDirection = state.placement === 'top' ? 'column-reverse' : 'column';\n\n                if (direction !== nextDirection && switchDirectionOnFlip) {\n                  onDirectionChange && onDirectionChange(nextDirection);\n                }\n              }\n            },\n          },\n        ]}\n      >\n        <div style={{ maxHeight: maxDropdownHeight, display: 'flex' }}>\n          <Paper<'div'>\n            component={(dropdownComponent || 'div') as any}\n            id={`${uuid}-items`}\n            aria-labelledby={`${uuid}-label`}\n            role=\"listbox\"\n            className={classes.dropdown}\n            shadow={shadow}\n            ref={ref}\n            onMouseDown={(event) => event.preventDefault()}\n          >\n            <div style={{ display: 'flex', flexDirection: direction, width: '100%' }}>\n              {children}\n            </div>\n          </Paper>\n        </div>\n      </Popper>\n    );\n  }\n);\n\nSelectDropdown.displayName = '@mantine/core/SelectDropdown';\n"]},"metadata":{},"sourceType":"module"}