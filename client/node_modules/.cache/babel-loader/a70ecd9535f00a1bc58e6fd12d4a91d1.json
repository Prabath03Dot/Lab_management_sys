{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useReducedMotion, useUncontrolled, useUuid, useResizeObserver, useMergedRef } from '@mantine/hooks';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst SegmentedControl = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    disabled = false,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius = \"sm\",\n    size = \"sm\",\n    transitionDuration = 200,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation\n  } = _b,\n      others = __objRest(_b, [\"className\", \"disabled\", \"data\", \"name\", \"value\", \"onChange\", \"color\", \"fullWidth\", \"radius\", \"size\", \"transitionDuration\", \"transitionTimingFunction\", \"classNames\", \"styles\", \"defaultValue\", \"orientation\"]);\n\n  const reduceMotion = useReducedMotion();\n\n  const data = _data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? data[0].value : null,\n    onChange,\n    rule: val => !!val\n  });\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    fullWidth,\n    color,\n    radius,\n    shouldAnimate: reduceMotion || !shouldAnimate,\n    transitionDuration,\n    transitionTimingFunction,\n    orientation\n  }, {\n    classNames,\n    styles,\n    name: \"SegmentedControl\"\n  });\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0]\n  });\n  const uuid = useUuid(name);\n  const refs = useRef({});\n  const [observerRef, containerRect] = useResizeObserver();\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n      const offsetRight = containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n      setActivePosition({\n        width,\n        height,\n        translate: [theme.dir === \"rtl\" ? offsetRight : offsetLeft, element.parentElement.offsetTop - WRAPPER_PADDING]\n      });\n    }\n  }, [_value, containerRect]);\n  useEffect(() => {\n    setShouldAnimate(true);\n  }, []);\n  const controls = data.map(item => /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.control, {\n      [classes.controlActive]: _value === item.value\n    }),\n    key: item.value\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: classes.input,\n    disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => handleValueChange(item.value)\n  }), /* @__PURE__ */React.createElement(\"label\", {\n    className: cx(classes.label, {\n      [classes.labelActive]: _value === item.value,\n      [classes.disabled]: disabled\n    }),\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => {\n      refs.current[item.value] = node;\n    }\n  }, item.label)));\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref: useMergedRef(observerRef, ref)\n  }, others), !!_value && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    className: classes.active,\n    sx: {\n      width: activePosition.width,\n      height: activePosition.height,\n      transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`\n    }\n  }), controls);\n});\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\SegmentedControl\\SegmentedControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport {\n  useReducedMotion,\n  useResizeObserver,\n  useUncontrolled,\n  useUuid,\n  useMergedRef,\n} from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  ClassNames,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles';\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n}\n\nexport type SegmentedControlStylesNames = ClassNames<typeof useStyles>;\n\nexport interface SegmentedControlProps\n  extends DefaultProps<SegmentedControlStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: string[] | SegmentedControlItem[];\n\n  /** Current selected value */\n  value?: string;\n\n  /** Disabled input state */\n  disabled?: boolean;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Name of the radio group, default to random id */\n  name?: string;\n\n  /** True if component should have 100% width */\n  fullWidth?: boolean;\n\n  /** Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark */\n  color?: MantineColor;\n\n  /** Controls font-size, paddings and height */\n  size?: MantineSize;\n\n  /** Border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Transition duration in ms, set to 0 to turn off transitions */\n  transitionDuration?: number;\n\n  /** Transition timing function for all transitions, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Display Vertically */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>(\n  (\n    {\n      className,\n      disabled = false,\n      data: _data,\n      name,\n      value,\n      onChange,\n      color,\n      fullWidth,\n      radius = 'sm',\n      size = 'sm',\n      transitionDuration = 200,\n      transitionTimingFunction,\n      classNames,\n      styles,\n      defaultValue,\n      orientation,\n      ...others\n    },\n    ref\n  ) => {\n    const reduceMotion = useReducedMotion();\n    const data = _data.map((item: any) =>\n      typeof item === 'string' ? { label: item, value: item } : item\n    );\n\n    const [shouldAnimate, setShouldAnimate] = useState(false);\n    const [_value, handleValueChange] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: Array.isArray(data) ? data[0].value : null,\n      onChange,\n      rule: (val) => !!val,\n    });\n\n    const { classes, cx, theme } = useStyles(\n      {\n        size,\n        fullWidth,\n        color,\n        radius,\n        shouldAnimate: reduceMotion || !shouldAnimate,\n        transitionDuration,\n        transitionTimingFunction,\n        orientation,\n      },\n      { classNames, styles, name: 'SegmentedControl' }\n    );\n\n    const [activePosition, setActivePosition] = useState({\n      width: 0,\n      height: 0,\n      translate: [0, 0],\n    });\n    const uuid = useUuid(name);\n    const refs = useRef<Record<string, HTMLLabelElement>>({});\n    const [observerRef, containerRect] = useResizeObserver();\n\n    useEffect(() => {\n      if (_value in refs.current && observerRef.current) {\n        const element = refs.current[_value];\n        const elementRect = element.getBoundingClientRect();\n        const scaledValue = element.offsetWidth / elementRect.width;\n        const width = elementRect.width * scaledValue || 0;\n        const height = elementRect.height * scaledValue || 0;\n\n        const offsetRight =\n          containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n        const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n\n        setActivePosition({\n          width,\n          height,\n          translate: [\n            theme.dir === 'rtl' ? offsetRight : offsetLeft,\n            element.parentElement.offsetTop - WRAPPER_PADDING,\n          ],\n        });\n      }\n    }, [_value, containerRect]);\n\n    useEffect(() => {\n      setShouldAnimate(true);\n    }, []);\n\n    const controls = data.map((item) => (\n      <div\n        className={cx(classes.control, { [classes.controlActive]: _value === item.value })}\n        key={item.value}\n      >\n        <input\n          className={classes.input}\n          disabled={disabled}\n          type=\"radio\"\n          name={uuid}\n          value={item.value}\n          id={`${uuid}-${item.value}`}\n          checked={_value === item.value}\n          onChange={() => handleValueChange(item.value)}\n        />\n\n        <label\n          className={cx(classes.label, {\n            [classes.labelActive]: _value === item.value,\n            [classes.disabled]: disabled,\n          })}\n          htmlFor={`${uuid}-${item.value}`}\n          ref={(node) => {\n            refs.current[item.value] = node;\n          }}\n        >\n          {item.label}\n        </label>\n      </div>\n    ));\n\n    return (\n      <Box className={cx(classes.root, className)} ref={useMergedRef(observerRef, ref)} {...others}>\n        {!!_value && (\n          <Box\n            component=\"span\"\n            className={classes.active}\n            sx={{\n              width: activePosition.width,\n              height: activePosition.height,\n              transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`,\n            }}\n          />\n        )}\n\n        {controls}\n      </Box>\n    );\n  }\n);\n\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"]},"metadata":{},"sourceType":"module"}