{"ast":null,"code":"import { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nfunction createAccordionState(length) {\n  let initialItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  return Array.from({\n    length\n  }).reduce((acc, _item, index) => {\n    acc[index] = index === initialItem;\n    return acc;\n  }, {});\n}\n\nfunction useAccordionState(_ref) {\n  let {\n    initialState,\n    total,\n    initialItem = -1,\n    state,\n    onChange,\n    multiple = false\n  } = _ref;\n  const [value, setState] = useUncontrolled({\n    value: state,\n    defaultValue: initialState || createAccordionState(total, initialItem),\n    finalValue: {},\n    onChange,\n    rule: val => val !== null && typeof val === \"object\"\n  });\n\n  const toggle = index => {\n    if (multiple) {\n      setState(__spreadProps(__spreadValues({}, value), {\n        [index]: !value[index]\n      }));\n    } else {\n      const newValues = Array(total).fill(0).reduce((acc, _, itemIndex) => {\n        acc[itemIndex] = false;\n        return acc;\n      }, {});\n      newValues[index] = !value[index];\n      setState(newValues);\n    }\n  };\n\n  useDidUpdate(() => {\n    if (!multiple) {\n      setState(createAccordionState(total));\n    }\n  }, [multiple]);\n  return [value, {\n    toggle,\n    setState\n  }];\n}\n\nexport { createAccordionState, useAccordionState };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Accordion\\use-accordion-state\\use-accordion-state.ts"],"names":[],"mappings":"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","sourcesContent":["import { useUncontrolled, useDidUpdate } from '@mantine/hooks';\n\nexport function createAccordionState(length: number, initialItem = -1) {\n  return Array.from({ length }).reduce((acc, _item, index) => {\n    acc[index] = index === initialItem;\n    return acc;\n  }, {}) as AccordionState;\n}\n\nexport type AccordionState = Record<string, boolean>;\n\ninterface UseAccordionState {\n  multiple?: boolean;\n  initialState?: AccordionState;\n  state?: AccordionState;\n  total: number;\n  initialItem?: number;\n  onChange?(state: Record<string, boolean>): void;\n}\n\nexport function useAccordionState({\n  initialState,\n  total,\n  initialItem = -1,\n  state,\n  onChange,\n  multiple = false,\n}: UseAccordionState) {\n  const [value, setState] = useUncontrolled({\n    value: state,\n    defaultValue: initialState || createAccordionState(total, initialItem),\n    finalValue: {} as Record<string, boolean>,\n    onChange,\n    rule: (val) => val !== null && typeof val === 'object',\n  });\n\n  const toggle = (index: number) => {\n    if (multiple) {\n      setState({ ...value, [index]: !value[index] });\n    } else {\n      const newValues = Array(total)\n        .fill(0)\n        .reduce((acc, _, itemIndex) => {\n          acc[itemIndex] = false;\n          return acc;\n        }, {}) as Record<string, boolean>;\n      newValues[index] = !value[index];\n      setState(newValues);\n    }\n  };\n\n  useDidUpdate(() => {\n    if (!multiple) {\n      setState(createAccordionState(total));\n    }\n  }, [multiple]);\n\n  return [value, { toggle, setState }] as const;\n}\n"]},"metadata":{},"sourceType":"module"}