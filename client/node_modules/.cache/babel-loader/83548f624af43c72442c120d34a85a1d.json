{"ast":null,"code":"var _jsxFileName = \"D:\\\\D-Downlods\\\\MINI_ Prpject 2022\\\\lab-manage-sys\\\\client\\\\src\\\\pages\\\\careers\\\\EditJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Footerr from '../Imp/Footer';\nimport NavigationBar from '../Imp/NavigationBar';\nimport img from '../../images/chemistry.jpg';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef } from 'react';\nimport '../../../node_modules/react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditJob() {\n  _s();\n\n  const [newjobTitle, setNewJobTitle] = useState();\n  const [newjobContent, setNewjobContent] = useState();\n  const navigate = useNavigate();\n  const [joblist, setjoblist] = useState();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/jobList/${id}`).then(response => {\n      // setjoblist(response.data)\n      console.log(response.data);\n    });\n  }, [id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // try{\n    //      await axios.post('http://localhost:5000/jobListd',{\n    //         newjobTitle,\n    //         newjobContent\n    //     } )\n    //     .then(res => {\n    //       toast.success('Job Updated', {\n    //         position: \"bottom-right\",\n    //         autoClose: 2500,\n    //         hideProgressBar: false,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //         progress: undefined,\n    //         });\n    //     }).catch((error) => {\n    //       if (error.response) {\n    //         console.log(error.response);\n    //         console.log(\"server responded::JobRoute\");\n    //       } else if (error.request) {\n    //         console.log(\"network error ::JobRoute\");\n    //       } else {\n    //         console.log(error);\n    //       }\n    //     })\n    //   }catch(error){\n    //     console.log(error);\n    //   }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container  mt-5 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-secondary fs-1  \",\n        children: \"Update Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), joblist, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mt-5 \",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mx-auto justify-items-center align-items-center\",\n          onSubmit: handleSubmit,\n          id: \"payment-form\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"FormGroup\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputEmail3\",\n                className: \"col-sm-2 col-form-label\",\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-10\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newjobTitle,\n                  onChange: e => setNewJobTitle(e.target.value),\n                  required: true,\n                  className: \"form-control\",\n                  id: \"inputEmail3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputEmail3\",\n                className: \"col-sm-2 col-form-label\",\n                children: \"Job Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-10\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"textarea\",\n                  value: newjobContent,\n                  className: \"form-control\",\n                  required: true,\n                  onChange: e => setNewjobContent(e.target.value),\n                  id: \"inputUserId3\",\n                  cols: \"30\",\n                  rows: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary mt-5\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"text-decoration-none text-light\",\n                  to: \"/editjobs\",\n                  children: \"Post Job\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 99\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footerr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditJob, \"2HTB3Q8dUGNzOoCiBQpatiJn04c=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditJob\");","map":{"version":3,"sources":["D:/D-Downlods/MINI_ Prpject 2022/lab-manage-sys/client/src/pages/careers/EditJob.js"],"names":["React","useEffect","useState","Footerr","NavigationBar","img","Link","useNavigate","useParams","axios","Editor","useRef","ToastContainer","toast","EditJob","newjobTitle","setNewJobTitle","newjobContent","setNewjobContent","navigate","joblist","setjoblist","id","console","log","get","then","response","data","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport Footerr from '../Imp/Footer'\r\nimport NavigationBar from '../Imp/NavigationBar'\r\nimport img from '../../images/chemistry.jpg'\r\nimport { Link ,useNavigate, useParams} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { useRef } from 'react';\r\nimport '../../../node_modules/react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default function EditJob() {\r\n    const [newjobTitle, setNewJobTitle] = useState();\r\n    const [newjobContent, setNewjobContent] = useState();\r\n    const navigate = useNavigate();\r\n    const [joblist, setjoblist] = useState();\r\n    const { id } = useParams();\r\nconsole.log(id);\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/jobList/${id}`)\r\n        .then((response) => {\r\n            // setjoblist(response.data)\r\n            console.log(response.data)\r\n        })\r\n        \r\n      }, [id])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // try{\r\n        //      await axios.post('http://localhost:5000/jobListd',{\r\n        //         newjobTitle,\r\n        //         newjobContent\r\n        //     } )\r\n        //     .then(res => {\r\n\r\n        //       toast.success('Job Updated', {\r\n        //         position: \"bottom-right\",\r\n        //         autoClose: 2500,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         });\r\n           \r\n        //     }).catch((error) => {\r\n        //       if (error.response) {\r\n        //         console.log(error.response);\r\n        //         console.log(\"server responded::JobRoute\");\r\n        //       } else if (error.request) {\r\n        //         console.log(\"network error ::JobRoute\");\r\n        //       } else {\r\n        //         console.log(error);\r\n        //       }\r\n        //     })\r\n        //   }catch(error){\r\n        //     console.log(error);\r\n        //   }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n    <NavigationBar/>\r\n    \r\n    <div className='container  mt-5 p-4'>\r\n    <div className='text-secondary fs-1  '>Update Job</div>\r\n    {joblist}\r\n    \r\n    <div className=' mt-5 '>\r\n\r\n    <form  className=\"mx-auto justify-items-center align-items-center\"  onSubmit={handleSubmit} id=\"payment-form\">\r\n            <fieldset className=\"FormGroup\">\r\n            <div className=\"row mb-3\">\r\n                  <label for=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Job Title</label>\r\n                  <div className=\"col-sm-10\">\r\n                    <input type=\"text\" value={newjobTitle} onChange={e => setNewJobTitle(e.target.value)} required className=\"form-control\" id=\"inputEmail3\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb-3\">\r\n                  <label for=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Job Content</label>\r\n                  <div className=\"col-sm-10\">\r\n                  <textarea name=\"textarea\" value={newjobContent}  className=\"form-control\" required onChange={e => setNewjobContent(e.target.value)} id=\"inputUserId3\" cols=\"30\" rows=\"10\"></textarea>\r\n                  </div>\r\n                </div>\r\n                <div  className=\"row mb-3\"><button type='submit' className='btn btn-primary mt-5'><Link className='text-decoration-none text-light' to='/editjobs'>Post Job</Link></button></div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n\r\n    </div>\r\n    <ToastContainer \r\n  position=\"bottom-right\"\r\n  autoClose={2000}\r\n  hideProgressBar={false}\r\n  newestOnTop={false}\r\n  closeOnClick\r\n  rtl={false}\r\n  pauseOnFocusLoss\r\n  draggable\r\n  pauseOnHover\r\n/>\r\n    <Footerr></Footerr>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}