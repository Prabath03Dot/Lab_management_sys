{"ast":null,"code":"var _jsxFileName = \"D:\\\\D-Downlods\\\\MINI_ Prpject 2022\\\\lab-manage-sys\\\\client\\\\src\\\\pages\\\\tests\\\\PayamentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PayamentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post('http://localhost:5000/payment', {\n          amount: 1500,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"success payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just bought a sweet spatula congrats this is the best decision of you're life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayamentForm, \"JINYMdqMqWd1QoQrSQBbUl9sOWA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PayamentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayamentForm\");","map":{"version":3,"sources":["D:/D-Downlods/MINI_ Prpject 2022/lab-manage-sys/client/src/pages/tests/PayamentForm.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PayamentForm","success","setSuccess","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","handleSubmit","e","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements\r\n  } from \"@stripe/react-stripe-js\";\r\n  import axios from \"axios\";\r\n\r\n  const CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function PayamentForm() {\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const {error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: elements.getElement(CardElement)\r\n    })\r\n  \r\n\r\n  if(!error){\r\n      try{\r\n          const {id} = paymentMethod\r\n          const response = await axios.post('http://localhost:5000/payment', {\r\n              amount:1500,\r\n              id\r\n          } )\r\n\r\n          if(response.data.success){\r\n              console.log(\"success payment\")\r\n              setSuccess(true);\r\n          }\r\n      }catch(error) {\r\n        console.log('error' , error)\r\n      }\r\n  }else{\r\n      console.log(error.message)\r\n  }\r\n  }\r\n  return (\r\n\r\n    <div>\r\n         {!success ? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button>Pay</button>\r\n        </form>\r\n        :\r\n       <div>\r\n           <h2>You just bought a sweet spatula congrats this is the best decision of you're life</h2>\r\n       </div> \r\n        }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}