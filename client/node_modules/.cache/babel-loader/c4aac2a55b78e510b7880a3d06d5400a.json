{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nvar useStyles = createStyles((theme, _ref, getRef) => {\n  let {\n    spacing,\n    center\n  } = _ref;\n  const itemWrapper = {\n    ref: getRef(\"itemWrapper\"),\n    display: \"inline\"\n  };\n  return {\n    itemWrapper,\n    item: {\n      lineHeight: center ? 1 : theme.lineHeight,\n      \"&:not(:first-of-type)\": {\n        marginTop: theme.fn.size({\n          size: spacing,\n          sizes: theme.spacing\n        })\n      }\n    },\n    withIcon: {\n      listStyle: \"none\",\n      [`& .${itemWrapper.ref}`]: {\n        display: \"inline-flex\",\n        alignItems: center ? \"center\" : \"flex-start\"\n      }\n    },\n    itemIcon: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing.sm\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\List\\ListItem\\ListItem.styles.ts"],"names":[],"mappings":";AACA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,QAA6B,MAA7B,KAAwC;AAAA,MAAhC;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,GAAgC;AAClE,QAAM,WAAW,GAAG;AAClB,IAAA,GAAG,EAAE,MAAM,CAAC,aAAD,CADO;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB;AAIA,SAAO;AACL,IAAA,WADK;AAEL,IAAA,IAAI,EAAE;AACJ,MAAA,UAAU,EAAE,MAAM,GAAG,CAAH,GAAO,KAAK,CAAC,UAD3B;AAEJ,+BAAyB;AACvB,QAAA,SAAS,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,UAAA,IAAI,EAAE,OAAR;AAAiB,UAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,SAAd;AADY;AAFrB,KAFD;AAQL,IAAA,QAAQ,EAAE;AACR,MAAA,SAAS,EAAE,MADH;AAER,OAAE,MAAK,WAAW,CAAC,GAAI,EAAvB,GAA2B;AACzB,QAAA,OAAO,EAAE,aADgB;AAEzB,QAAA,UAAU,EAAE,MAAM,GAAG,QAAH,GAAc;AAFP;AAFnB,KARL;AAeL,IAAA,QAAQ,EAAE;AACR,MAAA,OAAO,EAAE,cADD;AAER,MAAA,aAAa,EAAE,QAFP;AAGR,MAAA,WAAW,EAAE,KAAK,CAAC,OAAN,CAAc;AAHnB;AAfL,GAAP;AAqBD,CA1B0B,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\n\ninterface ListItemStyles {\n  spacing: MantineNumberSize;\n  center: boolean;\n}\n\nexport default createStyles((theme, { spacing, center }: ListItemStyles, getRef) => {\n  const itemWrapper = {\n    ref: getRef('itemWrapper'),\n    display: 'inline',\n  } as const;\n\n  return {\n    itemWrapper,\n\n    item: {\n      lineHeight: center ? 1 : theme.lineHeight,\n\n      '&:not(:first-of-type)': {\n        marginTop: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      },\n    },\n\n    withIcon: {\n      listStyle: 'none',\n\n      [`& .${itemWrapper.ref}`]: {\n        display: 'inline-flex',\n        alignItems: center ? 'center' : 'flex-start',\n      },\n    },\n\n    itemIcon: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      marginRight: theme.spacing.sm,\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}