{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { clamp, assignRef, useMergedRef } from '@mantine/hooks';\nimport { TextInput } from '../TextInput/TextInput.js';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultFormatter = value => value || \"\";\n\nconst defaultParser = num => {\n  const parsedNum = parseFloat(num);\n\n  if (Number.isNaN(parsedNum)) {\n    return void 0;\n  }\n\n  return num;\n};\n\nconst NumberInput = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    disabled,\n    value,\n    onChange,\n    decimalSeparator,\n    min,\n    max,\n    step = 1,\n    stepHoldInterval,\n    stepHoldDelay,\n    onBlur,\n    onFocus,\n    hideControls = false,\n    radius = \"sm\",\n    variant,\n    precision = 0,\n    defaultValue,\n    noClampOnBlur = false,\n    handlersRef,\n    classNames,\n    styles,\n    size,\n    rightSection,\n    formatter = defaultFormatter,\n    parser = defaultParser\n  } = _b,\n      others = __objRest(_b, [\"disabled\", \"value\", \"onChange\", \"decimalSeparator\", \"min\", \"max\", \"step\", \"stepHoldInterval\", \"stepHoldDelay\", \"onBlur\", \"onFocus\", \"hideControls\", \"radius\", \"variant\", \"precision\", \"defaultValue\", \"noClampOnBlur\", \"handlersRef\", \"classNames\", \"styles\", \"size\", \"rightSection\", \"formatter\", \"parser\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    radius,\n    size\n  }, {\n    classNames,\n    styles,\n    name: \"NumberInput\"\n  });\n  const [focused, setFocused] = useState(false);\n  const [_value, setValue] = useState(typeof value === \"number\" ? value : typeof defaultValue === \"number\" ? defaultValue : void 0);\n  const finalValue = typeof value === \"number\" ? value : _value;\n  const [tempValue, setTempValue] = useState(typeof finalValue === \"number\" ? finalValue.toFixed(precision) : \"\");\n  const inputRef = useRef();\n\n  const handleValueChange = val => {\n    typeof onChange === \"function\" && onChange(val);\n    setValue(val);\n  };\n\n  const formatNum = function () {\n    let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let parsedStr = typeof val === \"number\" ? String(val) : val;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n\n    return formatter(parsedStr);\n  };\n\n  const parseNum = val => {\n    let num = val;\n\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, \"g\"), \".\");\n    }\n\n    return parser(num);\n  };\n\n  const _min = typeof min === \"number\" ? min : -Infinity;\n\n  const _max = typeof max === \"number\" ? max : Infinity;\n\n  const incrementRef = useRef();\n\n  incrementRef.current = () => {\n    var _a2;\n\n    if (_value === void 0) {\n      handleValueChange(min != null ? min : 0);\n      setTempValue((_a2 = min == null ? void 0 : min.toFixed(precision)) != null ? _a2 : \"0\");\n    } else {\n      const result = clamp({\n        value: _value + step,\n        min: _min,\n        max: _max\n      }).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  const decrementRef = useRef();\n\n  decrementRef.current = () => {\n    var _a2;\n\n    if (_value === void 0) {\n      handleValueChange(min != null ? min : 0);\n      setTempValue((_a2 = min == null ? void 0 : min.toFixed(precision)) != null ? _a2 : \"0\");\n    } else {\n      const result = clamp({\n        value: _value - step,\n        min: _min,\n        max: _max\n      }).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current\n  });\n  useEffect(() => {\n    if (typeof value === \"number\" && !focused) {\n      setValue(value);\n      setTempValue(value.toFixed(precision));\n    }\n\n    if (defaultValue === void 0 && value === void 0 && !focused) {\n      setValue(value);\n      setTempValue(\"\");\n    }\n  }, [value]);\n  const shouldUseStepInterval = stepHoldDelay !== void 0 && stepHoldInterval !== void 0;\n  const onStepTimeoutRef = useRef(null);\n  const stepCountRef = useRef(0);\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const onStepHandleChange = isIncrement => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = isIncrement => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval = typeof stepHoldInterval === \"number\" ? stepHoldInterval : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (event, isIncrement) => {\n    event.preventDefault();\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n  const controls = /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.rightSection\n  }, /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue >= max,\n    className: cx(classes.control, classes.controlUp),\n    onMouseDown: event => {\n      onStep(event, true);\n    },\n    onMouseUp: onStepDone,\n    onMouseLeave: onStepDone\n  }), /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue <= min,\n    className: cx(classes.control, classes.controlDown),\n    onMouseDown: event => {\n      onStep(event, false);\n    },\n    onMouseUp: onStepDone,\n    onMouseLeave: onStepDone\n  }));\n\n  const handleChange = event => {\n    const val = event.target.value;\n    const parsed = parseNum(val);\n    setTempValue(parsed);\n\n    if (val === \"\") {\n      handleValueChange(void 0);\n    } else {\n      val.trim() !== \"\" && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n\n  const handleBlur = event => {\n    var _a2;\n\n    if (event.target.value === \"\") {\n      setTempValue(\"\");\n      handleValueChange(void 0);\n    } else {\n      const parsedVal = parseNum(event.target.value);\n      const val = clamp({\n        value: parseFloat(parsedVal),\n        min: _min,\n        max: _max\n      });\n\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(val.toFixed(precision));\n          handleValueChange(parseFloat(val.toFixed(precision)));\n        }\n      } else {\n        setTempValue((_a2 = finalValue == null ? void 0 : finalValue.toFixed(precision)) != null ? _a2 : \"\");\n      }\n    }\n\n    setFocused(false);\n    typeof onBlur === \"function\" && onBlur(event);\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    typeof onFocus === \"function\" && onFocus(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.repeat && shouldUseStepInterval) {\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      onStep(event, true);\n    } else if (event.key === \"ArrowDown\") {\n      onStep(event, false);\n    }\n  };\n\n  const handleKeyUp = event => {\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      onStepDone();\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(TextInput, __spreadProps(__spreadValues({}, others), {\n    variant,\n    value: formatNum(tempValue),\n    disabled,\n    ref: useMergedRef(inputRef, ref),\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    rightSection: rightSection || (disabled || hideControls || variant === \"unstyled\" ? null : controls),\n    rightSectionWidth: theme.fn.size({\n      size,\n      sizes: CONTROL_SIZES\n    }) + 1,\n    radius,\n    max,\n    min,\n    step,\n    size,\n    styles,\n    classNames,\n    inputMode: Number.isInteger(step) && precision === 0 ? \"numeric\" : \"decimal\",\n    __staticSelector: \"NumberInput\"\n  }));\n});\nNumberInput.displayName = \"@mantine/core/NumberInput\";\nexport { NumberInput };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\NumberInput\\NumberInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useMergedRef, assignRef, clamp } from '@mantine/hooks';\nimport { DefaultProps, ClassNames } from '@mantine/styles';\nimport { TextInput } from '../TextInput/TextInput';\nimport { InputStylesNames } from '../Input/Input';\nimport { InputWrapperStylesNames } from '../InputWrapper/InputWrapper';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles';\n\nexport type InnerNumberInputStylesNames = ClassNames<typeof useStyles>;\nexport type NumberInputStylesNames =\n  | InputStylesNames\n  | InputWrapperStylesNames\n  | InnerNumberInputStylesNames;\n\nexport interface NumberInputHandlers {\n  increment(): void;\n  decrement(): void;\n}\n\ntype Formatter = (value: string | undefined) => string;\ntype Parser = (value: string | undefined) => string | undefined;\n\nexport interface NumberInputProps\n  extends DefaultProps<NumberInputStylesNames>,\n    Omit<\n      React.ComponentPropsWithoutRef<typeof TextInput>,\n      'onChange' | 'value' | 'classNames' | 'styles'\n    > {\n  /** onChange input handler for controlled variant, note that input event is not exposed. It will return undefined if the input is empty, otherwise it'll return a number */\n  onChange?(value: number | undefined): void;\n\n  /** Input value for controlled variant */\n  value?: number | undefined;\n\n  /** The decimal separator */\n  decimalSeparator?: string;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Default value for uncontrolled variant only */\n  defaultValue?: number | undefined;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n\n  /** Get increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Formats the number into the input */\n  formatter?: Formatter;\n\n  /** Parsers the value from formatter, should be used with formatter at the same time */\n  parser?: Parser;\n}\n\nconst defaultFormatter: Formatter = (value) => value || '';\nconst defaultParser: Parser = (num) => {\n  const parsedNum = parseFloat(num);\n\n  if (Number.isNaN(parsedNum)) {\n    return undefined;\n  }\n\n  return num;\n};\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>(\n  (\n    {\n      disabled,\n      value,\n      onChange,\n      decimalSeparator,\n      min,\n      max,\n      step = 1,\n      stepHoldInterval,\n      stepHoldDelay,\n      onBlur,\n      onFocus,\n      hideControls = false,\n      radius = 'sm',\n      variant,\n      precision = 0,\n      defaultValue,\n      noClampOnBlur = false,\n      handlersRef,\n      classNames,\n      styles,\n      size,\n      rightSection,\n      formatter = defaultFormatter,\n      parser = defaultParser,\n      ...others\n    }: NumberInputProps,\n    ref\n  ) => {\n    const { classes, cx, theme } = useStyles(\n      { radius, size },\n      { classNames, styles, name: 'NumberInput' }\n    );\n    const [focused, setFocused] = useState(false);\n    const [_value, setValue] = useState(\n      typeof value === 'number'\n        ? value\n        : typeof defaultValue === 'number'\n        ? defaultValue\n        : undefined\n    );\n    const finalValue = typeof value === 'number' ? value : _value;\n    const [tempValue, setTempValue] = useState(\n      typeof finalValue === 'number' ? finalValue.toFixed(precision) : ''\n    );\n    const inputRef = useRef<HTMLInputElement>();\n    const handleValueChange = (val: number | undefined) => {\n      typeof onChange === 'function' && onChange(val);\n      setValue(val);\n    };\n\n    const formatNum = (val: string | number = '') => {\n      let parsedStr = typeof val === 'number' ? String(val) : val;\n\n      if (decimalSeparator) {\n        parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n      }\n\n      return formatter(parsedStr);\n    };\n\n    const parseNum = (val: string): string | undefined => {\n      let num = val;\n\n      if (decimalSeparator) {\n        num = num.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.');\n      }\n\n      return parser(num);\n    };\n\n    const _min = typeof min === 'number' ? min : -Infinity;\n    const _max = typeof max === 'number' ? max : Infinity;\n\n    const incrementRef = useRef<() => void>();\n    incrementRef.current = () => {\n      if (_value === undefined) {\n        handleValueChange(min ?? 0);\n        setTempValue(min?.toFixed(precision) ?? '0');\n      } else {\n        const result = clamp({ value: _value + step, min: _min, max: _max }).toFixed(precision);\n\n        handleValueChange(parseFloat(result));\n        setTempValue(result);\n      }\n    };\n\n    const decrementRef = useRef<() => void>();\n    decrementRef.current = () => {\n      if (_value === undefined) {\n        handleValueChange(min ?? 0);\n        setTempValue(min?.toFixed(precision) ?? '0');\n      } else {\n        const result = clamp({ value: _value - step, min: _min, max: _max }).toFixed(precision);\n        handleValueChange(parseFloat(result));\n        setTempValue(result);\n      }\n    };\n\n    assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n    useEffect(() => {\n      if (typeof value === 'number' && !focused) {\n        setValue(value);\n        setTempValue(value.toFixed(precision));\n      }\n      if (defaultValue === undefined && value === undefined && !focused) {\n        setValue(value);\n        setTempValue('');\n      }\n    }, [value]);\n\n    const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n    const onStepTimeoutRef = useRef<number>(null);\n    const stepCountRef = useRef<number>(0);\n\n    const onStepDone = () => {\n      if (onStepTimeoutRef.current) {\n        window.clearTimeout(onStepTimeoutRef.current);\n      }\n      onStepTimeoutRef.current = null;\n      stepCountRef.current = 0;\n    };\n\n    const onStepHandleChange = (isIncrement: boolean) => {\n      if (isIncrement) {\n        incrementRef.current();\n      } else {\n        decrementRef.current();\n      }\n      stepCountRef.current += 1;\n    };\n\n    const onStepLoop = (isIncrement: boolean) => {\n      onStepHandleChange(isIncrement);\n\n      if (shouldUseStepInterval) {\n        const interval =\n          typeof stepHoldInterval === 'number'\n            ? stepHoldInterval\n            : stepHoldInterval(stepCountRef.current);\n        onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n      }\n    };\n\n    const onStep = (\n      event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n      isIncrement: boolean\n    ) => {\n      event.preventDefault();\n      onStepHandleChange(isIncrement);\n      if (shouldUseStepInterval) {\n        onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n      }\n      inputRef.current.focus();\n    };\n\n    useEffect(() => {\n      onStepDone();\n      return onStepDone;\n    }, []);\n\n    const controls = (\n      <div className={classes.rightSection}>\n        <button\n          type=\"button\"\n          tabIndex={-1}\n          aria-hidden\n          disabled={finalValue >= max}\n          className={cx(classes.control, classes.controlUp)}\n          onMouseDown={(event) => {\n            onStep(event, true);\n          }}\n          onMouseUp={onStepDone}\n          onMouseLeave={onStepDone}\n        />\n        <button\n          type=\"button\"\n          tabIndex={-1}\n          aria-hidden\n          disabled={finalValue <= min}\n          className={cx(classes.control, classes.controlDown)}\n          onMouseDown={(event) => {\n            onStep(event, false);\n          }}\n          onMouseUp={onStepDone}\n          onMouseLeave={onStepDone}\n        />\n      </div>\n    );\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const val = event.target.value;\n      const parsed = parseNum(val);\n\n      setTempValue(parsed);\n\n      if (val === '') {\n        handleValueChange(undefined);\n      } else {\n        val.trim() !== '' && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n      }\n    };\n\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n      if (event.target.value === '') {\n        setTempValue('');\n        handleValueChange(undefined);\n      } else {\n        const parsedVal = parseNum(event.target.value);\n        const val = clamp({ value: parseFloat(parsedVal), min: _min, max: _max });\n\n        if (!Number.isNaN(val)) {\n          if (!noClampOnBlur) {\n            setTempValue(val.toFixed(precision));\n            handleValueChange(parseFloat(val.toFixed(precision)));\n          }\n        } else {\n          setTempValue(finalValue?.toFixed(precision) ?? '');\n        }\n      }\n\n      setFocused(false);\n      typeof onBlur === 'function' && onBlur(event);\n    };\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(true);\n      typeof onFocus === 'function' && onFocus(event);\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.repeat && shouldUseStepInterval) {\n        event.preventDefault();\n        return;\n      }\n\n      if (event.key === 'ArrowUp') {\n        onStep(event, true);\n      } else if (event.key === 'ArrowDown') {\n        onStep(event, false);\n      }\n    };\n\n    const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n        onStepDone();\n      }\n    };\n\n    return (\n      <TextInput\n        {...others}\n        variant={variant}\n        value={formatNum(tempValue)}\n        disabled={disabled}\n        ref={useMergedRef(inputRef, ref)}\n        type=\"text\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        rightSection={\n          rightSection || (disabled || hideControls || variant === 'unstyled' ? null : controls)\n        }\n        rightSectionWidth={theme.fn.size({ size, sizes: CONTROL_SIZES }) + 1}\n        radius={radius}\n        max={max}\n        min={min}\n        step={step}\n        size={size}\n        styles={styles}\n        classNames={classNames}\n        inputMode={Number.isInteger(step) && precision === 0 ? 'numeric' : 'decimal'}\n        __staticSelector=\"NumberInput\"\n      />\n    );\n  }\n);\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"]},"metadata":{},"sourceType":"module"}