{"ast":null,"code":"import e from \"axios\";\nimport t from \"js-cookie\";\nconst n = {\n  user: {},\n  tokens: {},\n  mode: \"live\"\n};\n\nfunction r(e) {\n  try {\n    const t = e.split(\".\")[1].replace(\"-\", \"+\").replace(\"_\", \"/\");\n    return JSON.parse(atob(t));\n  } catch (e) {\n    console.error(\"Problem decoding JWT payload\", e);\n  }\n}\n\nfunction o(e) {\n  var t, n;\n\n  if (e) {\n    if (\"string\" == typeof e) throw new Error(e);\n    if (null != e && null != (t = e.response) && null != (n = t.data) && n.message) throw new Error(e.response.data.message);\n    throw e;\n  }\n}\n\nconst s = n.user;\n\nfunction i(e, r, o) {\n  const s = `${o}.${n.tenantId}`;\n  r = r || {\n    secure: \"live\" === n.mode,\n    sameSite: \"Lax\"\n  }, \"refresh\" === o && (r.sameSite = \"Strict\"), t.set(s, e, r);\n}\n\nfunction a(e) {\n  t.remove(e), t.remove(e, {\n    secure: !0,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !0,\n    sameSite: \"None\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"None\"\n  });\n}\n\nfunction c() {\n  a(n.tokens.accessTokenName), a(n.tokens.idTokenName), a(n.tokens.refreshTokenName), n.tokens.accessToken = void 0, n.tokens.idToken = void 0, n.tokens.refreshToken = void 0, function () {\n    for (const e in n.user) \"function\" != typeof n.user[e] && delete n.user[e];\n  }();\n}\n\nfunction u(e) {\n  i(e.access.value, e.access.cookieOptions, \"access\"), i(e.id.value, e.id.cookieOptions, \"id\"), e.refresh && e.refresh.value && i(e.refresh.value, e.refresh.cookieOptions, \"refresh\"), f();\n}\n\nfunction d(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst l = function (_ref) {\n  let {} = _ref;\n  return Promise.resolve();\n},\n      h = function () {\n  try {\n    const r = d(function () {\n      return Promise.resolve(function () {\n        try {\n          const r = t.get(n.tokens.refreshTokenName);\n          return Promise.resolve(d(function () {\n            return Promise.resolve(e.get(n.baseUrl + \"auth/refresh\", {\n              headers: {\n                authorization: \"Bearer \" + r\n              }\n            })).then(function (_ref2) {\n              let {\n                data: e,\n                status: t\n              } = _ref2;\n              if (200 !== t) throw new Error(e.message || \"Problem with request\");\n              if (e.tokens) return u(e.tokens), e;\n              throw new Error(\"Problem setting cookies\");\n            });\n          }, function (e) {\n            o(e);\n          }));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }()).then(function () {});\n    }, function (e) {\n      console.warn(\"Refresh failed: \" + e.message);\n    });\n    return Promise.resolve(r && r.then ? r.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction f() {\n  [\"access\", \"id\", \"refresh\"].map(e => {\n    try {\n      const o = t.get(n.tokens[e + \"TokenName\"]);\n      n.tokens[e + \"Token\"] = o, \"id\" === e && o && function () {\n        if (!n.tokens.idToken) return console.warn(\"Cannot define user: missing ID token\");\n        n.user = n.user || {};\n        const e = r(n.tokens.idToken),\n              t = [\"email\", \"username\", \"name\", \"image\", \"data\", \"confirmedAt\", \"createdAt\", \"updatedAt\", \"mode\", \"userId\", \"userUuid\", \"tenantId\", \"isConfirmed\"];\n\n        for (const r of t) {\n          if (\"update\" === r) return;\n          n.user[r] = e[r];\n        }\n      }();\n    } catch (t) {\n      console.warn(`Problem setting ${e} token.`);\n    }\n  });\n}\n\nn.tokens = n.tokens || {}, n.tokens.refresh = h;\nconst m = n.tokens;\n\nfunction w(e) {\n  if (\"object\" == typeof window && \"object\" == typeof window.location && window.location.href && !(window.location.href.indexOf(e + \"=\") < 0)) return decodeURIComponent(window.location.href.split(e + \"=\")[1].split(\"&\")[0]);\n}\n\nfunction p(e) {\n  if (!e || \"object\" != typeof document || \"object\" != typeof window) return;\n\n  try {\n    document && window;\n  } catch (e) {\n    return;\n  }\n\n  const t = document.createElement(\"a\");\n  t.href = e, t.pathname !== window.location.pathname && window.location.assign(`${t.pathname}${t.hash}${t.search}`);\n}\n\nfunction k(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst v = function (_ref3) {\n  let {\n    email: t,\n    name: r,\n    username: s,\n    userData: i,\n    options: a\n  } = _ref3;\n\n  try {\n    return Promise.resolve(k(function () {\n      return Promise.resolve(e.post(n.baseUrl + \"auth/link\", {\n        email: t,\n        name: r,\n        username: s,\n        data: i,\n        options: a,\n        tenantId: n.tenantId\n      })).then(function (_ref4) {\n        let {\n          data: e\n        } = _ref4;\n        return e;\n      });\n    }, function (e) {\n      o(e);\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction g(_ref5) {\n  let {\n    provider: e,\n    redirect: t\n  } = _ref5;\n  if (!e) throw new Error(\"Missing provider\");\n  if (!n.tenantId) throw new Error(\"Missing tenant ID\");\n  let r = `${n.baseUrl}auth/${e}/login?tenant_id=${n.tenantId}&origin=${window.location.origin}`,\n      o = t || w(\"redirect\");\n  return !1 === t && (o = \"object\" == typeof document && document.location.pathname), o && (r += \"&redirect=\" + encodeURIComponent(o)), r;\n}\n\nfunction P(e, t) {\n  try {\n    var n = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return n && n.then ? n.then(void 0, t) : n;\n}\n\nconst y = /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g,\n      b = function () {\n  try {\n    const t = function (t, r) {\n      try {\n        var o = Promise.resolve(e.get(`${n.baseUrl}tenants/${n.tenantId}/mode`)).then(function (_ref6) {\n          let {\n            data: e\n          } = _ref6;\n          T.value = e.mode || \"test\", T.reason = U(T.value), n.mode = T.value;\n        });\n      } catch (e) {\n        return r();\n      }\n\n      return o && o.then ? o.then(void 0, r) : o;\n    }(0, function () {\n      T.value = \"test\", n.mode = T.value;\n    });\n\n    return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n      T = {\n  value: \"live\",\n  reason: void 0,\n  setMode: b\n};\n\nfunction I() {\n  const e = function (e) {\n    try {\n      const e = window.location.hostname;\n      return !(!e.match(/localhost/g) && !e.match(y));\n    } catch (e) {\n      return !0;\n    }\n  }() || !function () {\n    try {\n      return \"https:\" === window.location.protocol;\n    } catch (e) {\n      return !1;\n    }\n  }() ? \"test\" : \"live\";\n  T.value = e, T.reason = U(e), n.mode = e;\n}\n\nfunction U(e) {\n  try {\n    return \"live\" === e ? \"domain\" : \"http:\" === window.location.protocol ? \"http\" : \"https:\" !== window.location.protocol ? \"protocol\" : \"domain\";\n  } catch (e) {}\n}\n\nI(), n.user.update = function (t) {\n  try {\n    return !t || Object.keys(t).length < 1 ? Promise.resolve(console.warn(\"Missing user properties to update\")) : Promise.resolve(e.put(n.baseUrl + \"self\", t, {\n      headers: {\n        authorization: \"Bearer \" + n.tokens.accessToken\n      }\n    })).then(function () {\n      return Promise.resolve(h()).then(function () {\n        return n.user;\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}, n.user.hasRole = function (e) {\n  let {\n    tenantId: t\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    if (!n.tokens.accessToken || !n.tenantId) return !1;\n    const {\n      authorization: o\n    } = r(n.tokens.accessToken);\n    return !!o && !(!o[t = t || n.tenantId] || !o[t].roles) && o[t].roles.indexOf(e) > -1;\n  } catch (e) {\n    return !1;\n  }\n};\nlet E = [],\n    j = !1;\nvar $ = {\n  addInitCallback: function (e) {\n    e && \"function\" == typeof e && E.push(e);\n  },\n  init: function (t) {\n    let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!t) return console.warn(\"Userfront initialized without tenant ID\");\n    n.tenantId = t, n.baseUrl = r.baseUrl || \"https://api.userfront.com/v0/\", n.baseUrl.endsWith(\"/\") || (n.baseUrl += \"/\"), r.domain && (n.domain = r.domain, e.defaults.headers.common[\"x-application-id\"] = \"https://\" + n.domain), n.tokens = n.tokens || {}, n.tokens.accessTokenName = \"access.\" + n.tenantId, n.tokens.idTokenName = \"id.\" + n.tenantId, n.tokens.refreshTokenName = \"refresh.\" + n.tenantId, f(), I();\n\n    try {\n      E.length > 0 && E.forEach(e => {\n        e && \"function\" == typeof e && e({\n          tenantId: t\n        });\n      }), E = [];\n    } catch (e) {}\n  },\n  registerUrlChangedEventListener: function () {\n    if (!j) {\n      j = !0;\n\n      try {\n        history.pushState = (e = history.pushState, function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"pushstate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        }), history.replaceState = (e => function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"replacestate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        })(history.replaceState), window.addEventListener(\"popstate\", () => {\n          window.dispatchEvent(new Event(\"urlchanged\"));\n        });\n      } catch (e) {}\n\n      var e;\n    }\n  },\n  logout: function () {\n    let {\n      method: t,\n      redirect: r\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      return \"saml\" === t ? function () {\n        try {\n          if (!n.tokens.accessToken) throw new Error(\"Please log in to authorize your logout request.\");\n          const t = P(function () {\n            return Promise.resolve(e.get(n.baseUrl + \"auth/saml/idp/token\", {\n              headers: {\n                authorization: \"Bearer \" + n.tokens.accessToken\n              }\n            })).then(function (_ref7) {\n              let {\n                data: e\n              } = _ref7;\n              window.location.assign(`${n.baseUrl}auth/saml/idp/logout?tenant_id=${n.tenantId}&token=${e.token}&uuid=${n.user.userUuid}`);\n            });\n          }, function (e) {\n            o(e);\n          });\n          return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }() : Promise.resolve(n.tokens.accessToken ? P(function () {\n        return Promise.resolve(e.get(n.baseUrl + \"auth/logout\", {\n          headers: {\n            authorization: \"Bearer \" + n.tokens.accessToken\n          }\n        })).then(function (_ref8) {\n          let {\n            data: e\n          } = _ref8;\n          c(), !1 !== r && p(r || e.redirectTo);\n        });\n      }, function () {\n        c();\n      }) : c());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  mode: T,\n  setMode: b,\n  refresh: (e, t, n) => {\n    try {\n      console.warn(\"Userfront.refresh() is deprecated and will be removed. Please use Userfront.tokens.refresh() instead.\");\n    } catch (e) {}\n\n    return h();\n  },\n  login: function () {\n    let {\n      method: t,\n      email: r,\n      username: s,\n      emailOrUsername: i,\n      password: a,\n      token: c,\n      uuid: d,\n      redirect: h\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!t) throw new Error('Userfront.login called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (_ref9) {\n            let {\n              provider: e,\n              redirect: t\n            } = _ref9;\n            if (!e) throw new Error(\"Missing provider\");\n            const n = g({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(n);\n          }({\n            provider: t,\n            redirect: h\n          }));\n\n        case \"password\":\n          return function (_ref10) {\n            let {\n              email: t,\n              username: r,\n              emailOrUsername: s,\n              password: i,\n              redirect: a\n            } = _ref10;\n\n            try {\n              return Promise.resolve(k(function () {\n                return Promise.resolve(e.post(n.baseUrl + \"auth/basic\", {\n                  tenantId: n.tenantId,\n                  emailOrUsername: t || r || s,\n                  password: i\n                })).then(function (_ref11) {\n                  let {\n                    data: e\n                  } = _ref11;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === a || p(a || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            email: r,\n            username: s,\n            emailOrUsername: i,\n            password: a,\n            redirect: h\n          });\n\n        case \"passwordless\":\n          return v({\n            email: r\n          });\n\n        case \"link\":\n          return function () {\n            let {\n              token: t,\n              uuid: r,\n              redirect: s\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            try {\n              return Promise.resolve(k(function () {\n                if (t = t || w(\"token\"), r = r || w(\"uuid\"), t && r) return Promise.resolve(e.put(n.baseUrl + \"auth/link\", {\n                  token: t,\n                  uuid: r,\n                  tenantId: n.tenantId\n                })).then(function (_ref12) {\n                  let {\n                    data: e\n                  } = _ref12;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === s || p(s || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Problem logging in.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            token: c,\n            uuid: d,\n            redirect: h\n          });\n\n        case \"saml\":\n          return function () {\n            try {\n              return Promise.resolve(k(function () {\n                return n.tokens.accessToken ? Promise.resolve(e.get(n.baseUrl + \"auth/saml/idp/token\", {\n                  headers: {\n                    authorization: \"Bearer \" + n.tokens.accessToken\n                  }\n                })).then(function (_ref13) {\n                  let {\n                    data: e\n                  } = _ref13;\n                  window.location.assign(`${n.baseUrl}auth/saml/idp/login?tenant_id=${n.tenantId}&token=${e.token}&uuid=${n.user.userUuid}`);\n                }) : console.warn(\"Cannot complete SAML login without access token\");\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }();\n\n        default:\n          throw new Error('Userfront.login called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  resetPassword: function (_ref14) {\n    let {\n      uuid: t,\n      token: r,\n      password: s,\n      redirect: i\n    } = _ref14;\n\n    try {\n      return Promise.resolve(k(function () {\n        if (r = r || w(\"token\"), t = t || w(\"uuid\"), !r || !t) throw new Error(\"Missing token or uuid\");\n        return Promise.resolve(e.put(n.baseUrl + \"auth/reset\", {\n          tenantId: n.tenantId,\n          uuid: t,\n          token: r,\n          password: s\n        })).then(function (_ref15) {\n          let {\n            data: e\n          } = _ref15;\n          if (e.tokens) return u(e.tokens), !1 === i || p(i || w(\"redirect\") || e.redirectTo || \"/\"), e;\n          throw new Error(\"There was a problem resetting your password. Please try again.\");\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendLoginLink: function (t) {\n    try {\n      return Promise.resolve(k(function () {\n        return Promise.resolve(e.post(n.baseUrl + \"auth/link\", {\n          email: t,\n          tenantId: n.tenantId\n        })).then(function (_ref16) {\n          let {\n            data: e\n          } = _ref16;\n          return e;\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendResetLink: function (t) {\n    try {\n      return Promise.resolve(k(function () {\n        return Promise.resolve(e.post(n.baseUrl + \"auth/reset/link\", {\n          email: t,\n          tenantId: n.tenantId\n        })).then(function (_ref17) {\n          let {\n            data: e\n          } = _ref17;\n          return e;\n        });\n      }, function (e) {\n        o(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  signup: function () {\n    let {\n      method: t,\n      username: r,\n      name: s,\n      email: i,\n      password: a,\n      data: c,\n      redirect: d\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!t) throw new Error('Userfront.signup called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function (_ref18) {\n            let {\n              provider: e,\n              redirect: t\n            } = _ref18;\n            if (!e) throw new Error(\"Missing provider\");\n            const n = g({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(n);\n          }({\n            provider: t,\n            redirect: d\n          }));\n\n        case \"password\":\n          return function () {\n            let {\n              username: t,\n              name: r,\n              email: s,\n              password: i,\n              userData: a,\n              redirect: c\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            try {\n              return Promise.resolve(k(function () {\n                return Promise.resolve(e.post(n.baseUrl + \"auth/create\", {\n                  tenantId: n.tenantId,\n                  username: t,\n                  name: r,\n                  email: s,\n                  password: i,\n                  data: a\n                })).then(function (_ref19) {\n                  let {\n                    data: e\n                  } = _ref19;\n                  if (e.tokens) return u(e.tokens), Promise.resolve(l(e)).then(function () {\n                    return !1 === c || p(c || w(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                o(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            username: r,\n            name: s,\n            email: i,\n            password: a,\n            userData: c,\n            redirect: d\n          });\n\n        case \"passwordless\":\n          return v({\n            email: i,\n            name: s,\n            username: r,\n            userData: c\n          });\n\n        default:\n          throw new Error('Userfront.signup called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  store: n,\n  tokens: m,\n  accessToken: function () {\n    return n.tokens.accessToken = t.get(n.tokens.accessTokenName), n.tokens.accessToken;\n  },\n  idToken: function () {\n    return n.tokens.idToken = t.get(n.tokens.idTokenName), n.tokens.idToken;\n  },\n  redirectIfLoggedIn: function () {\n    let {\n      redirect: t\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      if (!n.tokens.accessToken) return Promise.resolve(c());\n      if (t) return Promise.resolve(p(t));\n      if (w(\"redirect\")) return Promise.resolve(p(w(\"redirect\")));\n\n      const r = function (t, r) {\n        try {\n          var o = Promise.resolve(e.get(n.baseUrl + \"self\", {\n            headers: {\n              authorization: \"Bearer \" + n.tokens.accessToken\n            }\n          })).then(function (_ref20) {\n            let {\n              data: e\n            } = _ref20;\n            e.tenant && e.tenant.loginRedirectPath && p(e.tenant.loginRedirectPath);\n          });\n        } catch (e) {\n          return r();\n        }\n\n        return o && o.then ? o.then(void 0, r) : o;\n      }(0, function () {\n        c();\n      });\n\n      return Promise.resolve(r && r.then ? r.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  user: s\n};\nexport default $;","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\store.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\utils.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\user.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\cookies.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\tokens.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\refresh.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\url.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\signon.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\logout.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\constants.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\mode.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\user.methods.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\@userfront\\core\\src\\index.js"],"names":["store","user","tokens","mode","getJWTPayload","token","encodedPayload","split","replace","JSON","parse","atob","error","console","throwFormattedError","Error","response","data","message","idToken","warn","idTokenPayload","propsToDefine","prop","attr","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","Cookies","set","removeCookie","name","remove","removeAllCookies","accessTokenName","idTokenName","refreshTokenName","setCookiesAndTokens","access","cookieOptions","id","refresh","setTokensFromCookies","accessToken","get","map","tokenName","setUser","undefined","refreshToken","unsetUser","basicRefresh","status","axios","baseUrl","headers","authorization","exchange","body","recover","result","e","then","getQueryAttr","attrName","window","location","href","indexOf","decodeURIComponent","redirect","redirectToPath","tenant","loginRedirectPath","pathOrUrl","document","el","createElement","pathname","hash","search","method","username","email","password","signupWithSSO","provider","signupWithPassword","userData","sendPasswordlessLink","url","getProviderLink","assign","post","redirectTo","emailOrUsername","uuid","loginWithSSO","loginWithPassword","loginWithLink","completeSamlLogin","origin","encodeURIComponent","userUuid","put","completeSamlLogout","privateIPRegex","reason","setMode","setModeSync","hn","hostname","match","err","protocol","getReason","modeValue","isTestHostname","isHttps","payload","Object","keys","length","roleName","roles","update","hasRole","initCallbacks","opts","endsWith","domain","defaults","common","forEach","cb","push","isRegistered","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","addInitCallback","init","registerUrlChangedEventListener","logout","a","b","c","login","resetPassword","sendLoginLink","sendResetLink","signup","redirectIfLoggedIn"],"mappings":"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","sourcesContent":["export const store = {\n  user: {},\n  tokens: {},\n  mode: \"live\",\n};\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\n/**\n * Get the unverified base64 decoded payload of a JWT\n *\n * @param {String} token - JSON Web Token\n * @returns {Object}\n */\nexport function getJWTPayload(token) {\n  try {\n    const encodedPayload = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    return JSON.parse(atob(encodedPayload));\n  } catch (error) {\n    console.error(\"Problem decoding JWT payload\", error);\n  }\n}\n\nexport function throwFormattedError(error) {\n  if (!error) return;\n  if (typeof error === \"string\") throw new Error(error);\n  if (error?.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n}\n","import { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Define the store.user object based on the ID token\n */\nexport function setUser() {\n  if (!store.tokens.idToken) {\n    return console.warn(\"Cannot define user: missing ID token\");\n  }\n\n  store.user = store.user || {};\n  const idTokenPayload = getJWTPayload(store.tokens.idToken);\n\n  // Set basic user information properties from ID token\n  const propsToDefine = [\n    \"email\",\n    \"username\",\n    \"name\",\n    \"image\",\n    \"data\",\n    \"confirmedAt\",\n    \"createdAt\",\n    \"updatedAt\",\n    \"mode\",\n    \"userId\",\n    \"userUuid\",\n    \"tenantId\",\n    \"isConfirmed\",\n  ];\n  for (const prop of propsToDefine) {\n    if (prop === \"update\") return;\n    store.user[prop] = idTokenPayload[prop];\n  }\n}\n\n/**\n * Remove all user information\n */\nexport function unsetUser() {\n  for (const attr in store.user) {\n    if (typeof store.user[attr] !== \"function\") {\n      delete store.user[attr];\n    }\n  }\n}\n\n/**\n * Export the store.user object with the update method added\n */\nexport const user = store.user;\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies, unsetTokens } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.tokens.accessTokenName);\n  removeCookie(store.tokens.idTokenName);\n  removeCookie(store.tokens.refreshTokenName);\n  unsetTokens();\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  if (tokens.refresh && tokens.refresh.value) {\n    setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  }\n  setTokensFromCookies();\n}\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setUser, unsetUser } from \"./user.js\";\nimport { refresh } from \"./refresh.js\";\n\nstore.tokens = store.tokens || {};\nstore.tokens.refresh = refresh;\n\nexport function setTokenNames() {\n  store.tokens = store.tokens || {};\n  store.tokens.accessTokenName = `access.${store.tenantId}`;\n  store.tokens.idTokenName = `id.${store.tenantId}`;\n  store.tokens.refreshTokenName = `refresh.${store.tenantId}`;\n}\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.tokens.accessToken = Cookies.get(store.tokens.accessTokenName);\n  return store.tokens.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.tokens.idToken = Cookies.get(store.tokens.idTokenName);\n  return store.tokens.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  const tokenNames = [\"access\", \"id\", \"refresh\"];\n  tokenNames.map((tokenName) => {\n    try {\n      const token = Cookies.get(store.tokens[`${tokenName}TokenName`]);\n      store.tokens[`${tokenName}Token`] = token;\n\n      // Set the user object whenever the ID token is set\n      if (tokenName === \"id\" && token) {\n        setUser();\n      }\n    } catch (error) {\n      console.warn(`Problem setting ${tokenName} token.`);\n    }\n  });\n}\n\n/**\n * Set the store token values to undefined\n */\nexport function unsetTokens() {\n  store.tokens.accessToken = undefined;\n  store.tokens.idToken = undefined;\n  store.tokens.refreshToken = undefined;\n  unsetUser();\n}\n\n/**\n * Export the store.tokens object\n */\nexport const tokens = store.tokens;\n\n// NOTE Commenting this out 6/11/21 because the packages it relies on (jsonwebtoken & jwks-rsa)\n// both cause a lot of bloat. If we want to verify tokens, this is a nice way to do it, but\n// we need to find libraries designed for the browser instead of node.\n/**\n * Verify the provided token\n * @param {String} token\n * @returns {Promise<void>} The provided token has been verified if `verifyToken` resolves without error\n */\n// export async function verifyToken(token) {\n//   if (!token) throw new Error(\"Missing token\");\n\n//   let publicKey;\n//   try {\n//     const decodedToken = jwt.decode(token, { complete: true });\n//     if (!decodedToken.header || !decodedToken.header.kid) {\n//       throw new Error(\"Token kid not defined\");\n//     }\n\n//     const client = new JwksClient({\n//       jwksUri: `${apiUrl}tenants/${store.tenantId}/jwks/${store.mode}`,\n//       requestHeaders: { origin: window.location.origin },\n//     });\n\n//     const key = await client.getSigningKey(decodedToken.header.kid);\n//     publicKey = key.getPublicKey();\n//   } catch (error) {\n//     throw error;\n//   }\n\n//   if (!publicKey) {\n//     throw new Error(\"Public key not found\");\n//   }\n\n//   try {\n//     jwt.verify(token, publicKey);\n//   } catch (error) {\n//     throw new Error(\"Token verification failed\");\n//   }\n\n//   return Promise.resolve();\n// }\n","import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\n// import { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * Refresh the access and ID tokens\n * - When in test mode, uses the basic refresh method\n * - For tenants without a custom SSL certificate, uses the basic refresh method\n * - For tenants with a custom SSL certificate and in live mode, uses the httpOnly refresh method\n * @returns {Promise}\n */\nexport async function refresh() {\n  try {\n    await basicRefresh();\n  } catch (error) {\n    console.warn(`Refresh failed: ${error.message}`);\n  }\n}\n\n/**\n * Use a regular (non-httpOnly) cookie to refresh the access and ID tokens.\n *\n * The basic refresh method is used automatically in test mode and in live\n * mode whenever an SSL certificate has not been set up.\n */\nasync function basicRefresh() {\n  const refreshToken = Cookies.get(store.tokens.refreshTokenName);\n  try {\n    const { data, status } = await axios.get(`${store.baseUrl}auth/refresh`, {\n      headers: {\n        authorization: `Bearer ${refreshToken}`,\n      },\n    });\n    if (status !== 200) {\n      throw new Error(data.message || \"Problem with request\");\n    }\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      return data;\n    } else {\n      throw new Error(\"Problem setting cookies\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n// TODO re-enable httpOnly refresh method once new endpoints are stable [06/15/21]\n/**\n *\n * The httpOnly refresh method is only available for tenants with configured\n * SSL certificates while in live mode.\n */\n// async function httpOnlyRefresh() {\n//   const iframe = getIframe();\n//   if (!iframe) return;\n//   return postMessageAsPromise({\n//     type: \"refresh\",\n//     tenantId: store.tenantId,\n//   });\n// }\n\n/**\n * Use a sessionId and nonce to set the iframe refresh token\n * @param {String} sessionId\n * @param {String} nonce\n * @returns {Promise}\n */\nexport async function exchange({ sessionId, nonce }) {\n  return;\n\n  // TODO re-enable httpOnly exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"exchange\",\n  //   tenantId: store.tenantId,\n  //   payload: {\n  //     sessionId,\n  //     nonce,\n  //   },\n  // });\n}\n","import axios from \"axios\";\n\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    typeof window !== \"object\" ||\n    typeof window.location !== \"object\" ||\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn({ redirect } = {}) {\n  if (!store.tokens.accessToken) {\n    return removeAllCookies();\n  }\n\n  // Redirect to a provided path (check options first, then url querystring)\n  if (redirect) {\n    return redirectToPath(redirect);\n  } else if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  // If no path was provided, look up the path and then redirect there\n  try {\n    const { data } = await axios.get(`${store.baseUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl) {\n  // Return if no pathOrUrl, or if SSR or mobile\n  if (\n    !pathOrUrl ||\n    typeof document !== \"object\" ||\n    typeof window !== \"object\"\n  ) {\n    return;\n  }\n  try {\n    document && window;\n  } catch (error) {\n    return;\n  }\n\n  // Perform hard redirect\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","import axios from \"axios\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\nimport { getQueryAttr, redirectToPath } from \"./url.js\";\nimport { exchange } from \"./refresh.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} data - Object for custom user fields\n * @param {String} redirect - path to redirect to, or if false, do not redirect\n */\nexport async function signup({\n  method,\n  username,\n  name,\n  email,\n  password,\n  data,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO({ provider: method, redirect });\n    case \"password\":\n      return signupWithPassword({\n        username,\n        name,\n        email,\n        password,\n        userData: data,\n        redirect,\n      });\n    case \"passwordless\":\n      return sendPasswordlessLink({ email, name, username, userData: data });\n    default:\n      throw new Error(\n        'Userfront.signup called with invalid \"method\" property.'\n      );\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} userData - alias for the user.data object, since \"data\" is used in the response\n * @param {String} redirect - do not redirect if false, or redirect to a specific path\n */\nasync function signupWithPassword({\n  username,\n  name,\n  email,\n  password,\n  userData,\n  redirect,\n} = {}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/create`, {\n      tenantId: store.tenantId,\n      username,\n      name,\n      email,\n      password,\n      data: userData,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} email\n * @param {String} username\n * @param {String} emailOrUsername\n * @param {String} password\n * @param {String} token\n * @param {String} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO({ provider: method, redirect });\n    case \"password\":\n      return loginWithPassword({\n        email,\n        username,\n        emailOrUsername,\n        password,\n        redirect,\n      });\n    case \"passwordless\":\n      return sendPasswordlessLink({ email });\n    case \"link\":\n      return loginWithLink({ token, uuid, redirect });\n    case \"saml\":\n      return completeSamlLogin();\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property.');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nfunction loginWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\nexport function getProviderLink({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `${store.baseUrl}auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  let redirectTo = redirect || getQueryAttr(\"redirect\");\n  if (redirect === false) {\n    redirectTo = typeof document === \"object\" && document.location.pathname;\n  }\n  if (redirectTo) {\n    url += `&redirect=${encodeURIComponent(redirectTo)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n  redirect,\n}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/basic`, {\n      tenantId: store.tenantId,\n      emailOrUsername: email || username || emailOrUsername,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\nasync function completeSamlLogin() {\n  try {\n    if (!store.tokens.accessToken) {\n      return console.warn(\"Cannot complete SAML login without access token\");\n    }\n\n    const { data } = await axios.get(`${store.baseUrl}auth/saml/idp/token`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n\n    window.location.assign(\n      `${store.baseUrl}auth/saml/idp/login?tenant_id=${store.tenantId}&token=${data.token}&uuid=${store.user.userUuid}`\n    );\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function loginWithLink({ token, uuid, redirect } = {}) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) return;\n\n    const { data } = await axios.put(`${store.baseUrl}auth/link`, {\n      token,\n      uuid,\n      tenantId: store.tenantId,\n    });\n\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Problem logging in.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Create or update a user and send them a link to log in.\n * @param {Object} inputs\n */\nexport async function sendPasswordlessLink({\n  email,\n  name,\n  username,\n  userData,\n  options,\n}) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/link`, {\n      email,\n      name,\n      username,\n      data: userData,\n      options,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${store.baseUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\nexport async function resetPassword({ uuid, token, password, redirect }) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n    const { data } = await axios.put(`${store.baseUrl}auth/reset`, {\n      tenantId: store.tenantId,\n      uuid,\n      token,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n\n      // Return if redirect is explicitly false\n      if (redirect === false) return data;\n\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n\n      return data;\n    } else {\n      throw new Error(\n        \"There was a problem resetting your password. Please try again.\"\n      );\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n","import axios from \"axios\";\n\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\nimport { redirectToPath } from \"./url\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout({ method, redirect } = {}) {\n  if (method === \"saml\") {\n    return completeSamlLogout();\n  }\n  if (!store.tokens.accessToken) {\n    return removeAllCookies();\n  }\n\n  try {\n    const { data } = await axios.get(`${store.baseUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    if (redirect === false) return;\n    redirectToPath(redirect || data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\nasync function completeSamlLogout() {\n  if (!store.tokens.accessToken) {\n    throw new Error(\"Please log in to authorize your logout request.\");\n  }\n\n  try {\n    const { data } = await axios.get(`${store.baseUrl}auth/saml/idp/token`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n\n    window.location.assign(\n      `${store.baseUrl}auth/saml/idp/logout?tenant_id=${store.tenantId}&token=${data.token}&uuid=${store.user.userUuid}`\n    );\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n// TODO re-enable exchange method once new endpoints are stable [06/15/21]\n// --------------------------\n// const iframe = getIframe();\n// if (!iframe) return;\n// try {\n//   const { data } = await postMessageAsPromise({\n//     type: \"logout\",\n//     tenantId: store.tenantId,\n//   });\n//   removeAllCookies();\n//   setTokensFromCookies();\n//   redirectToPath(data.redirectTo || \"/\");\n// } catch (error) {\n//   removeAllCookies();\n//   redirectToPath(\"/\");\n// }\n","export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex =\n  /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","import axios from \"axios\";\nimport { privateIPRegex } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Global mode object\n */\nexport const mode = {\n  value: \"live\",\n  reason: undefined,\n  setMode,\n};\n\nsetModeSync();\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n\nexport function isHttps() {\n  try {\n    return window.location.protocol === \"https:\";\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(\n      `${store.baseUrl}tenants/${store.tenantId}/mode`\n    );\n    mode.value = data.mode || \"test\";\n    mode.reason = getReason(mode.value);\n    store.mode = mode.value;\n  } catch (err) {\n    mode.value = \"test\";\n    store.mode = mode.value;\n  }\n}\n\n/**\n * Estimate the mode without making an API call\n */\nexport function setModeSync() {\n  const modeValue = isTestHostname() || !isHttps() ? \"test\" : \"live\";\n  mode.value = modeValue;\n  mode.reason = getReason(modeValue);\n  store.mode = modeValue;\n}\n\n/**\n * Set the reason for the mode\n * - http\n * - domain\n */\nfunction getReason(mode) {\n  try {\n    if (mode === \"live\") {\n      return \"domain\";\n    }\n    if (window.location.protocol === \"http:\") {\n      return \"http\";\n    } else if (window.location.protocol !== \"https:\") {\n      return \"protocol\";\n    } else {\n      return \"domain\";\n    }\n  } catch (error) {}\n}\n","/**\n * user methods are refactored into a separate file to avoid a circular dependency\n * between Userfront.refresh() [which requires setUser()]\n * and Userfront.user.update() [which requires refresh()].\n */\n\nimport axios from \"axios\";\nimport { refresh } from \"./refresh.js\";\nimport { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Update the user record on Userfront\n * @param {Object} payload User properties to update e.g. { name: 'John Doe' }\n */\nexport async function update(payload) {\n  if (!payload || Object.keys(payload).length < 1) {\n    return console.warn(\"Missing user properties to update\");\n  }\n\n  // Make request to update the user\n  await axios.put(`${store.baseUrl}self`, payload, {\n    headers: {\n      authorization: `Bearer ${store.tokens.accessToken}`,\n    },\n  });\n\n  // Refresh the access and ID tokens, and set the store.user object from the ID token\n  await refresh();\n\n  return store.user;\n}\n\n/**\n * Determine whether the access token has a given role\n * @param {String} roleName\n * @param {Object} options\n * @returns {Boolean}\n */\nexport function hasRole(roleName, { tenantId } = {}) {\n  try {\n    if (!store.tokens.accessToken || !store.tenantId) {\n      return false;\n    }\n    const { authorization } = getJWTPayload(store.tokens.accessToken);\n    if (!authorization) {\n      return false;\n    }\n    tenantId = tenantId || store.tenantId;\n    if (!authorization[tenantId] || !authorization[tenantId].roles) {\n      return false;\n    }\n    return authorization[tenantId].roles.indexOf(roleName) > -1;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Add the methods to the store.user object\n */\nstore.user.update = update;\nstore.user.hasRole = hasRole;\n","import axios from \"axios\";\nimport { store } from \"./store.js\";\nimport {\n  tokens,\n  accessToken,\n  idToken,\n  setTokensFromCookies,\n  setTokenNames,\n} from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { mode, setMode, setModeSync } from \"./mode.js\";\n// import { setIframe } from \"./iframe.js\";\nimport { user } from \"./user.js\";\nimport \"./user.methods.js\";\nimport { refresh } from \"./refresh.js\";\nimport { apiUrl } from \"./constants.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId, opts = {}) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n\n  store.tenantId = tenantId;\n\n  store.baseUrl = opts.baseUrl || apiUrl;\n  if (!store.baseUrl.endsWith(\"/\")) {\n    store.baseUrl += \"/\";\n  }\n\n  if (opts.domain) {\n    store.domain = opts.domain;\n    axios.defaults.headers.common[\n      \"x-application-id\"\n    ] = `https://${store.domain}`;\n  }\n\n  setTokenNames();\n  // setIframe(); // TODO re-enable when iframe is needed\n  setTokensFromCookies();\n  setModeSync();\n\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  mode,\n  setMode,\n\n  // refresh\n  refresh: (a, b, c) => {\n    try {\n      console.warn(\n        \"Userfront.refresh() is deprecated and will be removed. Please use Userfront.tokens.refresh() instead.\"\n      );\n    } catch (error) {}\n    return refresh(a, b, c);\n  },\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  tokens,\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  // user\n  user,\n\n  // utils\n};\n"]},"metadata":{},"sourceType":"module"}