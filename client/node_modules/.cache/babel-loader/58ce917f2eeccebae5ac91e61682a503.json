{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\n\nfunction GroupedTransition(_ref) {\n  let {\n    transitions,\n    duration = 250,\n    exitDuration = duration,\n    mounted,\n    children,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  } = _ref;\n  const {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction\n  } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : null;\n  }\n\n  if (transitionStatus === \"exited\") {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus\n    });\n    return acc;\n  }, {});\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(transitionsStyles));\n}\n\nGroupedTransition.displayName = \"@mantine/core/GroupedTransition\";\nexport { GroupedTransition };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Transition\\GroupedTransition.tsx"],"names":[],"mappings":";;;;AAGO,SAAS,iBAAT,OAWJ;AAAA,MAX+B;AAChC,IAAA,WADgC;AAEhC,IAAA,QAAQ,GAAG,GAFqB;AAGhC,IAAA,YAAY,GAAG,QAHiB;AAIhC,IAAA,OAJgC;AAKhC,IAAA,QALgC;AAMhC,IAAA,cANgC;AAOhC,IAAA,MAPgC;AAQhC,IAAA,SARgC;AAShC,IAAA,OATgC;AAUhC,IAAA;AAVgC,GAW/B;AACD,QAAM;AAAE,IAAA,kBAAF;AAAsB,IAAA,gBAAtB;AAAwC,IAAA;AAAxC,MAAqE,aAAa,CAAC;AACvF,IAAA,OADuF;AAEvF,IAAA,QAFuF;AAGvF,IAAA,YAHuF;AAIvF,IAAA,cAJuF;AAKvF,IAAA,MALuF;AAMvF,IAAA,SANuF;AAOvF,IAAA,OAPuF;AAQvF,IAAA;AARuF,GAAD,CAAxF;;AAUA,MAAI,kBAAkB,KAAK,CAA3B,EAA8B;AAC5B,WAAO,OAAO,GAAA,eAAmB,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,QAAQ,CAAC,EAAD,CAAlD,CAAnB,GAA6E,IAA3F;AACD;;AACD,MAAI,gBAAgB,KAAK,QAAzB,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,QAAM,iBAAiB,GAAG,MAAM,CAAC,IAAP,CAAY,WAAZ,EAAyB,MAAzB,CAAgC,CAAC,GAAD,EAAM,UAAN,KAAqB;AAC7E,IAAA,GAAG,CAAC,UAAD,CAAH,GAAkB,mBAAmB,CAAC;AACpC,MAAA,QAAQ,EAAE,WAAW,CAAC,UAAD,CAAX,CAAwB,QADE;AAEpC,MAAA,UAAU,EAAE,WAAW,CAAC,UAAD,CAAX,CAAwB,UAFA;AAGpC,MAAA,cAAc,EAAE,WAAW,CAAC,UAAD,CAAX,CAAwB,cAAxB,IAA0C,wBAHtB;AAIpC,MAAA,KAAK,EAAE;AAJ6B,KAAD,CAArC;AAMA,WAAO,GAAP;AACD,GARyB,EAQvB,EARuB,CAA1B;AASA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,QAAQ,CAAC,iBAAD,CAAlD,CAAvB;AACD;;AACD,iBAAiB,CAAC,WAAlB,GAAgC,iCAAhC","sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\ninterface GroupedTransitionItem {\n  duration: number;\n  timingFunction?: React.CSSProperties['transitionTimingFunction'];\n  transition: MantineTransition;\n}\n\nexport interface GroupedTransitionProps {\n  /** Transitions group */\n  transitions: Record<string, GroupedTransitionItem>;\n\n  /** Render function with transition group styles argument */\n  children(styles: Record<string, React.CSSProperties>): React.ReactElement<any, any>;\n\n  /** Enter transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function GroupedTransition({\n  transitions,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: GroupedTransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  if (transitionStatus === 'exited') {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus,\n    });\n\n    return acc;\n  }, {});\n\n  return <>{children(transitionsStyles)}</>;\n}\n\nGroupedTransition.displayName = '@mantine/core/GroupedTransition';\n"]},"metadata":{},"sourceType":"module"}