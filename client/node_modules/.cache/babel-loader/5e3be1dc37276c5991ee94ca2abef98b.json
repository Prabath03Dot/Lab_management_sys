{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nimport { getLockStyles } from './utils/get-lock-styles.js';\nimport { injectStyles } from './utils/inject-style-tag.js';\nimport { insertStyleTag } from './utils/insert-style-tag.js';\nimport { makeStyleTag } from './utils/make-style-tag.js';\n\nfunction useScrollLock(lock) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    disableBodyPadding: false\n  };\n  const [scrollLocked, setScrollLocked] = useState(lock || false);\n  const scrollTop = useRef(0);\n  const {\n    disableBodyPadding\n  } = options;\n  const stylesheet = useRef(null);\n\n  const lockScroll = () => {\n    scrollTop.current = window.scrollY;\n    const styles = getLockStyles({\n      disableBodyPadding\n    });\n    const sheet = makeStyleTag();\n    injectStyles(sheet, styles);\n    insertStyleTag(sheet);\n    stylesheet.current = sheet;\n  };\n\n  const unlockScroll = () => {\n    if (!(stylesheet == null ? void 0 : stylesheet.current)) return;\n    stylesheet.current.parentNode.removeChild(stylesheet.current);\n    stylesheet.current = null;\n  };\n\n  useEffect(() => {\n    if (scrollLocked) {\n      lockScroll();\n    } else {\n      unlockScroll();\n    }\n\n    return unlockScroll;\n  }, [scrollLocked]);\n  useEffect(() => {\n    if (lock !== void 0) {\n      setScrollLocked(lock);\n    }\n  }, [lock]);\n  useEffect(() => {\n    if (lock === void 0 && typeof window !== \"undefined\") {\n      window.document.body.style.overflow === \"hidden\" && setScrollLocked(true);\n    }\n  }, [setScrollLocked]);\n  return [scrollLocked, setScrollLocked];\n}\n\nexport { useScrollLock };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-scroll-lock\\use-scroll-lock.ts"],"names":[],"mappings":";;;;;;AAKO,SAAS,aAAT,CAAuB,IAAvB,EAEJ;AAAA,MAFiC,OAEjC,uEAF2C;AAC5C,IAAA,kBAAkB,EAAE;AADwB,GAE3C;AACD,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAC,IAAI,IAAI,KAAT,CAAhD;AACA,QAAM,SAAS,GAAG,MAAM,CAAC,CAAD,CAAxB;AACA,QAAM;AAAE,IAAA;AAAF,MAAyB,OAA/B;AACA,QAAM,UAAU,GAAG,MAAM,CAAC,IAAD,CAAzB;;AACA,QAAM,UAAU,GAAG,MAAM;AACvB,IAAA,SAAS,CAAC,OAAV,GAAoB,MAAM,CAAC,OAA3B;AACA,UAAM,MAAM,GAAG,aAAa,CAAC;AAAE,MAAA;AAAF,KAAD,CAA5B;AACA,UAAM,KAAK,GAAG,YAAY,EAA1B;AACA,IAAA,YAAY,CAAC,KAAD,EAAQ,MAAR,CAAZ;AACA,IAAA,cAAc,CAAC,KAAD,CAAd;AACA,IAAA,UAAU,CAAC,OAAX,GAAqB,KAArB;AACD,GAPD;;AAQA,QAAM,YAAY,GAAG,MAAM;AACzB,QAAI,EAAE,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8B,UAAU,CAAC,OAA3C,CAAJ,EACE;AACF,IAAA,UAAU,CAAC,OAAX,CAAmB,UAAnB,CAA8B,WAA9B,CAA0C,UAAU,CAAC,OAArD;AACA,IAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACD,GALD;;AAMA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,YAAJ,EAAkB;AAChB,MAAA,UAAU;AACX,KAFD,MAEO;AACL,MAAA,YAAY;AACb;;AACD,WAAO,YAAP;AACD,GAPQ,EAON,CAAC,YAAD,CAPM,CAAT;AAQA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,MAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJQ,EAIN,CAAC,IAAD,CAJM,CAAT;AAKA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,IAAI,KAAK,KAAK,CAAd,IAAmB,OAAO,MAAP,KAAkB,WAAzC,EAAsD;AACpD,MAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,QAA3B,KAAwC,QAAxC,IAAoD,eAAe,CAAC,IAAD,CAAnE;AACD;AACF,GAJQ,EAIN,CAAC,eAAD,CAJM,CAAT;AAKA,SAAO,CAAC,YAAD,EAAe,eAAf,CAAP;AACF","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { getLockStyles } from './utils/get-lock-styles';\nimport { injectStyles } from './utils/inject-style-tag';\nimport { insertStyleTag } from './utils/insert-style-tag';\nimport { makeStyleTag } from './utils/make-style-tag';\n\nexport function useScrollLock(\n  lock?: boolean,\n  options = {\n    disableBodyPadding: false,\n  }\n) {\n  const [scrollLocked, setScrollLocked] = useState(lock || false);\n  const scrollTop = useRef(0);\n\n  const { disableBodyPadding } = options;\n\n  const stylesheet = useRef<CSSStyleSheet | any | null>(null);\n\n  const lockScroll = () => {\n    scrollTop.current = window.scrollY;\n\n    const styles = getLockStyles({ disableBodyPadding });\n\n    /**\n     * by applying styles via style tag\n     * we dont care about previous styles due to inheritance\n     * when scroll gets unlocked we delete that style tag\n     */\n    const sheet = makeStyleTag();\n\n    injectStyles(sheet, styles);\n    insertStyleTag(sheet);\n\n    stylesheet.current = sheet;\n  };\n\n  const unlockScroll = () => {\n    if (!stylesheet?.current) return;\n\n    stylesheet.current.parentNode.removeChild(stylesheet.current);\n    stylesheet.current = null;\n  };\n\n  useEffect(() => {\n    if (scrollLocked) {\n      lockScroll();\n    } else {\n      unlockScroll();\n    }\n\n    return unlockScroll;\n  }, [scrollLocked]);\n\n  useEffect(() => {\n    if (lock !== undefined) {\n      setScrollLocked(lock);\n    }\n  }, [lock]);\n\n  useEffect(() => {\n    if (lock === undefined && typeof window !== 'undefined') {\n      window.document.body.style.overflow === 'hidden' && setScrollLocked(true);\n    }\n  }, [setScrollLocked]);\n\n  return [scrollLocked, setScrollLocked] as const;\n}\n"]},"metadata":{},"sourceType":"module"}