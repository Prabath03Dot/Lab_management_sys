{"ast":null,"code":"var _jsxFileName = \"D:\\\\D-Downlods\\\\MINI_ Prpject 2022\\\\lab-manage-sys\\\\client\\\\src\\\\pages\\\\tests\\\\PayamentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayamentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post('http://localhost:5000/payment', {\n          amount: 1500,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"success payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayamentForm, \"JINYMdqMqWd1QoQrSQBbUl9sOWA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PayamentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayamentForm\");","map":{"version":3,"sources":["D:/D-Downlods/MINI_ Prpject 2022/lab-manage-sys/client/src/pages/tests/PayamentForm.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","axios","PayamentForm","success","setSuccess","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","handleSubmit","e","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACIC,WADJ,EAEIC,SAFJ,EAGIC,WAHJ,QAIS,yBAJT;AAKE,OAAOC,KAAP,MAAkB,OAAlB;;AAEF,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMiB,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAGF,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEA,UAAM;AAACH,MAAAA,KAAD;AAAQa,MAAAA;AAAR,QAA0B,MAAML,MAAM,CAACM,mBAAP,CAA2B;AAC7DC,MAAAA,IAAI,EAAE,MADuD;AAE7DC,MAAAA,IAAI,EAAEP,QAAQ,CAACQ,UAAT,CAAoBxB,WAApB;AAFuD,KAA3B,CAAtC;;AAMF,QAAG,CAACO,KAAJ,EAAU;AACN,UAAG;AACC,cAAM;AAACkB,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,MAAM,EAAC,IADwD;AAE/DH,UAAAA;AAF+D,SAA5C,CAAvB;;AAKA,YAAGC,QAAQ,CAACG,IAAT,CAAcxB,OAAjB,EAAyB;AACrByB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAzB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAXD,CAWC,OAAMC,KAAN,EAAa;AACZuB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsBxB,KAAtB;AACD;AACJ,KAfD,MAeK;AACDuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAK,CAACyB,OAAlB;AACH;AACA,GA5BD;;AA6BA,sBAEE;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD;;GA7CuB5B,Y;UAMLH,S,EACEC,W;;;KAPGE,Y","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements\r\n  } from \"@stripe/react-stripe-js\";\r\n  import axios from \"axios\";\r\n\r\nexport default function PayamentForm() {\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const {error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: elements.getElement(CardElement)\r\n    })\r\n  \r\n\r\n  if(!error){\r\n      try{\r\n          const {id} = paymentMethod\r\n          const response = await axios.post('http://localhost:5000/payment', {\r\n              amount:1500,\r\n              id\r\n          } )\r\n\r\n          if(response.data.success){\r\n              console.log(\"success payment\")\r\n              setSuccess(true);\r\n          }\r\n      }catch(error) {\r\n        console.log('error' , error)\r\n      }\r\n  }else{\r\n      console.log(error.message)\r\n  }\r\n  }\r\n  return (\r\n\r\n    <div>\r\n         \r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}