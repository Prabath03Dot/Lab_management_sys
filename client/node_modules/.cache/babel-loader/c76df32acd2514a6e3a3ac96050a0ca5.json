{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal.js';\n\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies) {\n  const ref = useRef([]);\n  const updateRef = useRef(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nfunction useShallowEffect(cb, dependencies) {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n\nexport { useShallowEffect };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-shallow-effect\\use-shallow-effect.ts"],"names":[],"mappings":";;;AAEA,SAAS,cAAT,CAAwB,SAAxB,EAAmC,SAAnC,EAA8C;AAC5C,MAAI,CAAC,SAAD,IAAc,CAAC,SAAnB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,MAAI,SAAS,CAAC,MAAV,KAAqB,SAAS,CAAC,MAAnC,EAA2C;AACzC,WAAO,KAAP;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC5C,QAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,SAAS,CAAC,CAAD,CAAxB,CAAjB,EAA+C;AAC7C,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AACD,SAAS,iBAAT,CAA2B,YAA3B,EAAyC;AACvC,QAAM,GAAG,GAAG,MAAM,CAAC,EAAD,CAAlB;AACA,QAAM,SAAS,GAAG,MAAM,CAAC,CAAD,CAAxB;;AACA,MAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAL,EAAc,YAAd,CAAnB,EAAgD;AAC9C,IAAA,GAAG,CAAC,OAAJ,GAAc,YAAd;AACA,IAAA,SAAS,CAAC,OAAV,IAAqB,CAArB;AACD;;AACD,SAAO,CAAC,SAAS,CAAC,OAAX,CAAP;AACD;;AACM,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,YAA9B,EAA4C;AACjD,EAAA,SAAS,CAAC,EAAD,EAAK,iBAAiB,CAAC,YAAD,CAAtB,CAAT;AACF","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal';\n\nfunction shallowCompare(prevValue: React.DependencyList, currValue: React.DependencyList) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies: React.DependencyList) {\n  const ref = useRef<React.DependencyList>([]);\n  const updateRef = useRef<number>(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nexport function useShallowEffect(cb: () => void, dependencies?: React.DependencyList): void {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n"]},"metadata":{},"sourceType":"module"}