{"ast":null,"code":"function isValidMargin(margin) {\n  return typeof margin === \"string\" || typeof margin === \"number\";\n}\n\nconst MARGINS = {\n  m: \"margin\",\n  mt: \"marginTop\",\n  mb: \"marginBottom\",\n  ml: \"marginLeft\",\n  mr: \"marginRight\"\n};\n\nfunction getMargins(margins, theme) {\n  const styles = {};\n\n  if (isValidMargin(margins.my)) {\n    const margin = theme.fn.size({\n      size: margins.my,\n      sizes: theme.spacing\n    });\n    styles.marginTop = margin;\n    styles.marginBottom = margin;\n  }\n\n  if (isValidMargin(margins.mx)) {\n    const margin = theme.fn.size({\n      size: margins.mx,\n      sizes: theme.spacing\n    });\n    styles.marginLeft = margin;\n    styles.marginRight = margin;\n  }\n\n  Object.keys(MARGINS).forEach(margin => {\n    if (isValidMargin(margins[margin])) {\n      styles[MARGINS[margin]] = theme.fn.size({\n        size: margins[margin],\n        sizes: theme.spacing\n      });\n    }\n  });\n  return styles;\n}\n\nexport { getMargins };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Box\\use-sx\\get-margins\\get-margins.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AAC7B,SAAO,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,MAAP,KAAkB,QAAvD;AACD;;AACD,MAAM,OAAO,GAAG;AACd,EAAA,CAAC,EAAE,QADW;AAEd,EAAA,EAAE,EAAE,WAFU;AAGd,EAAA,EAAE,EAAE,cAHU;AAId,EAAA,EAAE,EAAE,YAJU;AAKd,EAAA,EAAE,EAAE;AALU,CAAhB;;AAOO,SAAS,UAAT,CAAoB,OAApB,EAA6B,KAA7B,EAAoC;AACzC,QAAM,MAAM,GAAG,EAAf;;AACA,MAAI,aAAa,CAAC,OAAO,CAAC,EAAT,CAAjB,EAA+B;AAC7B,UAAM,MAAM,GAAG,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAI,EAAE,OAAO,CAAC,EAAhB;AAAoB,MAAA,KAAK,EAAE,KAAK,CAAC;AAAjC,KAAd,CAAf;AACA,IAAA,MAAM,CAAC,SAAP,GAAmB,MAAnB;AACA,IAAA,MAAM,CAAC,YAAP,GAAsB,MAAtB;AACD;;AACD,MAAI,aAAa,CAAC,OAAO,CAAC,EAAT,CAAjB,EAA+B;AAC7B,UAAM,MAAM,GAAG,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAI,EAAE,OAAO,CAAC,EAAhB;AAAoB,MAAA,KAAK,EAAE,KAAK,CAAC;AAAjC,KAAd,CAAf;AACA,IAAA,MAAM,CAAC,UAAP,GAAoB,MAApB;AACA,IAAA,MAAM,CAAC,WAAP,GAAqB,MAArB;AACD;;AACD,EAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA8B,MAAD,IAAY;AACvC,QAAI,aAAa,CAAC,OAAO,CAAC,MAAD,CAAR,CAAjB,EAAoC;AAClC,MAAA,MAAM,CAAC,OAAO,CAAC,MAAD,CAAR,CAAN,GAA0B,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AACtC,QAAA,IAAI,EAAE,OAAO,CAAC,MAAD,CADyB;AAEtC,QAAA,KAAK,EAAE,KAAK,CAAC;AAFyB,OAAd,CAA1B;AAID;AACF,GAPD;AAQA,SAAO,MAAP;AACF","sourcesContent":["import { MantineMargins, MantineTheme, CSSObject } from '@mantine/styles';\n\nfunction isValidMargin(margin: any) {\n  return typeof margin === 'string' || typeof margin === 'number';\n}\n\nconst MARGINS = {\n  m: 'margin',\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n};\n\nexport function getMargins(margins: MantineMargins, theme: MantineTheme) {\n  const styles: CSSObject = {};\n\n  if (isValidMargin(margins.my)) {\n    const margin = theme.fn.size({ size: margins.my, sizes: theme.spacing });\n    styles.marginTop = margin;\n    styles.marginBottom = margin;\n  }\n\n  if (isValidMargin(margins.mx)) {\n    const margin = theme.fn.size({ size: margins.mx, sizes: theme.spacing });\n    styles.marginLeft = margin;\n    styles.marginRight = margin;\n  }\n\n  Object.keys(MARGINS).forEach((margin) => {\n    if (isValidMargin(margins[margin])) {\n      styles[MARGINS[margin]] = theme.fn.size({\n        size: margins[margin],\n        sizes: theme.spacing,\n      });\n    }\n  });\n\n  return styles;\n}\n"]},"metadata":{},"sourceType":"module"}