{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nfunction useMouse() {\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const ref = useRef();\n\n  const setMousePosition = event => {\n    if (ref.current) {\n      const rect = event.currentTarget.getBoundingClientRect();\n      const x = Math.max(0, Math.round(event.pageX - rect.left - (window.pageXOffset || window.scrollX)));\n      const y = Math.max(0, Math.round(event.pageY - rect.top - (window.pageYOffset || window.scrollY)));\n      setPosition({\n        x,\n        y\n      });\n    } else {\n      setPosition({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n  };\n\n  useEffect(() => {\n    const element = (ref == null ? void 0 : ref.current) ? ref.current : document;\n    element.addEventListener(\"mousemove\", setMousePosition);\n    return () => element.removeEventListener(\"mousemove\", setMousePosition);\n  }, [ref.current]);\n  return __spreadValues({\n    ref\n  }, position);\n}\n\nexport { useMouse };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-mouse\\use-mouse.ts"],"names":[],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport type { MouseEvent } from 'react';\n\nexport function useMouse<T extends HTMLElement = any>() {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  const ref = useRef<T>();\n\n  const setMousePosition = (event: MouseEvent<HTMLElement>) => {\n    if (ref.current) {\n      const rect = event.currentTarget.getBoundingClientRect();\n\n      const x = Math.max(\n        0,\n        Math.round(event.pageX - rect.left - (window.pageXOffset || window.scrollX))\n      );\n\n      const y = Math.max(\n        0,\n        Math.round(event.pageY - rect.top - (window.pageYOffset || window.scrollY))\n      );\n\n      setPosition({ x, y });\n    } else {\n      setPosition({ x: event.clientX, y: event.clientY });\n    }\n  };\n\n  useEffect(() => {\n    const element = ref?.current ? ref.current : document;\n    element.addEventListener('mousemove', setMousePosition as any);\n\n    return () => element.removeEventListener('mousemove', setMousePosition as any);\n  }, [ref.current]);\n\n  return { ref, ...position };\n}\n"]},"metadata":{},"sourceType":"module"}