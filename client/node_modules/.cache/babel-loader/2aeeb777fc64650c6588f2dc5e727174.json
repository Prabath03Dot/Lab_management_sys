{"ast":null,"code":"import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","map":{"version":3,"sources":["D:/D-Downlods/MINI_ Prpject 2022/lab-manage-sys/client/src/pages/testDash/StarAdmin-Free-React-Admin-Template/template/demo_1/node_modules/d3-chord/src/chord.js"],"names":["range","max","tau","compareValue","compare","a","b","source","value","target","padAngle","sortGroups","sortSubgroups","sortChords","chord","matrix","n","length","groupSums","groupIndex","subgroupIndex","chords","groups","Array","subgroups","k","x","x0","dx","i","j","push","sort","forEach","d","di","dj","v","a0","a1","index","subindex","startAngle","endAngle","_","arguments"],"mappings":"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","sourcesContent":["import {range} from \"d3-array\";\r\nimport {max, tau} from \"./math\";\r\n\r\nfunction compareValue(compare) {\r\n  return function(a, b) {\r\n    return compare(\r\n      a.source.value + a.target.value,\r\n      b.source.value + b.target.value\r\n    );\r\n  };\r\n}\r\n\r\nexport default function() {\r\n  var padAngle = 0,\r\n      sortGroups = null,\r\n      sortSubgroups = null,\r\n      sortChords = null;\r\n\r\n  function chord(matrix) {\r\n    var n = matrix.length,\r\n        groupSums = [],\r\n        groupIndex = range(n),\r\n        subgroupIndex = [],\r\n        chords = [],\r\n        groups = chords.groups = new Array(n),\r\n        subgroups = new Array(n * n),\r\n        k,\r\n        x,\r\n        x0,\r\n        dx,\r\n        i,\r\n        j;\r\n\r\n    // Compute the sum.\r\n    k = 0, i = -1; while (++i < n) {\r\n      x = 0, j = -1; while (++j < n) {\r\n        x += matrix[i][j];\r\n      }\r\n      groupSums.push(x);\r\n      subgroupIndex.push(range(n));\r\n      k += x;\r\n    }\r\n\r\n    // Sort groups…\r\n    if (sortGroups) groupIndex.sort(function(a, b) {\r\n      return sortGroups(groupSums[a], groupSums[b]);\r\n    });\r\n\r\n    // Sort subgroups…\r\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\r\n      d.sort(function(a, b) {\r\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\r\n      });\r\n    });\r\n\r\n    // Convert the sum to scaling factor for [0, 2pi].\r\n    // TODO Allow start and end angle to be specified?\r\n    // TODO Allow padding to be specified as percentage?\r\n    k = max(0, tau - padAngle * n) / k;\r\n    dx = k ? padAngle : tau / n;\r\n\r\n    // Compute the start and end angle for each group and subgroup.\r\n    // Note: Opera has a bug reordering object literal properties!\r\n    x = 0, i = -1; while (++i < n) {\r\n      x0 = x, j = -1; while (++j < n) {\r\n        var di = groupIndex[i],\r\n            dj = subgroupIndex[di][j],\r\n            v = matrix[di][dj],\r\n            a0 = x,\r\n            a1 = x += v * k;\r\n        subgroups[dj * n + di] = {\r\n          index: di,\r\n          subindex: dj,\r\n          startAngle: a0,\r\n          endAngle: a1,\r\n          value: v\r\n        };\r\n      }\r\n      groups[di] = {\r\n        index: di,\r\n        startAngle: x0,\r\n        endAngle: x,\r\n        value: groupSums[di]\r\n      };\r\n      x += dx;\r\n    }\r\n\r\n    // Generate chords for each (non-empty) subgroup-subgroup link.\r\n    i = -1; while (++i < n) {\r\n      j = i - 1; while (++j < n) {\r\n        var source = subgroups[j * n + i],\r\n            target = subgroups[i * n + j];\r\n        if (source.value || target.value) {\r\n          chords.push(source.value < target.value\r\n              ? {source: target, target: source}\r\n              : {source: source, target: target});\r\n        }\r\n      }\r\n    }\r\n\r\n    return sortChords ? chords.sort(sortChords) : chords;\r\n  }\r\n\r\n  chord.padAngle = function(_) {\r\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\r\n  };\r\n\r\n  chord.sortGroups = function(_) {\r\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\r\n  };\r\n\r\n  chord.sortSubgroups = function(_) {\r\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\r\n  };\r\n\r\n  chord.sortChords = function(_) {\r\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\r\n  };\r\n\r\n  return chord;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}