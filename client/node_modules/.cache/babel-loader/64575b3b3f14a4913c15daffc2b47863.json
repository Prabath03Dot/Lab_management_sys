{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineTheme } from '@mantine/styles';\nimport { ColorSlider } from '../ColorSlider/ColorSlider.js';\nimport { round } from '../converters/parsers.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst AlphaSlider = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    value,\n    onChange,\n    color\n  } = _b,\n      others = __objRest(_b, [\"value\", \"onChange\", \"color\"]);\n\n  const theme = useMantineTheme();\n\n  const _color = theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[3];\n\n  return /* @__PURE__ */React.createElement(ColorSlider, __spreadProps(__spreadValues({}, others), {\n    ref,\n    value,\n    onChange: val => onChange(round(val, 2)),\n    maxValue: 1,\n    round: false,\n    overlays: [{\n      backgroundImage: `linear-gradient(45deg, ${_color} 25%, transparent 25%), linear-gradient(-45deg, ${_color} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${_color} 75%), linear-gradient(-45deg, ${theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white} 75%, ${_color} 75%)`,\n      backgroundSize: \"8px 8px\",\n      backgroundPosition: \"0 0, 0 4px, 4px -4px, -4px 0px\"\n    }, {\n      backgroundImage: `linear-gradient(90deg, transparent, ${color})`\n    }, {\n      boxShadow: \"rgba(0, 0, 0, .1) 0px 0px 0px 1px inset, rgb(0, 0, 0, .15) 0px 0px 4px inset\"\n    }]\n  }));\n});\nAlphaSlider.displayName = \"@mantine/core/AlphaSlider\";\nexport { AlphaSlider };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\ColorPicker\\AlphaSlider\\AlphaSlider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useMantineTheme } from '@mantine/styles';\nimport { ColorSlider, BaseColorSliderProps } from '../ColorSlider/ColorSlider';\nimport { round } from '../converters/parsers';\n\nexport interface AlphaSliderProps extends BaseColorSliderProps {\n  color: string;\n}\n\nexport const AlphaSlider = forwardRef<HTMLDivElement, AlphaSliderProps>(\n  ({ value, onChange, color, ...others }: AlphaSliderProps, ref) => {\n    const theme = useMantineTheme();\n    const _color = theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3];\n\n    return (\n      <ColorSlider\n        {...others}\n        ref={ref}\n        value={value}\n        onChange={(val) => onChange(round(val, 2))}\n        maxValue={1}\n        round={false}\n        overlays={[\n          {\n            backgroundImage: `linear-gradient(45deg, ${_color} 25%, transparent 25%), linear-gradient(-45deg, ${_color} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${_color} 75%), linear-gradient(-45deg, ${\n              theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white\n            } 75%, ${_color} 75%)`,\n            backgroundSize: '8px 8px',\n            backgroundPosition: '0 0, 0 4px, 4px -4px, -4px 0px',\n          },\n          {\n            backgroundImage: `linear-gradient(90deg, transparent, ${color})`,\n          },\n          {\n            boxShadow:\n              'rgba(0, 0, 0, .1) 0px 0px 0px 1px inset, rgb(0, 0, 0, .15) 0px 0px 4px inset',\n          },\n        ]}\n      />\n    );\n  }\n);\n\nAlphaSlider.displayName = '@mantine/core/AlphaSlider';\n"]},"metadata":{},"sourceType":"module"}