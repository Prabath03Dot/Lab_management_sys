{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\n\nfunction useDebouncedValue(value, wait) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: false\n  };\n  const [_value, setValue] = useState(value);\n  const mountedRef = useRef(false);\n  const timeoutRef = useRef(null);\n  const cooldownRef = useRef(false);\n\n  const cancel = () => window.clearTimeout(timeoutRef.current);\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(() => {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading]);\n  useEffect(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n  return [_value, cancel];\n}\n\nexport { useDebouncedValue };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-debounced-value\\use-debounced-value.ts"],"names":[],"mappings":";;AACO,SAAS,iBAAT,CAA2B,KAA3B,EAAkC,IAAlC,EAAsE;AAAA,MAA9B,OAA8B,uEAApB;AAAE,IAAA,OAAO,EAAE;AAAX,GAAoB;AAC3E,QAAM,CAAC,MAAD,EAAS,QAAT,IAAqB,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,UAAU,GAAG,MAAM,CAAC,KAAD,CAAzB;AACA,QAAM,UAAU,GAAG,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,WAAW,GAAG,MAAM,CAAC,KAAD,CAA1B;;AACA,QAAM,MAAM,GAAG,MAAM,MAAM,CAAC,YAAP,CAAoB,UAAU,CAAC,OAA/B,CAArB;;AACA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,UAAU,CAAC,OAAf,EAAwB;AACtB,UAAI,CAAC,WAAW,CAAC,OAAb,IAAwB,OAAO,CAAC,OAApC,EAA6C;AAC3C,QAAA,WAAW,CAAC,OAAZ,GAAsB,IAAtB;AACA,QAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OAHD,MAGO;AACL,QAAA,MAAM;AACN,QAAA,UAAU,CAAC,OAAX,GAAqB,MAAM,CAAC,UAAP,CAAkB,MAAM;AAC3C,UAAA,WAAW,CAAC,OAAZ,GAAsB,KAAtB;AACA,UAAA,QAAQ,CAAC,KAAD,CAAR;AACD,SAHoB,EAGlB,IAHkB,CAArB;AAID;AACF;AACF,GAbQ,EAaN,CAAC,KAAD,EAAQ,OAAO,CAAC,OAAhB,CAbM,CAAT;AAcA,EAAA,SAAS,CAAC,MAAM;AACd,IAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACA,WAAO,MAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SAAO,CAAC,MAAD,EAAS,MAAT,CAAP;AACF","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nexport function useDebouncedValue<T = any>(value: T, wait: number, options = { leading: false }) {\n  const [_value, setValue] = useState(value);\n  const mountedRef = useRef(false);\n  const timeoutRef = useRef<number>(null);\n  const cooldownRef = useRef(false);\n\n  const cancel = () => window.clearTimeout(timeoutRef.current);\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(() => {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading]);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n\n  return [_value, cancel] as const;\n}\n"]},"metadata":{},"sourceType":"module"}