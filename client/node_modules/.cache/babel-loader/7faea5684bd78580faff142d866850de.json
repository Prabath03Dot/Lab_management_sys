{"ast":null,"code":"function groupOptions(_ref) {\n  let {\n    data\n  } = _ref;\n  const sortedData = [];\n  const unGroupedData = [];\n  const groupedData = data.reduce((acc, item, index) => {\n    if (item.group) {\n      if (acc[item.group]) acc[item.group].push(index);else acc[item.group] = [index];\n    } else {\n      unGroupedData.push(index);\n    }\n\n    return acc;\n  }, {});\n  Object.keys(groupedData).forEach(groupName => {\n    sortedData.push(...groupedData[groupName].map(index => data[index]));\n  });\n  sortedData.push(...unGroupedData.map(itemIndex => data[itemIndex]));\n  return sortedData;\n}\n\nexport { groupOptions };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\utils\\group-options\\group-options.ts"],"names":[],"mappings":"AAAO,SAAS,YAAT,OAAgC;AAAA,MAAV;AAAE,IAAA;AAAF,GAAU;AACrC,QAAM,UAAU,GAAG,EAAnB;AACA,QAAM,aAAa,GAAG,EAAtB;AACA,QAAM,WAAW,GAAG,IAAI,CAAC,MAAL,CAAY,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,KAAsB;AACpD,QAAI,IAAI,CAAC,KAAT,EAAgB;AACd,UAAI,GAAG,CAAC,IAAI,CAAC,KAAN,CAAP,EACE,GAAG,CAAC,IAAI,CAAC,KAAN,CAAH,CAAgB,IAAhB,CAAqB,KAArB,EADF,KAGE,GAAG,CAAC,IAAI,CAAC,KAAN,CAAH,GAAkB,CAAC,KAAD,CAAlB;AACH,KALD,MAKO;AACL,MAAA,aAAa,CAAC,IAAd,CAAmB,KAAnB;AACD;;AACD,WAAO,GAAP;AACD,GAVmB,EAUjB,EAViB,CAApB;AAWA,EAAA,MAAM,CAAC,IAAP,CAAY,WAAZ,EAAyB,OAAzB,CAAkC,SAAD,IAAe;AAC9C,IAAA,UAAU,CAAC,IAAX,CAAgB,GAAG,WAAW,CAAC,SAAD,CAAX,CAAuB,GAAvB,CAA4B,KAAD,IAAW,IAAI,CAAC,KAAD,CAA1C,CAAnB;AACD,GAFD;AAGA,EAAA,UAAU,CAAC,IAAX,CAAgB,GAAG,aAAa,CAAC,GAAd,CAAmB,SAAD,IAAe,IAAI,CAAC,SAAD,CAArC,CAAnB;AACA,SAAO,UAAP;AACF","sourcesContent":["interface GroupData {\n  data: { group?: string }[];\n}\n\nexport function groupOptions({ data }: GroupData) {\n  const sortedData = [];\n  const unGroupedData = [];\n  const groupedData = data.reduce((acc, item, index) => {\n    if (item.group) {\n      if (acc[item.group]) acc[item.group].push(index);\n      else acc[item.group] = [index];\n    } else {\n      unGroupedData.push(index);\n    }\n    return acc;\n  }, {});\n\n  Object.keys(groupedData).forEach((groupName) => {\n    sortedData.push(...groupedData[groupName].map((index) => data[index]));\n  });\n\n  sortedData.push(...unGroupedData.map((itemIndex) => data[itemIndex]));\n\n  return sortedData;\n}\n"]},"metadata":{},"sourceType":"module"}