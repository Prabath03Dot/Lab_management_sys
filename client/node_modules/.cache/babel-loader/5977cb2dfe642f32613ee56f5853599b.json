{"ast":null,"code":"import React from 'react';\nimport { useUuid, useUncontrolled } from '@mantine/hooks';\nimport { Group } from '../Group/Group.js';\nimport { Chip } from './Chip/Chip.js';\nimport { filterChildrenByType } from '../../utils/filter-children-by-type/filter-children-by-type.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction Chips(_a) {\n  var _b = _a,\n      {\n    value,\n    defaultValue,\n    onChange,\n    color,\n    spacing = \"xs\",\n    radius = \"xl\",\n    size = \"sm\",\n    name,\n    variant,\n    multiple,\n    children,\n    id,\n    classNames,\n    styles\n  } = _b,\n      others = __objRest(_b, [\"value\", \"defaultValue\", \"onChange\", \"color\", \"spacing\", \"radius\", \"size\", \"name\", \"variant\", \"multiple\", \"children\", \"id\", \"classNames\", \"styles\"]);\n\n  const uuid = useUuid(id);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n    rule: val => multiple ? Array.isArray(val) : typeof val === \"string\"\n  });\n  const chips = filterChildrenByType(children, Chip).map((child, index) => React.cloneElement(child, {\n    variant,\n    radius,\n    color,\n    __staticSelector: \"Chips\",\n    classNames,\n    styles,\n    name,\n    size,\n    id: `${uuid}-${index}`,\n    type: multiple ? \"checkbox\" : \"radio\",\n    checked: Array.isArray(_value) ? _value.includes(child.props.value) : child.props.value === _value,\n    onChange: () => {\n      const val = child.props.value;\n\n      if (Array.isArray(_value)) {\n        setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n      } else {\n        setValue(val);\n      }\n    }\n  }));\n  return /* @__PURE__ */React.createElement(Group, __spreadValues({\n    spacing,\n    id: uuid\n  }, others), chips);\n}\n\nChips.displayName = \"@mantine/core/Chips\";\nexport { Chips };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Chips\\Chips.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useUncontrolled, useUuid } from '@mantine/hooks';\nimport { DefaultProps, MantineNumberSize, MantineSize, MantineColor } from '@mantine/styles';\nimport { filterChildrenByType } from '../../utils';\nimport { Group, GroupProps } from '../Group/Group';\nimport { Chip, ChipStylesNames } from './Chip/Chip';\n\nexport interface ChipsProps<T extends boolean = false>\n  extends DefaultProps<ChipStylesNames>,\n    Omit<GroupProps, 'value' | 'defaultValue' | 'onChange' | 'classNames' | 'styles'> {\n  /** Spacing between chips from theme or number to set value in px */\n  spacing?: MantineNumberSize;\n\n  /** Chip border-radius from theme or number to set value in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineSize;\n\n  /** Allow multiple values to be picked */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string;\n\n  /** Uncontrolled component value */\n  defaultValue?: T extends true ? string[] : string;\n\n  /** Called when value changes */\n  onChange?(value: T extends true ? string[] : string): void;\n\n  /** Static id, used to generate inputs names */\n  id?: string;\n\n  /** <Chip /> components only */\n  children?: React.ReactNode;\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: 'filled' | 'outline';\n\n  /** Active chip color, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Inputs name attribute */\n  name?: string;\n}\n\nexport function Chips<T extends boolean>({\n  value,\n  defaultValue,\n  onChange,\n  color,\n  spacing = 'xs',\n  radius = 'xl',\n  size = 'sm',\n  name,\n  variant,\n  multiple,\n  children,\n  id,\n  classNames,\n  styles,\n  ...others\n}: ChipsProps<T>) {\n  const uuid = useUuid(id);\n  const [_value, setValue] = useUncontrolled<string | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n    rule: (val) => (multiple ? Array.isArray(val) : typeof val === 'string'),\n  });\n\n  const chips = filterChildrenByType(children, Chip).map((child, index) =>\n    React.cloneElement(child, {\n      variant,\n      radius,\n      color,\n      __staticSelector: 'Chips',\n      classNames,\n      styles,\n      name,\n      size,\n      id: `${uuid}-${index}`,\n      type: multiple ? 'checkbox' : 'radio',\n      checked: Array.isArray(_value)\n        ? _value.includes(child.props.value)\n        : child.props.value === _value,\n      onChange: () => {\n        const val = child.props.value;\n\n        if (Array.isArray(_value)) {\n          setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n        } else {\n          setValue(val);\n        }\n      },\n    })\n  );\n\n  return (\n    <Group spacing={spacing} id={uuid} {...others}>\n      {chips}\n    </Group>\n  );\n}\n\nChips.displayName = '@mantine/core/Chips';\n"]},"metadata":{},"sourceType":"module"}