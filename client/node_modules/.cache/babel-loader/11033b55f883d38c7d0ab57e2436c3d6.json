{"ast":null,"code":"import { c as LocalizationContext, b as _slicedToArray } from './LocalizationContext-2dd9ebb4.js';\nimport React__default, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Sendbird from './SendbirdProvider.js';\nimport ChannelList from './ChannelList.js';\nimport Conversation from './Channel.js';\nimport ChannelSettings from './ChannelSettings.js';\nimport MessageSearch from './MessageSearch.js';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, e as Loader } from './index-8f3e6954.js';\nimport { I as IconButton } from './index-5ffc2e37.js';\nimport 'sendbird';\nimport './actionTypes-62b820c3.js';\nimport './index-2b8da253.js';\nimport 'css-vars-ponyfill';\nimport './index-881fbba8.js';\nimport './utils-dadb8f4b.js';\nimport './LeaveChannel-2a6e54c8.js';\nimport './index-89e256af.js';\nimport './index-dc6f389c.js';\nimport './index-3b2392ac.js';\nimport './index-01add60f.js';\nimport 'react-dom';\nimport './index-c5333808.js';\nvar COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props) {\n  var channelUrl = props.channelUrl,\n      onResultClick = props.onResultClick,\n      onCloseClick = props.onCloseClick;\n\n  var _a = useState(''),\n      searchString = _a[0],\n      setSearchString = _a[1];\n\n  var _b = useState(''),\n      inputString = _b[0],\n      setInputString = _b[1];\n\n  var _c = useState(false),\n      loading = _c[0],\n      setLoading = _c[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var timeout = null;\n  useEffect(function () {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  var handleOnChangeInputString = function handleOnChangeInputString(e) {\n    setInputString(e.target.value);\n  };\n\n  var handleOnResultLoaded = function handleOnResultLoaded() {\n    setLoading(false);\n  };\n\n  var handleOnClickResetStringButton = function handleOnClickResetStringButton(e) {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_CLASS_NAME + \"__header__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.SEARCH_IN_CHANNEL), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: COMPONENT_CLASS_NAME + \"__header__close-button\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCloseClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    width: \"22px\",\n    height: \"22px\"\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__search-icon\",\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container__input-area\",\n    placeholder: stringSet.SEARCH,\n    value: inputString,\n    onChange: handleOnChangeInputString\n  }), inputString && loading && /*#__PURE__*/React__default.createElement(Loader, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__spinner\",\n    width: \"20px\",\n    height: \"20px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"20px\",\n    height: \"20px\"\n  })), !loading && inputString && /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__reset-input-button\",\n    type: IconTypes.REMOVE,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"20px\",\n    height: \"20px\",\n    onClick: handleOnClickResetStringButton\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__message-search\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearch, {\n    channelUrl: channelUrl,\n    searchString: searchString,\n    onResultClick: onResultClick,\n    onResultLoaded: handleOnResultLoaded\n  })));\n}\n\nfunction App(props) {\n  var appId = props.appId,\n      userId = props.userId,\n      accessToken = props.accessToken,\n      theme = props.theme,\n      userListQuery = props.userListQuery,\n      nickname = props.nickname,\n      profileUrl = props.profileUrl,\n      _props$config = props.config,\n      config = _props$config === void 0 ? {} : _props$config,\n      useReaction = props.useReaction,\n      replyType = props.replyType,\n      useMessageGrouping = props.useMessageGrouping,\n      colorSet = props.colorSet,\n      stringSet = props.stringSet,\n      dateLocale = props.dateLocale,\n      allowProfileEdit = props.allowProfileEdit,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      showSearchIcon = props.showSearchIcon,\n      onProfileEditSuccess = props.onProfileEditSuccess,\n      imageCompression = props.imageCompression,\n      disableAutoSelect = props.disableAutoSelect;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentChannelUrl = _useState2[0],\n      setCurrentChannelUrl = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSettings = _useState4[0],\n      setShowSettings = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSearch = _useState6[0],\n      setShowSearch = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      highlightedMessage = _useState8[0],\n      setHighlightedMessage = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startingPoint = _useState10[0],\n      setStartingPoint = _useState10[1];\n\n  return /*#__PURE__*/React__default.createElement(Sendbird, {\n    stringSet: stringSet,\n    dateLocale: dateLocale,\n    appId: appId,\n    userId: userId,\n    accessToken: accessToken,\n    theme: theme,\n    nickname: nickname,\n    profileUrl: profileUrl,\n    userListQuery: userListQuery,\n    config: config,\n    colorSet: colorSet,\n    disableUserProfile: disableUserProfile,\n    renderUserProfile: renderUserProfile,\n    imageCompression: imageCompression,\n    useReaction: useReaction\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__wrap\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__channellist-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelList, {\n    allowProfileEdit: allowProfileEdit,\n    onProfileEditSuccess: onProfileEditSuccess,\n    onChannelSelect: function onChannelSelect(channel) {\n      setStartingPoint(null);\n      setHighlightedMessage(null);\n\n      if (channel && channel.url) {\n        setCurrentChannelUrl(channel.url);\n      } else {\n        setCurrentChannelUrl('');\n      }\n    },\n    disableAutoSelect: disableAutoSelect\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\\n            \".concat(showSettings ? 'sendbird-app__conversation--settings-open' : '', \"\\n            \").concat(showSearch ? 'sendbird-app__conversation--search-open' : '', \"\\n            sendbird-app__conversation-wrap\\n          \")\n  }, /*#__PURE__*/React__default.createElement(Conversation, {\n    channelUrl: currentChannelUrl,\n    onChatHeaderActionClick: function onChatHeaderActionClick() {\n      setShowSearch(false);\n      setShowSettings(!showSettings);\n    },\n    onSearchClick: function onSearchClick() {\n      setShowSettings(false);\n      setShowSearch(!showSearch);\n    },\n    showSearchIcon: showSearchIcon,\n    startingPoint: startingPoint,\n    highlightedMessage: highlightedMessage,\n    useReaction: useReaction,\n    replyType: replyType,\n    useMessageGrouping: useMessageGrouping\n  })), showSettings && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__settingspanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelSettings, {\n    className: \"sendbird-channel-settings\",\n    channelUrl: currentChannelUrl,\n    onCloseClick: function onCloseClick() {\n      setShowSettings(false);\n    }\n  })), showSearch && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__searchpanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearchPannel, {\n    channelUrl: currentChannelUrl,\n    onResultClick: function onResultClick(message) {\n      if (message.messageId === highlightedMessage) {\n        setHighlightedMessage(null);\n        setTimeout(function () {\n          setHighlightedMessage(message.messageId);\n        });\n      } else {\n        setStartingPoint(message.createdAt);\n        setHighlightedMessage(message.messageId);\n      }\n    },\n    onCloseClick: function onCloseClick() {\n      setShowSearch(false);\n    }\n  }))));\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  }),\n  disableAutoSelect: PropTypes.bool\n};\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false\n};\nexport { App as default };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\MessageSearch\\messageSearchPannel.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\App\\index.jsx"],"names":["COMPONENT_CLASS_NAME","onResultClick","onCloseClick","props","searchString","setSearchString","useState","inputString","setInputString","loading","setLoading","useContext","timeout","useEffect","clearTimeout","setTimeout","handleOnChangeInputString","e","handleOnResultLoaded","handleOnClickResetStringButton","LabelTypography","LabelColors","ONBACKGROUND_1","stringSet","IconTypes","IconColors","appId","userId","accessToken","theme","userListQuery","nickname","profileUrl","config","useReaction","replyType","useMessageGrouping","colorSet","dateLocale","allowProfileEdit","disableUserProfile","renderUserProfile","showSearchIcon","onProfileEditSuccess","imageCompression","disableAutoSelect","currentChannelUrl","setCurrentChannelUrl","showSettings","setShowSettings","showSearch","setShowSearch","highlightedMessage","setHighlightedMessage","startingPoint","setStartingPoint","channel","message","App","PropTypes","logLevel","compressionRate","resizingWidth","resizingHeight","bool"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport './messageSearchPannel.scss';\n\nimport MessageSearch from './index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Loader from '../../ui/Loader';\n\ninterface Props {\n  channelUrl: string;\n  onResultClick?: (message) => void;\n  onCloseClick?: () => void;\n}\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props: Props): JSX.Element {\n  const {\n    channelUrl,\n    onResultClick,\n    onCloseClick,\n  } = props;\n\n  const [searchString, setSearchString] = useState('');\n  const [inputString, setInputString] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  let timeout = null;\n  useEffect(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  const handleOnChangeInputString = (e) => {\n    setInputString(e.target.value);\n  };\n\n  const handleOnResultLoaded = () => {\n    setLoading(false);\n  };\n\n  const handleOnClickResetStringButton = (e) => {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return (\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__header`}>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__header__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.SEARCH_IN_CHANNEL}\n        </Label>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__header__close-button`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onCloseClick}\n        >\n          <Icon\n            type={IconTypes.CLOSE}\n            fillColor={IconColors.ON_BACKGROUND_1}\n            width=\"22px\"\n            height=\"22px\"\n          />\n        </IconButton>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__input`}>\n        <div className={`${COMPONENT_CLASS_NAME}__input__container`}>\n            <Icon\n              className={`${COMPONENT_CLASS_NAME}__input__container__search-icon`}\n              type={IconTypes.SEARCH}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"24px\"\n              height=\"24px\"\n            />\n            <input\n              className={`${COMPONENT_CLASS_NAME}__input__container__input-area`}\n              placeholder={stringSet.SEARCH}\n              value={inputString}\n              onChange={handleOnChangeInputString}\n            />\n            {\n              inputString && loading && (\n                <Loader\n                  className={`${COMPONENT_CLASS_NAME}__input__container__spinner`}\n                  width=\"20px\"\n                  height=\"20px\"\n                >\n                  <Icon\n                    type={IconTypes.SPINNER}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                </Loader>\n              )\n            }\n            {\n              !loading && inputString && (\n                <Icon\n                  className={`${COMPONENT_CLASS_NAME}__input__container__reset-input-button`}\n                  type={IconTypes.REMOVE}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={handleOnClickResetStringButton}\n                />\n              )\n            }\n        </div>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__message-search`}>\n        <MessageSearch\n          channelUrl={channelUrl}\n          searchString={searchString}\n          onResultClick={onResultClick}\n          onResultLoaded={handleOnResultLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MessageSearchPannel;\n","/**\n * This is a drop in Chat solution\n * Can also be used as an example for creating\n * default chat apps\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sendbird from '../../lib/Sendbird';\n\nimport ChannelList from '../ChannelList';\nimport Conversation from '../Conversation';\nimport ChannelSettings from '../ChannelSettings';\nimport MessageSearchPannel from '../MessageSearch/messageSearchPannel';\n\nimport './index.scss';\n\nexport default function App(props) {\n  const {\n    appId,\n    userId,\n    accessToken,\n    theme,\n    userListQuery,\n    nickname,\n    profileUrl,\n    config = {},\n    useReaction,\n    replyType,\n    useMessageGrouping,\n    colorSet,\n    stringSet,\n    dateLocale,\n    allowProfileEdit,\n    disableUserProfile,\n    renderUserProfile,\n    showSearchIcon,\n    onProfileEditSuccess,\n    imageCompression,\n    disableAutoSelect,\n  } = props;\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [highlightedMessage, setHighlightedMessage] = useState(null);\n  const [startingPoint, setStartingPoint] = useState(null);\n\n  return (\n    <Sendbird\n      stringSet={stringSet}\n      dateLocale={dateLocale}\n      appId={appId}\n      userId={userId}\n      accessToken={accessToken}\n      theme={theme}\n      nickname={nickname}\n      profileUrl={profileUrl}\n      userListQuery={userListQuery}\n      config={config}\n      colorSet={colorSet}\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n      imageCompression={imageCompression}\n      useReaction={useReaction}\n    >\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <ChannelList\n            allowProfileEdit={allowProfileEdit}\n            onProfileEditSuccess={onProfileEditSuccess}\n            onChannelSelect={(channel) => {\n              setStartingPoint(null);\n              setHighlightedMessage(null);\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              } else {\n                setCurrentChannelUrl('');\n              }\n            }}\n            disableAutoSelect={disableAutoSelect}\n          />\n        </div>\n        <div\n          className={`\n            ${showSettings ? 'sendbird-app__conversation--settings-open' : ''}\n            ${showSearch ? 'sendbird-app__conversation--search-open' : ''}\n            sendbird-app__conversation-wrap\n          `}\n        >\n          <Conversation\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSearch(false);\n              setShowSettings(!showSettings);\n            }}\n            onSearchClick={() => {\n              setShowSettings(false);\n              setShowSearch(!showSearch);\n            }}\n            showSearchIcon={showSearchIcon}\n            startingPoint={startingPoint}\n            highlightedMessage={highlightedMessage}\n            useReaction={useReaction}\n            replyType={replyType}\n            useMessageGrouping={useMessageGrouping}\n          />\n        </div>\n        {showSettings && (\n          <div className=\"sendbird-app__settingspanel-wrap\">\n            <ChannelSettings\n              className=\"sendbird-channel-settings\"\n              channelUrl={currentChannelUrl}\n              onCloseClick={() => {\n                setShowSettings(false);\n              }}\n            />\n          </div>\n        )}\n        {showSearch && (\n          <div className=\"sendbird-app__searchpanel-wrap\">\n            <MessageSearchPannel\n              channelUrl={currentChannelUrl}\n              onResultClick={(message) => {\n                if (message.messageId === highlightedMessage) {\n                  setHighlightedMessage(null);\n                  setTimeout(() => {\n                    setHighlightedMessage(message.messageId);\n                  });\n                } else {\n                  setStartingPoint(message.createdAt);\n                  setHighlightedMessage(message.messageId);\n                }\n              }}\n              onCloseClick={() => {\n                setShowSearch(false);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Sendbird>\n  );\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    resizingHeight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }),\n  disableAutoSelect: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false,\n};\n"]},"metadata":{},"sourceType":"module"}