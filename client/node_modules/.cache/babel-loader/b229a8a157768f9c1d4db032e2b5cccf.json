{"ast":null,"code":"import React__default, { useMemo } from 'react';\nimport { I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-8f3e6954.js';\nimport { u as useDefaultAvatar, a as getChannelAvatarSource } from './utils-dadb8f4b.js';\n\nfunction ChannelAvatar(_a) {\n  var channel = _a.channel,\n      userId = _a.userId,\n      theme = _a.theme,\n      _b = _a.width,\n      width = _b === void 0 ? 56 : _b,\n      _c = _a.height,\n      height = _c === void 0 ? 56 : _c;\n  var isBroadcast = channel.isBroadcast;\n  var memoizedAvatar = useMemo(function () {\n    return isBroadcast ? useDefaultAvatar(channel) ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-chat-header--default-avatar\",\n      style: {\n        width: width,\n        height: height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.BROADCAST,\n      fillColor: IconColors.CONTENT,\n      width: width * 0.575,\n      height: height * 0.575\n    })) : /*#__PURE__*/React__default.createElement(Avatar, {\n      className: \"sendbird-chat-header--avatar--broadcast-channel\",\n      src: getChannelAvatarSource(channel, userId),\n      width: width,\n      height: height,\n      alt: channel.name\n    }) : /*#__PURE__*/React__default.createElement(Avatar, {\n      className: \"sendbird-chat-header--avatar--group-channel\",\n      src: getChannelAvatarSource(channel, userId),\n      width: width + \"px\",\n      height: height + \"px\",\n      alt: channel.name\n    });\n  }, [channel.members, channel.coverUrl, theme]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, memoizedAvatar);\n}\n\nexport { ChannelAvatar as C };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\ui\\ChannelAvatar\\index.tsx"],"names":["channel","userId","theme","_b","_c","memoizedAvatar","useMemo","isBroadcast","width","height","display","justifyContent","alignItems","IconTypes","IconColors","utils","name","React"],"mappings":";;;;AAgBA,SAAA,aAAA,CAAA,EAAA,EAAA;MACEA,OAAO,GAAA,EAAA,CAAA,O;MACPC,MAAM,GAAA,EAAA,CAAA,M;MACNC,KAAK,GAAA,EAAA,CAAA,K;MACLC,EAAAA,GAAAA,EAAAA,CAAAA,K;MAAAA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAG,E;MACRC,EAAAA,GAAAA,EAAAA,CAAAA,M;MAAAA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAG,E;AAED,MAAA,WAAW,GAAKJ,OAAO,CAAvB,WAAA;AACR,MAAMK,cAAc,GAAGC,OAAO,CAAC,YAAA;AAAM,WACnCC,WAAW,GAEP,gBAAA,CAAA,OAAA,CAAA,GAAA,aAEI,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EADX,sCAAA;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EADA,KAAA;AAELC,QAAAA,MAAM,EAFD,MAAA;AAGLC,QAAAA,OAAO,EAHF,MAAA;AAILC,QAAAA,cAAc,EAJT,QAAA;AAKLC,QAAAA,UAAU,EAAE;AALP;AAFT,KAAA,EAAA,aAUE,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,MAAA,IAAI,EAAEC,SAAS,CADjB,SAAA;AAEE,MAAA,SAAS,EAAEC,UAAU,CAFvB,OAAA;AAGE,MAAA,KAAK,EAAEN,KAAK,GAHd,KAAA;AAIE,MAAA,MAAM,EAAEC,MAAM,GAAG;AAJnB,KAAA,CAVF,CAFJ,GAAA,aAqBI,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EADX,iDAAA;AAEE,MAAA,GAAG,EAAEM,sBAAAA,CAAAA,OAAAA,EAFP,MAEOA,CAFP;AAGE,MAAA,KAAK,EAHP,KAAA;AAIE,MAAA,MAAM,EAJR,MAAA;AAKE,MAAA,GAAG,EAAEf,OAAO,CAACgB;AALf,KAAA,CAvBG,GAAA,aAiCP,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EADX,6CAAA;AAEE,MAAA,GAAG,EAAED,sBAAAA,CAAAA,OAAAA,EAFP,MAEOA,CAFP;AAGE,MAAA,KAAK,EAAKP,KAAK,GAHjB,IAAA;AAIE,MAAA,MAAM,EAAKC,MAAM,GAJnB,IAAA;AAKE,MAAA,GAAG,EAAET,OAAO,CAACgB;AALf,KAAA,CAlC+B;AAAP,GAAA,EA0C5B,CAAChB,OAAO,CAAR,OAAA,EAAkBA,OAAO,CAAzB,QAAA,EA1CF,KA0CE,CA1C4B,CAA9B;AA2CA,SAAA,aACEiB,cAAAA,CAAAA,aAAAA,CAAAA,cAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EADF,cACEA,CADF;AAGD","sourcesContent":["import React, { useMemo } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element{\n  const { isBroadcast } = channel;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.useDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel.name}\n        />\n      )\n  ),[channel.members, channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"]},"metadata":{},"sourceType":"module"}