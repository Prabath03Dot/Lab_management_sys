{"ast":null,"code":"import React, { forwardRef, useState } from 'react';\nimport * as RadixScrollArea from '@radix-ui/react-scroll-area';\nimport { useMantineTheme } from '@mantine/styles';\nimport useStyles from './ScrollArea.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst ScrollArea = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    children,\n    className,\n    classNames,\n    styles,\n    scrollbarSize = 12,\n    scrollHideDelay = 1e3,\n    type = \"hover\",\n    dir,\n    offsetScrollbars = false,\n    viewportRef,\n    onScrollPositionChange\n  } = _b,\n      others = __objRest(_b, [\"children\", \"className\", \"classNames\", \"styles\", \"scrollbarSize\", \"scrollHideDelay\", \"type\", \"dir\", \"offsetScrollbars\", \"viewportRef\", \"onScrollPositionChange\"]);\n\n  const [scrollbarHovered, setScrollbarHovered] = useState(false);\n  const theme = useMantineTheme();\n  const {\n    classes,\n    cx\n  } = useStyles({\n    scrollbarSize,\n    offsetScrollbars,\n    scrollbarHovered\n  }, {\n    name: \"ScrollArea\",\n    classNames,\n    styles\n  });\n  return /* @__PURE__ */React.createElement(RadixScrollArea.Root, {\n    type,\n    scrollHideDelay,\n    dir: dir || theme.dir,\n    ref,\n    asChild: true\n  }, /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className)\n  }, others), /* @__PURE__ */React.createElement(RadixScrollArea.Viewport, {\n    className: classes.viewport,\n    ref: viewportRef,\n    onScroll: typeof onScrollPositionChange === \"function\" ? _ref => {\n      let {\n        currentTarget\n      } = _ref;\n      return onScrollPositionChange({\n        x: currentTarget.scrollLeft,\n        y: currentTarget.scrollTop\n      });\n    } : void 0\n  }, children), /* @__PURE__ */React.createElement(RadixScrollArea.Scrollbar, {\n    orientation: \"horizontal\",\n    className: classes.scrollbar,\n    forceMount: true,\n    onMouseEnter: () => setScrollbarHovered(true),\n    onMouseLeave: () => setScrollbarHovered(false)\n  }, /* @__PURE__ */React.createElement(RadixScrollArea.Thumb, {\n    className: classes.thumb\n  })), /* @__PURE__ */React.createElement(RadixScrollArea.Scrollbar, {\n    orientation: \"vertical\",\n    className: classes.scrollbar,\n    forceMount: true,\n    onMouseEnter: () => setScrollbarHovered(true),\n    onMouseLeave: () => setScrollbarHovered(false)\n  }, /* @__PURE__ */React.createElement(RadixScrollArea.Thumb, {\n    className: classes.thumb\n  })), /* @__PURE__ */React.createElement(RadixScrollArea.Corner, {\n    className: classes.corner\n  })));\n});\nScrollArea.displayName = \"@mantine/core/ScrollArea\";\nexport { ScrollArea };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollArea.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport * as RadixScrollArea from '@radix-ui/react-scroll-area';\nimport { DefaultProps, ClassNames, useMantineTheme } from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles from './ScrollArea.styles';\n\nexport type ScrollAreaStylesNames = ClassNames<typeof useStyles>;\n\nexport interface ScrollAreaProps\n  extends DefaultProps<ScrollAreaStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Scrollbar size in px */\n  scrollbarSize?: number;\n\n  /** Scrollbars type */\n  type?: 'auto' | 'always' | 'scroll' | 'hover';\n\n  /** Scroll hide delay in ms, for scroll and hover types only */\n  scrollHideDelay?: number;\n\n  /** Reading direction of the scroll area */\n  dir?: 'ltr' | 'rtl';\n\n  /** Should scrollbars be offset with padding */\n  offsetScrollbars?: boolean;\n\n  /** Get viewport ref */\n  viewportRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Subscribe to scroll position changes */\n  onScrollPositionChange?(position: { x: number; y: number }): void;\n}\n\nexport const ScrollArea = forwardRef<HTMLDivElement, ScrollAreaProps>(\n  (\n    {\n      children,\n      className,\n      classNames,\n      styles,\n      scrollbarSize = 12,\n      scrollHideDelay = 1000,\n      type = 'hover',\n      dir,\n      offsetScrollbars = false,\n      viewportRef,\n      onScrollPositionChange,\n      ...others\n    }: ScrollAreaProps,\n    ref\n  ) => {\n    const [scrollbarHovered, setScrollbarHovered] = useState(false);\n    const theme = useMantineTheme();\n    const { classes, cx } = useStyles(\n      { scrollbarSize, offsetScrollbars, scrollbarHovered },\n      { name: 'ScrollArea', classNames, styles }\n    );\n\n    return (\n      <RadixScrollArea.Root\n        type={type}\n        scrollHideDelay={scrollHideDelay}\n        dir={dir || theme.dir}\n        ref={ref}\n        asChild\n      >\n        <Box className={cx(classes.root, className)} {...others}>\n          <RadixScrollArea.Viewport\n            className={classes.viewport}\n            ref={viewportRef}\n            onScroll={\n              typeof onScrollPositionChange === 'function'\n                ? ({ currentTarget }) =>\n                    onScrollPositionChange({\n                      x: currentTarget.scrollLeft,\n                      y: currentTarget.scrollTop,\n                    })\n                : undefined\n            }\n          >\n            {children}\n          </RadixScrollArea.Viewport>\n          <RadixScrollArea.Scrollbar\n            orientation=\"horizontal\"\n            className={classes.scrollbar}\n            forceMount\n            onMouseEnter={() => setScrollbarHovered(true)}\n            onMouseLeave={() => setScrollbarHovered(false)}\n          >\n            <RadixScrollArea.Thumb className={classes.thumb} />\n          </RadixScrollArea.Scrollbar>\n          <RadixScrollArea.Scrollbar\n            orientation=\"vertical\"\n            className={classes.scrollbar}\n            forceMount\n            onMouseEnter={() => setScrollbarHovered(true)}\n            onMouseLeave={() => setScrollbarHovered(false)}\n          >\n            <RadixScrollArea.Thumb className={classes.thumb} />\n          </RadixScrollArea.Scrollbar>\n          <RadixScrollArea.Corner className={classes.corner} />\n        </Box>\n      </RadixScrollArea.Root>\n    );\n  }\n);\n\nScrollArea.displayName = '@mantine/core/ScrollArea';\n"]},"metadata":{},"sourceType":"module"}