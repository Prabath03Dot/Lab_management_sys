{"ast":null,"code":"import { useEffect } from 'react';\n\nfunction useWindowEvent(type, listener, options) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, []);\n}\n\nexport { useWindowEvent };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-window-event\\use-window-event.ts"],"names":[],"mappings":";;AACO,SAAS,cAAT,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD;AACtD,EAAA,SAAS,CAAC,MAAM;AACd,IAAA,MAAM,CAAC,gBAAP,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC,OAAxC;AACA,WAAO,MAAM,MAAM,CAAC,mBAAP,CAA2B,IAA3B,EAAiC,QAAjC,EAA2C,OAA3C,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAIF","sourcesContent":["import { useEffect } from 'react';\n\nexport function useWindowEvent<K extends keyof WindowEventMap>(\n  type: K,\n  listener: (this: Window, ev: WindowEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, []);\n}\n"]},"metadata":{},"sourceType":"module"}