{"ast":null,"code":"var _jsxFileName = \"D:\\\\D-Downlods\\\\MINI_ Prpject 2022\\\\lab-manage-sys\\\\client\\\\src\\\\pages\\\\Imp\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport MDSpinner from \"react-md-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appID = process.env.REACT_APP_ID;\nconst region = process.env.REACT_APP_REGION;\nconst AUTH_KEY = process.env.REACT_APP_AUTH_KEY;\nconst wid = process.env.REACT_APP_W1;\n\nconst Chat = () => {\n  _s();\n\n  const [load, setLoad] = useState(true);\n  useEffect(() => {\n    setLoad(true);\n    window.CometChatWidget.init({\n      appID: appID,\n      appRegion: region,\n      authKey: AUTH_KEY\n    }).then(response => {\n      console.log(\"Initialization completed successfully\"); //You can now call login function.\n\n      let uid = localStorage.getItem(\"cc-uid\");\n\n      if (uid === null) {\n        // create new user\n        const uid = \"user\" + new Date().getSeconds().toString();\n        const user = new window.CometChatWidget.CometChat.User(uid);\n        user.setName(uid);\n        window.CometChatWidget.createOrUpdateUser(user).then(user => {\n          // Proceed with user login\n          window.CometChatWidget.login({\n            uid: uid\n          }).then(loggedInUser => {\n            localStorage.setItem(\"cc-uid\", loggedInUser.uid); // Proceed with launching your Chat Widget\n\n            window.CometChatWidget.launch({\n              widgetID: wid,\n              roundedCorners: \"true\",\n              docked: \"true\",\n              height: \"300px\",\n              width: \"400px\",\n              defaultID: process.env.REACT_APP_AGENT_ID,\n              defaultType: \"user\" //user or group\n\n            });\n            setLoad(false);\n          });\n        });\n      } else {\n        window.CometChatWidget.login({\n          uid: uid\n        }).then(user => {\n          window.CometChatWidget.launch({\n            widgetID: wid,\n            roundedCorners: \"true\",\n            docked: \"true\",\n            height: \"300px\",\n            width: \"400px\",\n            defaultID: process.env.REACT_APP_AGENT_ID,\n            defaultType: \"user\" //user or group\n\n          });\n          setLoad(false);\n        });\n      }\n    });\n  }, []);\n\n  if (load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(MDSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Chat, \"nO3h0PUIZBLwJhkAvfyA/803Qfw=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/D-Downlods/MINI_ Prpject 2022/lab-manage-sys/client/src/pages/Imp/Chat.js"],"names":["useEffect","useState","MDSpinner","appID","process","env","REACT_APP_ID","region","REACT_APP_REGION","AUTH_KEY","REACT_APP_AUTH_KEY","wid","REACT_APP_W1","Chat","load","setLoad","window","CometChatWidget","init","appRegion","authKey","then","response","console","log","uid","localStorage","getItem","Date","getSeconds","toString","user","CometChat","User","setName","createOrUpdateUser","login","loggedInUser","setItem","launch","widgetID","roundedCorners","docked","height","width","defaultID","REACT_APP_AGENT_ID","defaultType"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport MDSpinner from \"react-md-spinner\";\r\nconst appID = process.env.REACT_APP_ID;\r\nconst region = process.env.REACT_APP_REGION;\r\nconst AUTH_KEY = process.env.REACT_APP_AUTH_KEY;\r\nconst wid = process.env.REACT_APP_W1;\r\n\r\nconst Chat = () => {\r\n  const [load, setLoad] = useState(true);\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    window.CometChatWidget.init({\r\n      appID: appID,\r\n      appRegion: region,\r\n      authKey: AUTH_KEY,\r\n    }).then((response) => {\r\n      console.log(\"Initialization completed successfully\");\r\n      //You can now call login function.\r\n      let uid = localStorage.getItem(\"cc-uid\");\r\n      if (uid === null) {\r\n        // create new user\r\n        const uid = \"user\" + new Date().getSeconds().toString();\r\n        const user = new window.CometChatWidget.CometChat.User(uid);\r\n        user.setName(uid);\r\n        window.CometChatWidget.createOrUpdateUser(user).then((user) => {\r\n          // Proceed with user login\r\n          window.CometChatWidget.login({\r\n            uid: uid,\r\n          }).then((loggedInUser) => {\r\n            localStorage.setItem(\"cc-uid\", loggedInUser.uid);\r\n            // Proceed with launching your Chat Widget\r\n            window.CometChatWidget.launch({\r\n              widgetID: wid,\r\n              roundedCorners: \"true\",\r\n              docked: \"true\",\r\n              height: \"300px\",\r\n              width: \"400px\",\r\n              defaultID: process.env.REACT_APP_AGENT_ID,\r\n              defaultType: \"user\", //user or group\r\n            });\r\n            setLoad(false);\r\n          });\r\n        });\r\n      } else {\r\n        window.CometChatWidget.login({\r\n          uid: uid,\r\n        }).then((user) => {\r\n          window.CometChatWidget.launch({\r\n            widgetID: wid,\r\n            roundedCorners: \"true\",\r\n            docked: \"true\",\r\n            height: \"300px\",\r\n            width: \"400px\",\r\n            defaultID: process.env.REACT_APP_AGENT_ID,\r\n            defaultType: \"user\", //user or group\r\n          });\r\n          setLoad(false);\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n  if (load) {\r\n    return (\r\n      <div className=\"container\">\r\n        <MDSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"App\"></div>;\r\n};\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}