{"ast":null,"code":"import React, { Children } from 'react';\nimport useStyles from './MediaQuery.styles.js';\n\nfunction MediaQuery(_ref) {\n  let {\n    children,\n    smallerThan,\n    largerThan,\n    query,\n    styles,\n    className\n  } = _ref;\n\n  var _a;\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    smallerThan,\n    largerThan,\n    query,\n    styles\n  }, {\n    name: \"MediaQuery\"\n  });\n  const child = Children.only(children);\n  return React.cloneElement(child, {\n    className: cx(classes.media, (_a = child.props) == null ? void 0 : _a.className, className)\n  });\n}\n\nMediaQuery.displayName = \"@mantine/core/MediaQuery\";\nexport { MediaQuery };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\MediaQuery\\MediaQuery.tsx"],"names":[],"mappings":";;;AAEO,SAAS,UAAT,OAOJ;AAAA,MAPwB;AACzB,IAAA,QADyB;AAEzB,IAAA,WAFyB;AAGzB,IAAA,UAHyB;AAIzB,IAAA,KAJyB;AAKzB,IAAA,MALyB;AAMzB,IAAA;AANyB,GAOxB;;AACD,MAAI,EAAJ;;AACA,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,MAAkB,SAAS,CAAC;AAAE,IAAA,WAAF;AAAe,IAAA,UAAf;AAA2B,IAAA,KAA3B;AAAkC,IAAA;AAAlC,GAAD,EAA6C;AAAE,IAAA,IAAI,EAAE;AAAR,GAA7C,CAAjC;AACA,QAAM,KAAK,GAAG,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAd;AACA,SAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B;AAC/B,IAAA,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,KAAT,EAAgB,CAAC,EAAE,GAAG,KAAK,CAAC,KAAZ,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsC,EAAE,CAAC,SAAzD,EAAoE,SAApE;AADkB,GAA1B,CAAP;AAGD;;AACD,UAAU,CAAC,WAAX,GAAyB,0BAAzB","sourcesContent":["import React, { Children } from 'react';\nimport { MantineNumberSize, CSSObject } from '@mantine/styles';\nimport useStyles from './MediaQuery.styles';\n\nexport interface MediaQueryProps {\n  className?: string;\n\n  /** Child that should be shown at given breakpoint, it must accept className prop */\n  children: React.ReactNode;\n\n  /** Styles applied to child when viewport is smaller than given breakpoint */\n  smallerThan?: MantineNumberSize;\n\n  /** Styles applied to child when viewport is larger than given breakpoint */\n  largerThan?: MantineNumberSize;\n\n  /** Any other media query */\n  query?: string;\n\n  /** Styles applied to child when breakpoint matches */\n  styles: CSSObject;\n}\n\nexport function MediaQuery({\n  children,\n  smallerThan,\n  largerThan,\n  query,\n  styles,\n  className,\n}: MediaQueryProps) {\n  const { classes, cx } = useStyles(\n    { smallerThan, largerThan, query, styles },\n    { name: 'MediaQuery' }\n  );\n  const child = Children.only(children) as React.ReactElement;\n  return React.cloneElement(child, {\n    className: cx(classes.media, child.props?.className, className),\n  });\n}\n\nMediaQuery.displayName = '@mantine/core/MediaQuery';\n"]},"metadata":{},"sourceType":"module"}