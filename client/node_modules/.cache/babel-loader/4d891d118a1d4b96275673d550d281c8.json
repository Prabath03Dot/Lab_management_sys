{"ast":null,"code":"import { createStyles, getSharedColorScheme } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nconst sizes = {\n  xs: 16,\n  sm: 26,\n  md: 38,\n  lg: 56,\n  xl: 84\n};\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    size,\n    radius,\n    color\n  } = _ref;\n  return {\n    root: __spreadProps(__spreadValues({}, theme.fn.focusStyles()), {\n      WebkitTapHighlightColor: \"transparent\",\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      userSelect: \"none\",\n      overflow: \"hidden\",\n      width: theme.fn.size({\n        size,\n        sizes\n      }),\n      minWidth: theme.fn.size({\n        size,\n        sizes\n      }),\n      height: theme.fn.size({\n        size,\n        sizes\n      }),\n      borderRadius: radius ? theme.fn.size({\n        size: radius,\n        sizes: theme.radius\n      }) : size\n    }),\n    image: {\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"100%\",\n      display: \"block\"\n    },\n    placeholder: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n      fontSize: theme.fn.size({\n        size,\n        sizes\n      }) / 2.5,\n      color: getSharedColorScheme({\n        theme,\n        color,\n        variant: \"light\"\n      }).color,\n      fontWeight: 700,\n      backgroundColor: getSharedColorScheme({\n        theme,\n        color,\n        variant: \"light\"\n      }).background,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"100%\",\n      userSelect: \"none\"\n    }),\n    placeholderIcon: {\n      width: \"70%\",\n      height: \"70%\",\n      color: getSharedColorScheme({\n        theme,\n        color,\n        variant: \"light\"\n      }).color\n    }\n  };\n});\nexport default useStyles;\nexport { sizes };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Avatar\\Avatar.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  MantineColor,\n  getSharedColorScheme,\n} from '@mantine/styles';\n\ninterface AvatarStyles {\n  size: MantineNumberSize;\n  radius: MantineNumberSize;\n  color: MantineColor;\n}\n\nexport const sizes = {\n  xs: 16,\n  sm: 26,\n  md: 38,\n  lg: 56,\n  xl: 84,\n};\n\nexport default createStyles((theme, { size, radius, color }: AvatarStyles) => ({\n  root: {\n    ...theme.fn.focusStyles(),\n    WebkitTapHighlightColor: 'transparent',\n    boxSizing: 'border-box',\n    position: 'relative',\n    userSelect: 'none',\n    overflow: 'hidden',\n    width: theme.fn.size({ size, sizes }),\n    minWidth: theme.fn.size({ size, sizes }),\n    height: theme.fn.size({ size, sizes }),\n    borderRadius: radius ? theme.fn.size({ size: radius, sizes: theme.radius }) : size,\n  },\n\n  image: {\n    objectFit: 'cover',\n    width: '100%',\n    height: '100%',\n    display: 'block',\n  },\n\n  placeholder: {\n    ...theme.fn.fontStyles(),\n    fontSize: theme.fn.size({ size, sizes }) / 2.5,\n    color: getSharedColorScheme({ theme, color, variant: 'light' }).color,\n    fontWeight: 700,\n    backgroundColor: getSharedColorScheme({ theme, color, variant: 'light' }).background,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    userSelect: 'none',\n  },\n\n  placeholderIcon: {\n    width: '70%',\n    height: '70%',\n    color: getSharedColorScheme({ theme, color, variant: 'light' }).color,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}