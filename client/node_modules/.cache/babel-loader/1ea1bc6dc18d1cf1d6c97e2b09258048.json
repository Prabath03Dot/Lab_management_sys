{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { Text } from '../Text/Text.js';\nimport { Mark } from '../Mark/Mark.js';\nimport { highlighter } from './highlighter/highlighter.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Highlight = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    children,\n    highlight,\n    highlightColor = \"yellow\",\n    component,\n    highlightStyles\n  } = _b,\n      others = __objRest(_b, [\"children\", \"highlight\", \"highlightColor\", \"component\", \"highlightStyles\"]);\n\n  const highlightChunks = highlighter(children, highlight);\n  return /* @__PURE__ */React.createElement(Text, __spreadValues({\n    component,\n    ref\n  }, others), highlightChunks.map((_ref, i) => {\n    let {\n      chunk,\n      highlighted\n    } = _ref;\n    return highlighted ? /* @__PURE__ */React.createElement(Mark, {\n      key: i,\n      color: highlightColor,\n      sx: highlightStyles\n    }, chunk) : /* @__PURE__ */React.createElement(\"span\", {\n      key: i\n    }, chunk);\n  }));\n});\nHighlight.displayName = \"@mantine/core/Highlight\";\nexport { Highlight };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Highlight\\Highlight.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  MantineColor,\n  PolymorphicComponentProps,\n  PolymorphicRef,\n  MantineTheme,\n  CSSObject,\n} from '@mantine/styles';\nimport { Text, SharedTextProps } from '../Text/Text';\nimport { Mark } from '../Mark/Mark';\nimport { highlighter } from './highlighter/highlighter';\n\ninterface _HighlightProps extends SharedTextProps {\n  /** Substring or an array of substrings to highlight in children */\n  highlight: string | string[];\n\n  /** Color from theme that is used for highlighting */\n  highlightColor?: MantineColor;\n\n  /** Styles applied to highlighted part */\n  highlightStyles?: CSSObject | ((theme: MantineTheme) => CSSObject);\n\n  /** Full string part of which will be highlighted */\n  children: string;\n}\n\nexport type HighlightProps<C> = C extends React.ElementType\n  ? PolymorphicComponentProps<C, _HighlightProps>\n  : never;\n\ntype HighlightComponent = (<C = 'div'>(props: HighlightProps<C>) => React.ReactElement) & {\n  displayName?: string;\n};\n\nexport const Highlight: HighlightComponent = forwardRef(\n  <C extends React.ElementType = 'div'>(\n    {\n      children,\n      highlight,\n      highlightColor = 'yellow',\n      component,\n      highlightStyles,\n      ...others\n    }: HighlightProps<C>,\n    ref: PolymorphicRef<C>\n  ) => {\n    const highlightChunks = highlighter(children, highlight);\n\n    return (\n      <Text component={component as any} ref={ref} {...others}>\n        {highlightChunks.map(({ chunk, highlighted }, i) =>\n          highlighted ? (\n            <Mark key={i} color={highlightColor} sx={highlightStyles}>\n              {chunk}\n            </Mark>\n          ) : (\n            <span key={i}>{chunk}</span>\n          )\n        )}\n      </Text>\n    );\n  }\n);\n\nHighlight.displayName = '@mantine/core/Highlight';\n"]},"metadata":{},"sourceType":"module"}