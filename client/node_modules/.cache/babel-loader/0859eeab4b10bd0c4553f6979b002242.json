{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea.js';\nimport { Divider } from '../../Divider/Divider.js';\nimport useStyles from './RenderList.styles.js';\nimport { groupOptions } from '../../../utils/group-options/group-options.js';\nimport { UnstyledButton } from '../../Button/UnstyledButton/UnstyledButton.js';\nimport { Text } from '../../Text/Text.js';\nimport { TextInput } from '../../TextInput/TextInput.js';\nimport { ActionIcon } from '../../ActionIcon/ActionIcon.js';\nimport { PrevIcon } from '../../Pagination/icons/PrevIcon.js';\nimport { NextIcon } from '../../Pagination/icons/NextIcon.js';\nimport { FirstIcon } from '../../Pagination/icons/FirstIcon.js';\nimport { LastIcon } from '../../Pagination/icons/LastIcon.js';\nconst icons = {\n  Prev: PrevIcon,\n  Next: NextIcon,\n  First: FirstIcon,\n  Last: LastIcon\n};\nconst rtlIons = {\n  Next: PrevIcon,\n  Prev: NextIcon,\n  Last: FirstIcon,\n  First: LastIcon\n};\n\nfunction RenderList(_ref) {\n  let {\n    className,\n    data,\n    onSelect,\n    selection,\n    itemComponent: ItemComponent,\n    listComponent,\n    searchPlaceholder,\n    filter,\n    nothingFound,\n    title,\n    showTransferAll,\n    reversed,\n    onMoveAll,\n    onMove,\n    height,\n    classNames,\n    styles,\n    limit\n  } = _ref;\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    reversed,\n    native: listComponent !== SelectScrollArea\n  }, {\n    name: \"TransferList\",\n    classNames,\n    styles\n  });\n  const unGroupedItems = [];\n  const groupedItems = [];\n  const [query, setQuery] = useState(\"\");\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter(item => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || \"div\";\n  const Icons = theme.dir === \"rtl\" ? rtlIons : icons;\n  const itemsRefs = useRef({});\n  const sortedData = groupOptions({\n    data: filteredData\n  });\n  const {\n    scrollIntoView,\n    targetRef,\n    scrollableRef\n  } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true\n  });\n  let groupName = null;\n  sortedData.forEach((item, index) => {\n    const itemComponent = /* @__PURE__ */React.createElement(UnstyledButton, {\n      tabIndex: -1,\n      onClick: () => onSelect(item.value),\n      key: item.value,\n      onMouseEnter: () => setHovered(index),\n      className: cx(classes.transferListItem, {\n        [classes.transferListItemHovered]: index === hovered\n      }),\n      ref: node => {\n        if (itemsRefs && itemsRefs.current) {\n          itemsRefs.current[item.value] = node;\n        }\n      }\n    }, /* @__PURE__ */React.createElement(ItemComponent, {\n      data: item,\n      selected: selection.includes(item.value)\n    }));\n\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push( /* @__PURE__ */React.createElement(\"div\", {\n          className: classes.separator,\n          key: groupName\n        }, /* @__PURE__ */React.createElement(Divider, {\n          classNames: {\n            label: classes.separatorLabel\n          },\n          label: groupName\n        })));\n      }\n\n      groupedItems.push(itemComponent);\n    }\n  });\n\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift( /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.separator\n    }, /* @__PURE__ */React.createElement(Divider, {\n      classNames: {\n        label: classes.separatorLabel\n      }\n    })));\n  }\n\n  const handleSearchKeydown = event => {\n    switch (event.code) {\n      case \"Enter\":\n        {\n          event.preventDefault();\n\n          if (filteredData[hovered]) {\n            onSelect(filteredData[hovered].value);\n          }\n\n          break;\n        }\n\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n\n            const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"end\"\n            });\n            return nextIndex;\n          });\n          break;\n        }\n\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n\n            const nextIndex = current > 0 ? current - 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"start\"\n            });\n            return nextIndex;\n          });\n        }\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.transferList, className)\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    weight: 500,\n    className: classes.transferListTitle\n  }, title), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListBody\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListHeader\n  }, /* @__PURE__ */React.createElement(TextInput, {\n    value: query,\n    onChange: event => {\n      setQuery(event.currentTarget.value);\n      setHovered(0);\n    },\n    onFocus: () => setHovered(0),\n    onBlur: () => setHovered(-1),\n    placeholder: searchPlaceholder,\n    radius: 0,\n    onKeyDown: handleSearchKeydown,\n    sx: {\n      flex: 1\n    },\n    classNames: {\n      input: classes.transferListSearch\n    }\n  }), /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: selection.length === 0,\n    onClick: onMove\n  }, reversed ? /* @__PURE__ */React.createElement(Icons.Prev, null) : /* @__PURE__ */React.createElement(Icons.Next, null)), showTransferAll && /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: data.length === 0,\n    onClick: onMoveAll\n  }, reversed ? /* @__PURE__ */React.createElement(Icons.First, null) : /* @__PURE__ */React.createElement(Icons.Last, null))), /* @__PURE__ */React.createElement(ListComponent, {\n    ref: scrollableRef,\n    onMouseLeave: () => setHovered(-1),\n    className: classes.transferListItems,\n    style: {\n      height,\n      position: \"relative\",\n      overflowX: \"hidden\"\n    }\n  }, groupedItems.length > 0 || unGroupedItems.length > 0 ? /* @__PURE__ */React.createElement(React.Fragment, null, groupedItems, unGroupedItems) : /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    size: \"sm\",\n    align: \"center\",\n    mt: \"sm\"\n  }, nothingFound))));\n}\n\nRenderList.displayName = \"@mantine/core/RenderList\";\nexport { RenderList };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\TransferList\\RenderList\\RenderList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { DefaultProps, ClassNames } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea';\nimport { UnstyledButton } from '../../Button';\nimport { ActionIcon } from '../../ActionIcon';\nimport { TextInput } from '../../TextInput';\nimport { Text } from '../../Text';\nimport { Divider } from '../../Divider/Divider';\nimport { LastIcon, NextIcon, FirstIcon, PrevIcon } from '../../Pagination/icons';\nimport { TransferListItem, TransferListItemComponent } from '../types';\nimport useStyles from './RenderList.styles';\nimport { groupOptions } from '../../../utils';\n\nexport type RenderListStylesNames = ClassNames<typeof useStyles>;\n\nexport interface RenderListProps extends DefaultProps<RenderListStylesNames> {\n  data: TransferListItem[];\n  onSelect(value: string): void;\n  selection: string[];\n  itemComponent: TransferListItemComponent;\n  searchPlaceholder: string;\n  filter(query: string, item: TransferListItem): boolean;\n  nothingFound?: React.ReactNode;\n  title?: React.ReactNode;\n  reversed?: boolean;\n  showTransferAll?: boolean;\n  onMoveAll(): void;\n  onMove(): void;\n  height: number;\n  listComponent?: React.FC<any>;\n  limit?: number;\n}\n\nconst icons = {\n  Prev: PrevIcon,\n  Next: NextIcon,\n  First: FirstIcon,\n  Last: LastIcon,\n};\n\nconst rtlIons = {\n  Next: PrevIcon,\n  Prev: NextIcon,\n  Last: FirstIcon,\n  First: LastIcon,\n};\n\nexport function RenderList({\n  className,\n  data,\n  onSelect,\n  selection,\n  itemComponent: ItemComponent,\n  listComponent,\n  searchPlaceholder,\n  filter,\n  nothingFound,\n  title,\n  showTransferAll,\n  reversed,\n  onMoveAll,\n  onMove,\n  height,\n  classNames,\n  styles,\n  limit,\n}: RenderListProps) {\n  const { classes, cx, theme } = useStyles(\n    { reversed, native: listComponent !== SelectScrollArea },\n    { name: 'TransferList', classNames, styles }\n  );\n  const unGroupedItems: React.ReactElement<any>[] = [];\n  const groupedItems: React.ReactElement<any>[] = [];\n  const [query, setQuery] = useState('');\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter((item) => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || 'div';\n  const Icons = theme.dir === 'rtl' ? rtlIons : icons;\n\n  const itemsRefs = useRef<Record<string, HTMLButtonElement>>({});\n\n  const sortedData: TransferListItem[] = groupOptions({ data: filteredData });\n\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  let groupName = null;\n\n  sortedData.forEach((item, index) => {\n    const itemComponent = (\n      <UnstyledButton\n        tabIndex={-1}\n        onClick={() => onSelect(item.value)}\n        key={item.value}\n        onMouseEnter={() => setHovered(index)}\n        className={cx(classes.transferListItem, {\n          [classes.transferListItemHovered]: index === hovered,\n        })}\n        ref={(node: HTMLButtonElement) => {\n          if (itemsRefs && itemsRefs.current) {\n            itemsRefs.current[item.value] = node;\n          }\n        }}\n      >\n        <ItemComponent data={item} selected={selection.includes(item.value)} />\n      </UnstyledButton>\n    );\n\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push(\n          <div className={classes.separator} key={groupName}>\n            <Divider classNames={{ label: classes.separatorLabel }} label={groupName} />\n          </div>\n        );\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift(\n      <div className={classes.separator}>\n        <Divider classNames={{ label: classes.separatorLabel }} />\n      </div>\n    );\n  }\n\n  const handleSearchKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.code) {\n      case 'Enter': {\n        event.preventDefault();\n        if (filteredData[hovered]) {\n          onSelect(filteredData[hovered].value);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'end',\n          });\n\n          return nextIndex;\n        });\n        break;\n      }\n\n      case 'ArrowUp': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current > 0 ? current - 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'start',\n          });\n\n          return nextIndex;\n        });\n      }\n    }\n  };\n\n  return (\n    <div className={cx(classes.transferList, className)}>\n      {title && (\n        <Text weight={500} className={classes.transferListTitle}>\n          {title}\n        </Text>\n      )}\n\n      <div className={classes.transferListBody}>\n        <div className={classes.transferListHeader}>\n          <TextInput\n            value={query}\n            onChange={(event) => {\n              setQuery(event.currentTarget.value);\n              setHovered(0);\n            }}\n            onFocus={() => setHovered(0)}\n            onBlur={() => setHovered(-1)}\n            placeholder={searchPlaceholder}\n            radius={0}\n            onKeyDown={handleSearchKeydown}\n            sx={{ flex: 1 }}\n            classNames={{ input: classes.transferListSearch }}\n          />\n\n          <ActionIcon\n            variant=\"default\"\n            size={36}\n            radius={0}\n            className={classes.transferListControl}\n            disabled={selection.length === 0}\n            onClick={onMove}\n          >\n            {reversed ? <Icons.Prev /> : <Icons.Next />}\n          </ActionIcon>\n\n          {showTransferAll && (\n            <ActionIcon\n              variant=\"default\"\n              size={36}\n              radius={0}\n              className={classes.transferListControl}\n              disabled={data.length === 0}\n              onClick={onMoveAll}\n            >\n              {reversed ? <Icons.First /> : <Icons.Last />}\n            </ActionIcon>\n          )}\n        </div>\n\n        <ListComponent\n          ref={scrollableRef}\n          onMouseLeave={() => setHovered(-1)}\n          className={classes.transferListItems}\n          style={{ height, position: 'relative', overflowX: 'hidden' }}\n        >\n          {groupedItems.length > 0 || unGroupedItems.length > 0 ? (\n            <>\n              {groupedItems}\n              {unGroupedItems}\n            </>\n          ) : (\n            <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt=\"sm\">\n              {nothingFound}\n            </Text>\n          )}\n        </ListComponent>\n      </div>\n    </div>\n  );\n}\n\nRenderList.displayName = '@mantine/core/RenderList';\n"]},"metadata":{},"sourceType":"module"}