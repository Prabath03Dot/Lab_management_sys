{"ast":null,"code":"import React, { forwardRef, useState } from 'react';\nimport { useMove, useDidUpdate, useMergedRef, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './ColorSlider.styles.js';\nimport { Box } from '../../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst ColorSlider = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    value,\n    onChange,\n    maxValue,\n    round,\n    size = \"md\",\n    thumbColor = \"transparent\",\n    __staticSelector = \"ColorSlider\",\n    focusable = true,\n    overlays,\n    classNames,\n    styles,\n    className\n  } = _b,\n      others = __objRest(_b, [\"value\", \"onChange\", \"maxValue\", \"round\", \"size\", \"thumbColor\", \"__staticSelector\", \"focusable\", \"overlays\", \"classNames\", \"styles\", \"className\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const [position, setPosition] = useState({\n    y: 0,\n    x: value / maxValue\n  });\n\n  const getChangeValue = val => round ? Math.round(val * maxValue) : val * maxValue;\n\n  const {\n    ref: sliderRef\n  } = useMove(_ref => {\n    let {\n      x\n    } = _ref;\n    return onChange(getChangeValue(x));\n  });\n  useDidUpdate(() => {\n    setPosition({\n      y: 0,\n      x: value / maxValue\n    });\n  }, [value]);\n\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n\n    const _position = clampUseMovePosition(pos);\n\n    onChange(getChangeValue(_position.x));\n  };\n\n  const handleKeyDown = event => {\n    switch (event.nativeEvent.code) {\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n\n  const layers = overlays.map((overlay, index) => /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliderOverlay,\n    style: overlay,\n    key: index\n  }));\n  return /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues({}, others), {\n    ref: useMergedRef(sliderRef, ref),\n    className: cx(classes.slider, className),\n    role: \"slider\",\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": maxValue,\n    \"aria-valuemin\": 0,\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }), layers, /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector,\n    classNames,\n    styles,\n    position,\n    style: {\n      top: 1,\n      backgroundColor: thumbColor\n    },\n    className: classes.sliderThumb,\n    size\n  }));\n});\nColorSlider.displayName = \"@mantine/core/ColorSlider\";\nexport { ColorSlider };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\ColorPicker\\ColorSlider\\ColorSlider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport {\n  useMove,\n  clampUseMovePosition,\n  useDidUpdate,\n  UseMovePosition,\n  useMergedRef,\n} from '@mantine/hooks';\nimport { DefaultProps, MantineSize, ClassNames } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport useStyles from './ColorSlider.styles';\n\nexport type ColorSliderStylesNames =\n  | Exclude<ClassNames<typeof useStyles>, 'sliderThumb'>\n  | ThumbStylesNames;\n\nexport interface BaseColorSliderProps\n  extends DefaultProps<ColorSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  value: number;\n  onChange(value: number): void;\n  size?: MantineSize;\n  focusable?: boolean;\n  __staticSelector?: string;\n}\n\nexport interface ColorSliderProps extends BaseColorSliderProps {\n  maxValue: number;\n  overlays: React.CSSProperties[];\n  round: boolean;\n  thumbColor?: string;\n}\n\nexport const ColorSlider = forwardRef<HTMLDivElement, ColorSliderProps>(\n  (\n    {\n      value,\n      onChange,\n      maxValue,\n      round,\n      size = 'md',\n      thumbColor = 'transparent',\n      __staticSelector = 'ColorSlider',\n      focusable = true,\n      overlays,\n      classNames,\n      styles,\n      className,\n      ...others\n    }: ColorSliderProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles({ size }, { classNames, styles, name: __staticSelector });\n    const [position, setPosition] = useState({ y: 0, x: value / maxValue });\n    const getChangeValue = (val: number) => (round ? Math.round(val * maxValue) : val * maxValue);\n    const { ref: sliderRef } = useMove(({ x }) => onChange(getChangeValue(x)));\n\n    useDidUpdate(() => {\n      setPosition({ y: 0, x: value / maxValue });\n    }, [value]);\n\n    const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n      event.preventDefault();\n      const _position = clampUseMovePosition(pos);\n      onChange(getChangeValue(_position.x));\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      switch (event.nativeEvent.code) {\n        case 'ArrowRight': {\n          handleArrow(event, { x: position.x + 0.05, y: position.y });\n          break;\n        }\n\n        case 'ArrowLeft': {\n          handleArrow(event, { x: position.x - 0.05, y: position.y });\n          break;\n        }\n      }\n    };\n\n    const layers = overlays.map((overlay, index) => (\n      <div className={classes.sliderOverlay} style={overlay} key={index} />\n    ));\n\n    return (\n      <Box\n        {...others}\n        ref={useMergedRef(sliderRef, ref)}\n        className={cx(classes.slider, className)}\n        role=\"slider\"\n        aria-valuenow={value}\n        aria-valuemax={maxValue}\n        aria-valuemin={0}\n        tabIndex={focusable ? 0 : -1}\n        onKeyDown={handleKeyDown}\n      >\n        {layers}\n\n        <Thumb\n          __staticSelector={__staticSelector}\n          classNames={classNames}\n          styles={styles}\n          position={position}\n          style={{ top: 1, backgroundColor: thumbColor }}\n          className={classes.sliderThumb}\n          size={size}\n        />\n      </Box>\n    );\n  }\n);\n\nColorSlider.displayName = '@mantine/core/ColorSlider';\n"]},"metadata":{},"sourceType":"module"}