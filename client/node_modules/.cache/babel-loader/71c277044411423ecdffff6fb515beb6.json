{"ast":null,"code":"import { useState } from 'react';\n\nfunction useClipboard() {\n  let {\n    timeout = 2e3\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [error, setError] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const [copyTimeout, setCopyTimeout] = useState(null);\n\n  const handleCopyResult = value => {\n    clearTimeout(copyTimeout);\n    setCopyTimeout(setTimeout(() => setCopied(false), timeout));\n    setCopied(value);\n  };\n\n  const copy = valueToCopy => {\n    if (\"clipboard\" in navigator) {\n      navigator.clipboard.writeText(valueToCopy).then(() => handleCopyResult(true)).catch(err => setError(err));\n    } else {\n      setError(new Error(\"useClipboard: navigator.clipboard is not supported\"));\n    }\n  };\n\n  const reset = () => {\n    setCopied(false);\n    setError(null);\n    clearTimeout(copyTimeout);\n  };\n\n  return {\n    copy,\n    reset,\n    error,\n    copied\n  };\n}\n\nexport { useClipboard };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-clipboard\\use-clipboard.ts"],"names":[],"mappings":";;AACO,SAAS,YAAT,GAA8C;AAAA,MAAxB;AAAE,IAAA,OAAO,GAAG;AAAZ,GAAwB,uEAAJ,EAAI;AACnD,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC,WAAD,EAAc,cAAd,IAAgC,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAM,gBAAgB,GAAI,KAAD,IAAW;AAClC,IAAA,YAAY,CAAC,WAAD,CAAZ;AACA,IAAA,cAAc,CAAC,UAAU,CAAC,MAAM,SAAS,CAAC,KAAD,CAAhB,EAAyB,OAAzB,CAAX,CAAd;AACA,IAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAJD;;AAKA,QAAM,IAAI,GAAI,WAAD,IAAiB;AAC5B,QAAI,eAAe,SAAnB,EAA8B;AAC5B,MAAA,SAAS,CAAC,SAAV,CAAoB,SAApB,CAA8B,WAA9B,EAA2C,IAA3C,CAAgD,MAAM,gBAAgB,CAAC,IAAD,CAAtE,EAA8E,KAA9E,CAAqF,GAAD,IAAS,QAAQ,CAAC,GAAD,CAArG;AACD,KAFD,MAEO;AACL,MAAA,QAAQ,CAAC,IAAI,KAAJ,CAAU,oDAAV,CAAD,CAAR;AACD;AACF,GAND;;AAOA,QAAM,KAAK,GAAG,MAAM;AAClB,IAAA,SAAS,CAAC,KAAD,CAAT;AACA,IAAA,QAAQ,CAAC,IAAD,CAAR;AACA,IAAA,YAAY,CAAC,WAAD,CAAZ;AACD,GAJD;;AAKA,SAAO;AAAE,IAAA,IAAF;AAAQ,IAAA,KAAR;AAAe,IAAA,KAAf;AAAsB,IAAA;AAAtB,GAAP;AACF","sourcesContent":["import { useState } from 'react';\n\nexport function useClipboard({ timeout = 2000 } = {}) {\n  const [error, setError] = useState<Error>(null);\n  const [copied, setCopied] = useState(false);\n  const [copyTimeout, setCopyTimeout] = useState(null);\n\n  const handleCopyResult = (value: boolean) => {\n    clearTimeout(copyTimeout);\n    setCopyTimeout(setTimeout(() => setCopied(false), timeout));\n    setCopied(value);\n  };\n\n  const copy = (valueToCopy: any) => {\n    if ('clipboard' in navigator) {\n      navigator.clipboard\n        .writeText(valueToCopy)\n        .then(() => handleCopyResult(true))\n        .catch((err) => setError(err));\n    } else {\n      setError(new Error('useClipboard: navigator.clipboard is not supported'));\n    }\n  };\n\n  const reset = () => {\n    setCopied(false);\n    setError(null);\n    clearTimeout(copyTimeout);\n  };\n\n  return { copy, reset, error, copied };\n}\n"]},"metadata":{},"sourceType":"module"}