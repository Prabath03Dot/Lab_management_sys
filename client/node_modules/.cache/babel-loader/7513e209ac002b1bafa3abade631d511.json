{"ast":null,"code":"import React, { createContext, useContext, useState, useEffect } from 'react';\nconst ColorSchemeContext = createContext(null);\n\nfunction useMantineColorScheme() {\n  const ctx = useContext(ColorSchemeContext);\n\n  if (!ctx) {\n    throw new Error(\"useMantineColorScheme hook was called outside of context, make sure your app is wrapped with ColorSchemeProvider component\");\n  }\n\n  return ctx;\n}\n\nfunction ColorSchemeProvider(_ref) {\n  let {\n    colorScheme,\n    toggleColorScheme,\n    children\n  } = _ref;\n  const [key, setKey] = useState(\"init\");\n  useEffect(() => {\n    setKey(\"update\");\n  }, []);\n  return /* @__PURE__ */React.createElement(ColorSchemeContext.Provider, {\n    key,\n    value: {\n      colorScheme,\n      toggleColorScheme\n    }\n  }, children);\n}\n\nColorSchemeProvider.displayName = \"@mantine/core/ColorSchemeProvider\";\nexport { ColorSchemeProvider, useMantineColorScheme };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\styles\\src\\theme\\ColorSchemeProvider.tsx"],"names":[],"mappings":";AACA,MAAM,kBAAkB,GAAG,aAAa,CAAC,IAAD,CAAxC;;AACO,SAAS,qBAAT,GAAiC;AACtC,QAAM,GAAG,GAAG,UAAU,CAAC,kBAAD,CAAtB;;AACA,MAAI,CAAC,GAAL,EAAU;AACR,UAAM,IAAI,KAAJ,CAAU,4HAAV,CAAN;AACD;;AACD,SAAO,GAAP;AACD;;AACM,SAAS,mBAAT,OAIJ;AAAA,MAJiC;AAClC,IAAA,WADkC;AAElC,IAAA,iBAFkC;AAGlC,IAAA;AAHkC,GAIjC;AACD,QAAM,CAAC,GAAD,EAAM,MAAN,IAAgB,QAAQ,CAAC,MAAD,CAA9B;AACA,EAAA,SAAS,CAAC,MAAM;AACd,IAAA,MAAM,CAAC,QAAD,CAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,kBAAkB,CAAC,QAAvC,EAAiD;AACtE,IAAA,GADsE;AAEtE,IAAA,KAAK,EAAE;AAAE,MAAA,WAAF;AAAe,MAAA;AAAf;AAF+D,GAAjD,EAGpB,QAHoB,CAAvB;AAID;;AACD,mBAAmB,CAAC,WAApB,GAAkC,mCAAlC","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ColorScheme } from './types';\n\ninterface ColorSchemeContextProps {\n  colorScheme: ColorScheme;\n  toggleColorScheme(colorScheme?: ColorScheme): void;\n}\n\nconst ColorSchemeContext = createContext<ColorSchemeContextProps>(null);\n\nexport function useMantineColorScheme() {\n  const ctx = useContext(ColorSchemeContext);\n\n  if (!ctx) {\n    throw new Error(\n      'useMantineColorScheme hook was called outside of context, make sure your app is wrapped with ColorSchemeProvider component'\n    );\n  }\n\n  return ctx;\n}\n\ninterface ColorSchemeProviderProps extends ColorSchemeContextProps {\n  children: React.ReactNode;\n}\n\nexport function ColorSchemeProvider({\n  colorScheme,\n  toggleColorScheme,\n  children,\n}: ColorSchemeProviderProps) {\n  const [key, setKey] = useState('init');\n\n  useEffect(() => {\n    setKey('update');\n  }, []);\n\n  return (\n    <ColorSchemeContext.Provider key={key} value={{ colorScheme, toggleColorScheme }}>\n      {children}\n    </ColorSchemeContext.Provider>\n  );\n}\n\nColorSchemeProvider.displayName = '@mantine/core/ColorSchemeProvider';\n"]},"metadata":{},"sourceType":"module"}