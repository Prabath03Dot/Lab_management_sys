{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nfunction Portal(_ref) {\n  let {\n    children,\n    zIndex = 1,\n    position = \"relative\",\n    target,\n    className\n  } = _ref;\n  const theme = useMantineTheme();\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef();\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target ? document.createElement(\"div\") : typeof target === \"string\" ? document.querySelector(target) : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal( /* @__PURE__ */React.createElement(\"div\", {\n    className,\n    dir: theme.dir,\n    style: {\n      position,\n      zIndex\n    }\n  }, children), ref.current);\n}\n\nPortal.displayName = \"@mantine/core/Portal\";\nexport { Portal };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Portal\\Portal.tsx"],"names":[],"mappings":";;;;;AAIO,SAAS,MAAT,OAMJ;AAAA,MANoB;AACrB,IAAA,QADqB;AAErB,IAAA,MAAM,GAAG,CAFY;AAGrB,IAAA,QAAQ,GAAG,UAHU;AAIrB,IAAA,MAJqB;AAKrB,IAAA;AALqB,GAMpB;AACD,QAAM,KAAK,GAAG,eAAe,EAA7B;AACA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,GAAG,GAAG,MAAM,EAAlB;AACA,EAAA,mBAAmB,CAAC,MAAM;AACxB,IAAA,UAAU,CAAC,IAAD,CAAV;AACA,IAAA,GAAG,CAAC,OAAJ,GAAc,CAAC,MAAD,GAAU,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAV,GAA0C,OAAO,MAAP,KAAkB,QAAlB,GAA6B,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAA7B,GAA8D,MAAtH;;AACA,QAAI,CAAC,MAAL,EAAa;AACX,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAAG,CAAC,OAA9B;AACD;;AACD,WAAO,MAAM;AACX,OAAC,MAAD,IAAW,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAAG,CAAC,OAA9B,CAAX;AACD,KAFD;AAGD,GATkB,EAShB,CAAC,MAAD,CATgB,CAAnB;;AAUA,MAAI,CAAC,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,SAAO,YAAY,EAAA,eAAiB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC7D,IAAA,SAD6D;AAE7D,IAAA,GAAG,EAAE,KAAK,CAAC,GAFkD;AAG7D,IAAA,KAAK,EAAE;AAAE,MAAA,QAAF;AAAY,MAAA;AAAZ;AAHsD,GAA3B,EAIjC,QAJiC,CAAjB,EAIL,GAAG,CAAC,OAJC,CAAnB;AAKD;;AACD,MAAM,CAAC,WAAP,GAAqB,sBAArB","sourcesContent":["import React, { ReactPortal, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nexport interface PortalProps {\n  /** Portal children, for example, modal or popover */\n  children: React.ReactNode;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Root element position property */\n  position?: string;\n\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLElement | string;\n\n  /** Root element className */\n  className?: string;\n}\n\nexport function Portal({\n  children,\n  zIndex = 1,\n  position = 'relative',\n  target,\n  className,\n}: PortalProps): ReactPortal {\n  const theme = useMantineTheme();\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef<HTMLElement>();\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target\n      ? document.createElement('div')\n      : typeof target === 'string'\n      ? document.querySelector(target)\n      : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={className} dir={theme.dir} style={{ position: position as any, zIndex }}>\n      {children}\n    </div>,\n    ref.current\n  );\n}\n\nPortal.displayName = '@mantine/core/Portal';\n"]},"metadata":{},"sourceType":"module"}