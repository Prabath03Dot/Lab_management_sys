{"ast":null,"code":"import { Children } from 'react';\n\nfunction filterChildrenByType(children, type) {\n  return Children.toArray(children).filter(item => Array.isArray(type) ? type.some(component => component === item.type) : item.type === type);\n}\n\nexport { filterChildrenByType };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\utils\\filter-children-by-type\\filter-children-by-type.ts"],"names":[],"mappings":";;AACO,SAAS,oBAAT,CAA8B,QAA9B,EAAwC,IAAxC,EAA8C;AACnD,SAAO,QAAQ,CAAC,OAAT,CAAiB,QAAjB,EAA2B,MAA3B,CAAmC,IAAD,IAAU,KAAK,CAAC,OAAN,CAAc,IAAd,IAAsB,IAAI,CAAC,IAAL,CAAW,SAAD,IAAe,SAAS,KAAK,IAAI,CAAC,IAA5C,CAAtB,GAA0E,IAAI,CAAC,IAAL,KAAc,IAApI,CAAP;AACF","sourcesContent":["import { Children, JSXElementConstructor, ReactNode, ReactElement } from 'react';\n\nexport function filterChildrenByType(\n  children: ReactNode,\n  type: JSXElementConstructor<any> | JSXElementConstructor<any>[]\n) {\n  return (Children.toArray(children) as ReactElement[]).filter((item) =>\n    Array.isArray(type) ? type.some((component) => component === item.type) : item.type === type\n  );\n}\n"]},"metadata":{},"sourceType":"module"}