{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { RenderList } from './RenderList/RenderList.js';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea.js';\nimport { DefaultItem } from './DefaultItem/DefaultItem.js';\nimport { useSelectionState } from './use-selection-state/use-selection-state.js';\nimport { SimpleGrid } from '../SimpleGrid/SimpleGrid.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction defaultFilter(query, item) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst TransferList = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    value,\n    onChange,\n    itemComponent = DefaultItem,\n    searchPlaceholder,\n    filter = defaultFilter,\n    nothingFound,\n    titles = [null, null],\n    initialSelection,\n    listHeight = 150,\n    listComponent = SelectScrollArea,\n    showTransferAll = true,\n    breakpoint,\n    classNames,\n    styles,\n    limit = Infinity\n  } = _b,\n      others = __objRest(_b, [\"value\", \"onChange\", \"itemComponent\", \"searchPlaceholder\", \"filter\", \"nothingFound\", \"titles\", \"initialSelection\", \"listHeight\", \"listComponent\", \"showTransferAll\", \"breakpoint\", \"classNames\", \"styles\", \"limit\"]);\n\n  const [selection, handlers] = useSelectionState(initialSelection);\n\n  const handleMoveAll = listIndex => {\n    const items = Array(2);\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    items[listIndex] = [];\n    items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const handleMove = listIndex => {\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    const items = Array(2);\n    const transferData = value[listIndex].reduce((acc, item) => {\n      if (!selection[listIndex].includes(item.value)) {\n        acc.filtered.push(item);\n      } else {\n        acc.current.push(item);\n      }\n\n      return acc;\n    }, {\n      filtered: [],\n      current: []\n    });\n    items[listIndex] = transferData.filtered;\n    items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const breakpoints = breakpoint ? [{\n    maxWidth: breakpoint,\n    cols: 1\n  }] : void 0;\n  const sharedListProps = {\n    itemComponent,\n    listComponent,\n    searchPlaceholder,\n    filter,\n    nothingFound,\n    height: listHeight,\n    showTransferAll,\n    classNames,\n    styles,\n    limit\n  };\n  return /* @__PURE__ */React.createElement(SimpleGrid, __spreadValues({\n    cols: 2,\n    spacing: \"xl\",\n    breakpoints,\n    ref\n  }, others), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[0],\n    selection: selection[0],\n    onSelect: val => handlers.select(0, val),\n    onMoveAll: () => handleMoveAll(0),\n    onMove: () => handleMove(0),\n    title: titles[0]\n  })), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[1],\n    selection: selection[1],\n    onSelect: val => handlers.select(1, val),\n    onMoveAll: () => handleMoveAll(1),\n    onMove: () => handleMove(1),\n    title: titles[1],\n    reversed: true\n  })));\n});\nTransferList.displayName = \"@mantine/core/TransferList\";\nexport { TransferList, defaultFilter };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\TransferList\\TransferList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize } from '@mantine/styles';\nimport { RenderList, RenderListStylesNames } from './RenderList/RenderList';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { SimpleGrid } from '../SimpleGrid';\nimport { useSelectionState, Selection } from './use-selection-state/use-selection-state';\nimport { TransferListData, TransferListItemComponent, TransferListItem } from './types';\n\nexport type TransferListStylesNames = RenderListStylesNames;\n\nexport interface TransferListProps\n  extends DefaultProps<TransferListStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Current value */\n  value: TransferListData;\n\n  /** Called when value changes */\n  onChange(value: TransferListData): void;\n\n  /** Initial items selection */\n  initialSelection?: Selection;\n\n  /** Custom item component */\n  itemComponent?: TransferListItemComponent;\n\n  /** Search fields placeholder */\n  searchPlaceholder?: string;\n\n  /** Nothing found message */\n  nothingFound?: React.ReactNode;\n\n  /** Function to filter search results */\n  filter?(query: string, item: TransferListItem): boolean;\n\n  /** Lists titles */\n  titles?: [string, string];\n\n  /** List items height */\n  listHeight?: number;\n\n  /** Change list component, can be used to add custom scrollbars */\n  listComponent?: any;\n\n  /** Breakpoint at which list will collapse to single column layout */\n  breakpoint?: MantineNumberSize;\n\n  /** Whether to hide the transfer all button */\n  showTransferAll?: boolean;\n\n  /** Limit amount of items showed at a time */\n  limit?: number;\n}\n\nexport function defaultFilter(query: string, item: TransferListItem) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nexport const TransferList = forwardRef<HTMLDivElement, TransferListProps>(\n  (\n    {\n      value,\n      onChange,\n      itemComponent = DefaultItem,\n      searchPlaceholder,\n      filter = defaultFilter,\n      nothingFound,\n      titles = [null, null],\n      initialSelection,\n      listHeight = 150,\n      listComponent = SelectScrollArea,\n      showTransferAll = true,\n      breakpoint,\n      classNames,\n      styles,\n      limit = Infinity,\n      ...others\n    }: TransferListProps,\n    ref\n  ) => {\n    const [selection, handlers] = useSelectionState(initialSelection);\n\n    const handleMoveAll = (listIndex: 0 | 1) => {\n      const items: TransferListData = Array(2) as any;\n      const moveToIndex = listIndex === 0 ? 1 : 0;\n      items[listIndex] = [];\n      items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n      onChange(items);\n      handlers.deselectAll(listIndex);\n    };\n\n    const handleMove = (listIndex: 0 | 1) => {\n      const moveToIndex = listIndex === 0 ? 1 : 0;\n      const items: TransferListData = Array(2) as any;\n      const transferData = value[listIndex].reduce(\n        (acc, item) => {\n          if (!selection[listIndex].includes(item.value)) {\n            acc.filtered.push(item);\n          } else {\n            acc.current.push(item);\n          }\n          return acc;\n        },\n        { filtered: [], current: [] }\n      );\n      items[listIndex] = transferData.filtered;\n      items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n      onChange(items);\n      handlers.deselectAll(listIndex);\n    };\n\n    const breakpoints = breakpoint ? [{ maxWidth: breakpoint, cols: 1 }] : undefined;\n    const sharedListProps = {\n      itemComponent,\n      listComponent,\n      searchPlaceholder,\n      filter,\n      nothingFound,\n      height: listHeight,\n      showTransferAll,\n      classNames,\n      styles,\n      limit,\n    };\n\n    return (\n      <SimpleGrid cols={2} spacing=\"xl\" breakpoints={breakpoints} ref={ref} {...others}>\n        <RenderList\n          {...sharedListProps}\n          data={value[0]}\n          selection={selection[0]}\n          onSelect={(val) => handlers.select(0, val)}\n          onMoveAll={() => handleMoveAll(0)}\n          onMove={() => handleMove(0)}\n          title={titles[0]}\n        />\n\n        <RenderList\n          {...sharedListProps}\n          data={value[1]}\n          selection={selection[1]}\n          onSelect={(val) => handlers.select(1, val)}\n          onMoveAll={() => handleMoveAll(1)}\n          onMove={() => handleMove(1)}\n          title={titles[1]}\n          reversed\n        />\n      </SimpleGrid>\n    );\n  }\n);\n\nTransferList.displayName = '@mantine/core/TransferList';\n"]},"metadata":{},"sourceType":"module"}