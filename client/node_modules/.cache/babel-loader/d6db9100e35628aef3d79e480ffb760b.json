{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, e as _toConsumableArray } from './LocalizationContext-2dd9ebb4.js';\nimport React__default, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-8f3e6954.js';\nimport { U as UserProfileContext, C as ContextMenu, b as MenuItems, f as ConnectedUserProfile } from './index-5ffc2e37.js';\n\nvar InputLabel = function InputLabel(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input-label\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_1\n  }, children);\n};\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired\n}; // future: add validations? onChange? more props etc etc\n\nvar Input = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var name = props.name,\n      required = props.required,\n      disabled = props.disabled,\n      placeHolder = props.placeHolder,\n      value = props.value;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-input\"\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    className: \"sendbird-input__input\",\n    ref: ref,\n    name: name,\n    required: required,\n    disabled: disabled,\n    value: inputValue,\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    }\n  }), placeHolder && !inputValue && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input__placeholder\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_3\n  }, placeHolder));\n});\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string\n};\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: ''\n};\n\nvar noop = function noop() {};\n\nfunction MutedAvatarOverlay(props) {\n  var _a = props.height,\n      height = _a === void 0 ? 24 : _a,\n      _b = props.width,\n      width = _b === void 0 ? 24 : _b;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__icon\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__bg\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }), /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.MUTE,\n    fillColor: IconColors.WHITE,\n    width: height - 8 + \"px\",\n    height: width - 8 + \"px\"\n  })));\n}\n\nfunction Checkbox(_ref) {\n  var id = _ref.id,\n      checked = _ref.checked,\n      onChange = _ref.onChange;\n\n  var _useState = useState(checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setCheck = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"label\", {\n    className: \"sendbird-checkbox\",\n    htmlFor: id\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    id: id,\n    type: \"checkbox\",\n    checked: isChecked,\n    onClick: function onClick() {\n      return setCheck(!isChecked);\n    },\n    onChange: onChange\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-checkbox--checkmark\"\n  }));\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: function onChange() {}\n};\n\nfunction UserListItem(_ref) {\n  var className = _ref.className,\n      user = _ref.user,\n      checkBox = _ref.checkBox,\n      disableMessaging = _ref.disableMessaging,\n      currentUser = _ref.currentUser,\n      checked = _ref.checked,\n      _onChange = _ref.onChange,\n      action = _ref.action;\n  var uniqueKey = user.userId;\n  var actionRef = React__default.useRef(null);\n  var parentRef = React__default.useRef(null);\n  var avatarRef = React__default.useRef(null);\n\n  var _useContext = useContext(UserProfileContext),\n      disableUserProfile = _useContext.disableUserProfile,\n      renderUserProfile = _useContext.renderUserProfile;\n\n  var _useContext2 = useContext(LocalizationContext),\n      stringSet = _useContext2.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-user-list-item']).join(' '),\n    ref: parentRef\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, {\n    height: 40,\n    width: 40\n  }), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-user-list-item__avatar\",\n        ref: avatarRef,\n        src: user.profileUrl,\n        width: \"40px\",\n        height: \"40px\",\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        disableMessaging: disableMessaging,\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && ' (You)'), // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), checkBox &&\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  React__default.createElement(\"label\", {\n    className: \"sendbird-user-list-item__checkbox\",\n    htmlFor: uniqueKey\n  }, /*#__PURE__*/React__default.createElement(Checkbox, {\n    id: uniqueKey,\n    checked: checked,\n    onChange: function onChange(event) {\n      return _onChange(event);\n    }\n  })), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-user-list-item__action\",\n    ref: actionRef\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: function onChange() {}\n};\nexport { InputLabel as I, MutedAvatarOverlay as M, UserListItem as U, Input as a, noop as n };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\ui\\Input\\index.jsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\utils\\utils.js","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\ui\\Avatar\\MutedAvatarOverlay.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\ui\\Checkbox\\index.jsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\ui\\UserListItem\\index.jsx"],"names":["InputLabel","children","LabelTypography","LabelColors","ONBACKGROUND_1","PropTypes","isRequired","Input","name","required","disabled","placeHolder","value","props","inputValue","setInputValue","useState","e","ONBACKGROUND_3","string","noop","MutedAvatarOverlay","_b","height","width","IconTypes","IconColors","id","checked","onChange","isChecked","setCheck","Checkbox","func","className","user","checkBox","disableMessaging","currentUser","action","uniqueKey","actionRef","React","parentRef","avatarRef","disableUserProfile","renderUserProfile","useContext","stringSet","Array","toggleDropdown","paddingTop","paddingBottom","currentUserId","close","closeDropdown","ONBACKGROUND_2","UserListItem","userId","role","isMuted","nickname","profileUrl"],"mappings":";;;;;;IAMaA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA;AAAA,MAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,SAAA,aACxB,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,sBAAA;AAEE,IAAA,IAAI,EAAEC,eAAe,CAFvB,SAAA;AAGE,IAAA,KAAK,EAAEC,WAAW,CAACC;AAHrB,GAAA,EADwB,QACxB,CADwB;AAAA,C;;AAU1BJ,UAAU,CAAVA,SAAAA,GAAuB;AACrBC,EAAAA,QAAQ,EAAEI,SAAS,CAATA,MAAAA,CAAiBC;AADN,CAAvBN,C,CAAAA;;IAKMO,KAAK,GAAA,aAAG,cAAK,CAAL,UAAA,CAAiB,UAAA,KAAA,EAAA,GAAA,EAAgB;AAC7C,MACEC,IADF,GAMIK,KANJ,CAAA,IAAA;AAAA,MAEEJ,QAFF,GAMII,KANJ,CAAA,QAAA;AAAA,MAGEH,QAHF,GAMIG,KANJ,CAAA,QAAA;AAAA,MAIEF,WAJF,GAMIE,KANJ,CAAA,WAAA;AAAA,MAKED,KALF,GAMIC,KANJ,CAAA,KAAA;;AAOA,MAAA,SAAA,GAAoCG,QAAQ,CAA5C,KAA4C,CAA5C;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,UAAP,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAAmBC,aAAnB,GAAA,UAAA,CAAA,CAAA,CAAA;;AACA,SAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,SAAS,EADX,uBAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,IAAI,EAHN,IAAA;AAIE,IAAA,QAAQ,EAJV,QAAA;AAKE,IAAA,QAAQ,EALV,QAAA;AAME,IAAA,KAAK,EANP,UAAA;AAOE,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAO;AACfA,MAAAA,aAAa,CAACE,CAAC,CAADA,MAAAA,CAAdF,KAAa,CAAbA;AACD;AATH,GAAA,CADF,EAYIJ,WAAW,IAAI,CAAhB,UAACA,IAAD,aACC,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,6BAAA;AAEE,IAAA,IAAI,EAAET,eAAe,CAFvB,MAAA;AAGE,IAAA,KAAK,EAAEC,WAAW,CAACe;AAHrB,GAAA,EAdN,WAcM,CAbJ,CADF;AATY,CAAA,C;AAmCdX,KAAK,CAALA,SAAAA,GAAkB;AAChBC,EAAAA,IAAI,EAAEH,SAAS,CAATA,MAAAA,CADU,UAAA;AAEhBI,EAAAA,QAAQ,EAAEJ,SAAS,CAFH,IAAA;AAGhBK,EAAAA,QAAQ,EAAEL,SAAS,CAHH,IAAA;AAIhBM,EAAAA,WAAW,EAAEN,SAAS,CAJN,MAAA;AAKhBO,EAAAA,KAAK,EAAEP,SAAS,CAACc;AALD,CAAlBZ;AAQAA,KAAK,CAALA,YAAAA,GAAqB;AACnBE,EAAAA,QAAQ,EADW,KAAA;AAEnBC,EAAAA,QAAQ,EAFW,KAAA;AAGnBC,EAAAA,WAAW,EAHQ,EAAA;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArBL;;IChEaa,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAA,C;;SCUFC,kB,CAAmBR,K,EAAAA;AACjC,MAAA,EAAA,GAA4BA,KAAK,CAAjC,MAAA;AAAA,MAAA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAN,EAAA;AAAA,MAAaS,EAAAA,GAAeT,KAAK,CAAjC,KAAA;AAAA,MAAaS,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAlB,EAAA;AACR,SAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,uBAAA;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAKA,MAAM,GADZ,IAAA;AAELC,MAAAA,KAAK,EAAKA,KAAK,GAAA;AAFV;AAFT,GAAA,EAAA,aAOE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,2BAAA;AAEE,IAAA,KAAK,EAAE;AACLD,MAAAA,MAAM,EAAKA,MAAM,GADZ,IAAA;AAELC,MAAAA,KAAK,EAAKA,KAAK,GAAA;AAFV;AAFT,GAAA,CADF,EAAA,aAQE,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,IAAI,EAAEC,SAAS,CADjB,IAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAFvB,KAAA;AAGE,IAAA,KAAK,EAAKH,MAAM,GAANA,CAAAA,GAHZ,IAAA;AAIE,IAAA,MAAM,EAAKC,KAAK,GAALA,CAAAA,GAAAA;AAJb,GAAA,CARF,CAPF,CADF;AAyBD;;AChCc,SAAA,QAAA,CAAA,IAAA,EAIZ;AAAA,MAHDG,EAGC,GAAA,IAAA,CAHDA,EAGC;AAAA,MAFDC,OAEC,GAAA,IAAA,CAFDA,OAEC;AAAA,MADDC,QACC,GAAA,IAAA,CADDA,QACC;;AACD,MAAA,SAAA,GAA8Bb,QAAQ,CAAtC,OAAsC,CAAtC;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOc,SAAP,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAAkBC,QAAlB,GAAA,UAAA,CAAA,CAAA,CAAA;;AACA,SAAA,aACE,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,SAAS,EAAhB,mBAAA;AAAqC,IAAA,OAAO,EAAEJ;AAA9C,GAAA,EAAA,aACE,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,EAAE,EADJ,EAAA;AAEE,IAAA,IAAI,EAFN,UAAA;AAGE,IAAA,OAAO,EAHT,SAAA;AAIE,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMI,QAAQ,CAAC,CAAf,SAAc,CAAd;AAJX,KAAA;AAKE,IAAA,QAAQ,EAAEF;AALZ,GAAA,CADF,EAAA,aAQE,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,CARF,CADF;AAYD;;AAEDG,QAAQ,CAARA,SAAAA,GAAqB;AACnBL,EAAAA,EAAE,EAAEtB,SAAS,CADM,MAAA;AAEnBuB,EAAAA,OAAO,EAAEvB,SAAS,CAFC,IAAA;AAGnBwB,EAAAA,QAAQ,EAAExB,SAAS,CAAC4B;AAHD,CAArBD;AAMAA,QAAQ,CAARA,YAAAA,GAAwB;AACtBL,EAAAA,EAAE,EADoB,yBAAA;AAEtBC,EAAAA,OAAO,EAFe,KAAA;AAGtBC,EAAAA,QAAQ,EAAE,SAAA,QAAA,GAAM,CAAA;AAHM,CAAxBG;;ACjBe,SAAA,YAAA,CAAA,IAAA,EASZ;AAAA,MARDE,SAQC,GAAA,IAAA,CARDA,SAQC;AAAA,MAPDC,IAOC,GAAA,IAAA,CAPDA,IAOC;AAAA,MANDC,QAMC,GAAA,IAAA,CANDA,QAMC;AAAA,MALDC,gBAKC,GAAA,IAAA,CALDA,gBAKC;AAAA,MAJDC,WAIC,GAAA,IAAA,CAJDA,WAIC;AAAA,MAHDV,OAGC,GAAA,IAAA,CAHDA,OAGC;AAAA,MAFDC,SAEC,GAAA,IAAA,CAFDA,QAEC;AAAA,MADDU,MACC,GAAA,IAAA,CADDA,MACC;AACD,MAAMC,SAAS,GAAGL,IAAI,CAAtB,MAAA;AACA,MAAMM,SAAS,GAAGC,cAAK,CAALA,MAAAA,CAAlB,IAAkBA,CAAlB;AACA,MAAMC,SAAS,GAAGD,cAAK,CAALA,MAAAA,CAAlB,IAAkBA,CAAlB;AACA,MAAME,SAAS,GAAGF,cAAK,CAALA,MAAAA,CAAlB,IAAkBA,CAAlB;;AACA,MAAA,WAAA,GAGIK,UAAU,CAHd,kBAGc,CAHd;AAAA,MACEF,kBADF,GAAA,WAAA,CAAA,kBAAA;AAAA,MAEEC,iBAFF,GAAA,WAAA,CAAA,iBAAA;;AAIA,MAAA,YAAA,GAAsBC,UAAU,CAAhC,mBAAgC,CAAhC;AAAA,MAAQC,SAAR,GAAA,YAAA,CAAA,SAAA;;AACA,SAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,GAAA,MAAA,CAAA,kBAAA,CACLC,KAAK,CAALA,OAAAA,CAAAA,SAAAA,IAAAA,SAAAA,GAAuC,CADlC,SACkC,CADlC,CAAA,EAAA,CAAA,yBAAA,CAAA,EAAA,IAAA,CADb,GACa,CADb;AAKE,IAAA,GAAG,EAAEN;AALP,GAAA,EAQIR,IAAI,CAAJA,OAAAA,IAAAA,aACE,cAAA,CAAA,aAAA,CAAA,kBAAA,EAAA;AAAoB,IAAA,MAAM,EAA1B,EAAA;AAAgC,IAAA,KAAK,EAAE;AAAvC,GAAA,CATN,EAAA,aAYE,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AACE,IAAA,WAAW,EAAE,SAAA,WAAA,CAAA,cAAA,EAAA;AAAA,aAAA,aACX,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,QAAA,SAAS,EADX,iCAAA;AAEE,QAAA,GAAG,EAFL,SAAA;AAGE,QAAA,GAAG,EAAEA,IAAI,CAHX,UAAA;AAIE,QAAA,KAAK,EAJP,MAAA;AAKE,QAAA,MAAM,EALR,MAAA;AAME,QAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACb,cAAI,CAAJ,kBAAA,EAAyB;AACvBe,YAAAA,cAAc;AACf;AACF;AAVH,OAAA,CADW;AADf,KAAA;AAeE,IAAA,SAAS,EAAE,SAAA,SAAA,CAAA,aAAA,EAAA;AAAA,aAAA,aACT,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACE,QAAA,QAAQ,EADV,IAAA;AAEE,QAAA,SAAS,EAFX,SAAA,CAAA;AAAA;AAIE,QAAA,gBAAgB,EAJlB,SAAA,CAAA;AAAA;AAME,QAAA,aAAa,EANf,aAAA;AAOE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAZ,CAAA;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AAPT,OAAA,EAUIN,iBAAiB,GACbA,iBAAiB,CAAC;AAClBX,QAAAA,IAAI,EADc,IAAA;AAElBkB,QAAAA,aAAa,EAFK,WAAA;AAGlBC,QAAAA,KAAK,EAAEC;AAHW,OAAD,CADJ,GAAA,aAOb,cAAA,CAAA,aAAA,CAAA,oBAAA,EAAA;AACE,QAAA,gBAAgB,EADlB,gBAAA;AAEE,QAAA,IAAI,EAFN,IAAA;AAGE,QAAA,aAAa,EAHf,WAAA;AAIE,QAAA,SAAS,EAAEA;AAJb,OAAA,CAjBR,CADS;AAAA;AAfb,GAAA,CAZF,EAAA,aAwDE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,gCAAA;AAEE,IAAA,IAAI,EAAErD,eAAe,CAFvB,UAAA;AAGE,IAAA,KAAK,EAAEC,WAAW,CAACC;AAHrB,GAAA,EAKG+B,IAAI,CAAJA,QAAAA,IAAiBa,SAAS,CAL7B,OAAA,EAOKV,WAAW,KAAKH,IAAI,CAArB,MAACG,IA/DP,QAwDE,CAxDF,EAAA;AAqEI,GAACH,IAAI,CAAL,QAAA,IAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,mCAAA;AAEE,IAAA,IAAI,EAAEjC,eAAe,CAFvB,SAAA;AAGE,IAAA,KAAK,EAAEC,WAAW,CAACqD;AAHrB,GAAA,EAKGrB,IAAI,CA3Eb,MAsEM,CAtEN,EAgFIC,QAAQ;AAAA;AACN;AACA,EAAA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,SAAS,EADX,mCAAA;AAEE,IAAA,OAAO,EAAEI;AAFX,GAAA,EAAA,aAIE,cAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,EAAE,EADJ,SAAA;AAEE,IAAA,OAAO,EAFT,OAAA;AAGE,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,aAAWX,SAAQ,CAAnB,KAAmB,CAAnB;AAAA;AAHZ,GAAA,CAJF,CAlFN,EA+FIM,IAAI,CAAJA,IAAAA,KAAAA,UAAAA,IAAAA,aACE,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,mCAAA;AAEE,IAAA,IAAI,EAAEjC,eAAe,CAFvB,UAAA;AAGE,IAAA,KAAK,EAAEC,WAAW,CAACqD;AAHrB,GAAA,EAhGN,UAgGM,CAhGN,EA0GIjB,MAAM,IAAA,aACJ,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,iCAAA;AAEE,IAAA,GAAG,EAAEE;AAFP,GAAA,EAIIF,MAAM,CAAC;AAAEE,IAAAA,SAAS,EAAX,SAAA;AAAaE,IAAAA,SAAS,EAATA;AAAb,GAAD,CAJV,CA3GN,CADF;AAsHD;;AAEDc,YAAY,CAAZA,SAAAA,GAAyB;AACvBvB,EAAAA,SAAS,EAAE7B,SAAS,CAATA,SAAAA,CAAoB,CAC7BA,SAAS,CADoB,MAAA,EAE7BA,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAHN,MAGrBA,CAF6B,CAApBA,CADY;AAKvB8B,EAAAA,IAAI,EAAE,SAAS,CAAT,KAAA,CAAgB;AACpBuB,IAAAA,MAAM,EAAErD,SAAS,CADG,MAAA;AAEpBsD,IAAAA,IAAI,EAAEtD,SAAS,CAFK,MAAA;AAGpBuD,IAAAA,OAAO,EAAEvD,SAAS,CAHE,IAAA;AAIpBwD,IAAAA,QAAQ,EAAExD,SAAS,CAJC,MAAA;AAKpByD,IAAAA,UAAU,EAAEzD,SAAS,CAACc;AALF,GAAhB,EALiB,UAAA;AAYvBkB,EAAAA,gBAAgB,EAAEhC,SAAS,CAZJ,IAAA;AAavBiC,EAAAA,WAAW,EAAEjC,SAAS,CAbC,MAAA;AAcvBkC,EAAAA,MAAM,EAAElC,SAAS,CAdM,OAAA;AAevB+B,EAAAA,QAAQ,EAAE/B,SAAS,CAfI,IAAA;AAgBvBuB,EAAAA,OAAO,EAAEvB,SAAS,CAhBK,IAAA;AAiBvBwB,EAAAA,QAAQ,EAAExB,SAAS,CAAC4B;AAjBG,CAAzBwB;AAoBAA,YAAY,CAAZA,YAAAA,GAA4B;AAC1BvB,EAAAA,SAAS,EADiB,EAAA;AAE1BI,EAAAA,WAAW,EAFe,EAAA;AAG1BF,EAAAA,QAAQ,EAHkB,KAAA;AAI1BC,EAAAA,gBAAgB,EAJU,KAAA;AAK1BT,EAAAA,OAAO,EALmB,KAAA;AAM1BW,EAAAA,MAAM,EANoB,IAAA;AAO1BV,EAAAA,QAAQ,EAAE,SAAA,QAAA,GAAM,CAAA;AAPU,CAA5B4B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport './index.scss';\n\nexport const InputLabel = ({ children }) => (\n  <Label\n    className=\"sendbird-input-label\"\n    type={LabelTypography.CAPTION_3}\n    color={LabelColors.ONBACKGROUND_1}\n  >\n    {children}\n  </Label>\n);\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\n// future: add validations? onChange? more props etc etc\nconst Input = React.forwardRef((props, ref) => {\n  const {\n    name,\n    required,\n    disabled,\n    placeHolder,\n    value,\n  } = props;\n  const [inputValue, setInputValue] = useState(value);\n  return (\n    <div className=\"sendbird-input\">\n      <input\n        className=\"sendbird-input__input\"\n        ref={ref}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n      />\n      {(placeHolder && !inputValue) && (\n        <Label\n          className=\"sendbird-input__placeholder\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {placeHolder}\n        </Label>\n      )}\n    </div>\n  );\n});\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string,\n};\n\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: '',\n};\n\nexport default Input;\n","export const noop = () => {};\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport default {\n  getSenderName,\n  getSenderProfileUrl,\n};\n","import './muted-avatar-overlay.scss';\n\nimport React, { ReactElement } from 'react'\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\ninterface Props {\n  height?: number;\n  width?: number;\n}\n\nexport default function MutedAvatarOverlay(props: Props): ReactElement {\n  const { height = 24, width = 24 } = props;\n  return (\n    <div\n      className=\"sendbird-muted-avatar\"\n      style={{\n        height: `${height}px`,\n        width: `${width}px`,\n      }}\n    >\n      <div className=\"sendbird-muted-avatar__icon\">\n        <div\n          className=\"sendbird-muted-avatar__bg\"\n          style={{\n            height: `${height}px`,\n            width: `${width}px`,\n          }}\n        />\n        <Icon\n          type={IconTypes.MUTE}\n          fillColor={IconColors.WHITE}\n          width={`${height - 8}px`}\n          height={`${width - 8}px`}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nexport default function Checkbox({\n  id,\n  checked,\n  onChange,\n}) {\n  const [isChecked, setCheck] = useState(checked);\n  return (\n    <label className=\"sendbird-checkbox\" htmlFor={id}>\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={isChecked}\n        onClick={() => setCheck(!isChecked)}\n        onChange={onChange}\n      />\n      <span className=\"sendbird-checkbox--checkmark\" />\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: () => { },\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport MutedAvatarOverlay from '../Avatar/MutedAvatarOverlay';\nimport Checkbox from '../Checkbox';\nimport UserProfile from '../UserProfile';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nexport default function UserListItem({\n  className,\n  user,\n  checkBox,\n  disableMessaging,\n  currentUser,\n  checked,\n  onChange,\n  action,\n}) {\n  const uniqueKey = user.userId;\n  const actionRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  const avatarRef = React.useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-user-list-item',\n      ].join(' ')}\n      ref={parentRef}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay height={40} width={40} />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            className=\"sendbird-user-list-item__avatar\"\n            ref={avatarRef}\n            src={user.profileUrl}\n            width=\"40px\"\n            height=\"40px\"\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    disableMessaging={disableMessaging}\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className=\"sendbird-user-list-item__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            ' (You)'\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        checkBox && (\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\n          <label\n            className=\"sendbird-user-list-item__checkbox\"\n            htmlFor={uniqueKey}\n          >\n            <Checkbox\n              id={uniqueKey}\n              checked={checked}\n              onChange={(event) => onChange(event)}\n            />\n          </label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className=\"sendbird-user-list-item__operator\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-user-list-item__action\"\n            ref={actionRef}\n          >\n            { action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string,\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: () => { },\n};\n"]},"metadata":{},"sourceType":"module"}