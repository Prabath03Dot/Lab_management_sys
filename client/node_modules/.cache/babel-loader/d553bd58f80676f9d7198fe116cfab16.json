{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    spacing,\n    breakpoints,\n    cols\n  } = _ref;\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = \"maxWidth\" in breakpoint ? \"max-width\" : \"min-width\";\n    const breakpointSize = theme.fn.size({\n      size: property === \"max-width\" ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints\n    });\n    acc[`@media (${property}: ${breakpointSize + (property === \"max-width\" ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing\n      })\n    };\n    return acc;\n  }, {});\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      })\n    }, gridBreakpoints)\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\SimpleGrid\\SimpleGrid.styles.ts"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAaA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,WAA2C;AAAA,MAAnC;AAAE,IAAA,OAAF;AAAW,IAAA,WAAX;AAAwB,IAAA;AAAxB,GAAmC;AACrE,QAAM,eAAe,GAAG,oBAAoB,CAAC,KAAD,EAAQ,WAAR,CAApB,CAAyC,MAAzC,CAAgD,CAAC,GAAD,EAAM,UAAN,KAAqB;AAC3F,UAAM,QAAQ,GAAG,cAAc,UAAd,GAA2B,WAA3B,GAAyC,WAA1D;AACA,UAAM,cAAc,GAAG,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AACnC,MAAA,IAAI,EAAE,QAAQ,KAAK,WAAb,GAA2B,UAAU,CAAC,QAAtC,GAAiD,UAAU,CAAC,QAD/B;AAEnC,MAAA,KAAK,EAAE,KAAK,CAAC;AAFsB,KAAd,CAAvB;AAIA,IAAA,GAAG,CAAE,WAAU,QAAS,KAAI,cAAc,IAAI,QAAQ,KAAK,WAAb,GAA2B,CAA3B,GAA+B,CAAnC,CAAsC,KAA7E,CAAH,GAAwF;AACtF,MAAA,mBAAmB,EAAG,UAAS,UAAU,CAAC,IAAK,mBADuC;AAEtF,MAAA,GAAG,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AACjB,QAAA,IAAI,EAAE,UAAU,CAAC,OAAX,IAAsB,OADX;AAEjB,QAAA,KAAK,EAAE,KAAK,CAAC;AAFI,OAAd;AAFiF,KAAxF;AAOA,WAAO,GAAP;AACD,GAduB,EAcrB,EAdqB,CAAxB;AAeA,SAAO;AACL,IAAA,IAAI,EAAE,cAAc,CAAC;AACnB,MAAA,SAAS,EAAE,YADQ;AAEnB,MAAA,OAAO,EAAE,MAFU;AAGnB,MAAA,mBAAmB,EAAG,UAAS,IAAK,mBAHjB;AAInB,MAAA,GAAG,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,OAAd;AAJc,KAAD,EAKjB,eALiB;AADf,GAAP;AAQD,CAxB0B,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n}\n\ninterface SimpleGridStyles {\n  spacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles((theme, { spacing, breakpoints, cols }: SimpleGridStyles) => {\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n    const breakpointSize = theme.fn.size({\n      size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints,\n    });\n\n    acc[`@media (${property}: ${breakpointSize + (property === 'max-width' ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing,\n      }),\n    };\n\n    return acc;\n  }, {});\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      ...gridBreakpoints,\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}