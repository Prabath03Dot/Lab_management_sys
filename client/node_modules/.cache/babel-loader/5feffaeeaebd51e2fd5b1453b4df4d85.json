{"ast":null,"code":"function isHexColor(hex) {\n  const replaced = hex.replace(\"#\", \"\");\n  return typeof replaced === \"string\" && replaced.length === 6 && !Number.isNaN(Number(`0x${replaced}`));\n}\n\nfunction hexToRgba(color) {\n  const replaced = color.replace(\"#\", \"\");\n  const parsed = parseInt(replaced, 16);\n  const r = parsed >> 16 & 255;\n  const g = parsed >> 8 & 255;\n  const b = parsed & 255;\n  return {\n    r,\n    g,\n    b,\n    a: 1\n  };\n}\n\nfunction rgbStringToRgba(color) {\n  const [r, g, b, a] = color.replace(/[^0-9,.]/g, \"\").split(\",\").map(Number);\n  return {\n    r,\n    g,\n    b,\n    a: a || 1\n  };\n}\n\nfunction toRgba(color) {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith(\"rgb\")) {\n    return rgbStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  };\n}\n\nexport { toRgba };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\styles\\src\\theme\\utils\\to-rgba\\to-rgba.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,QAAM,QAAQ,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAjB;AACA,SAAO,OAAO,QAAP,KAAoB,QAApB,IAAgC,QAAQ,CAAC,MAAT,KAAoB,CAApD,IAAyD,CAAC,MAAM,CAAC,KAAP,CAAa,MAAM,CAAE,KAAI,QAAS,EAAf,CAAnB,CAAjE;AACD;;AACD,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,QAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAjB;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,QAAD,EAAW,EAAX,CAAvB;AACA,QAAM,CAAC,GAAG,MAAM,IAAI,EAAV,GAAe,GAAzB;AACA,QAAM,CAAC,GAAG,MAAM,IAAI,CAAV,GAAc,GAAxB;AACA,QAAM,CAAC,GAAG,MAAM,GAAG,GAAnB;AACA,SAAO;AACL,IAAA,CADK;AAEL,IAAA,CAFK;AAGL,IAAA,CAHK;AAIL,IAAA,CAAC,EAAE;AAJE,GAAP;AAMD;;AACD,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,QAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,IAAe,KAAK,CAAC,OAAN,CAAc,WAAd,EAA2B,EAA3B,EAA+B,KAA/B,CAAqC,GAArC,EAA0C,GAA1C,CAA8C,MAA9C,CAArB;AACA,SAAO;AAAE,IAAA,CAAF;AAAK,IAAA,CAAL;AAAQ,IAAA,CAAR;AAAW,IAAA,CAAC,EAAE,CAAC,IAAI;AAAnB,GAAP;AACD;;AACM,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AAC5B,MAAI,UAAU,CAAC,KAAD,CAAd,EAAuB;AACrB,WAAO,SAAS,CAAC,KAAD,CAAhB;AACD;;AACD,MAAI,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAJ,EAA6B;AAC3B,WAAO,eAAe,CAAC,KAAD,CAAtB;AACD;;AACD,SAAO;AACL,IAAA,CAAC,EAAE,CADE;AAEL,IAAA,CAAC,EAAE,CAFE;AAGL,IAAA,CAAC,EAAE,CAHE;AAIL,IAAA,CAAC,EAAE;AAJE,GAAP;AAMF","sourcesContent":["/* eslint-disable no-bitwise */\n\ninterface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction isHexColor(hex: string): boolean {\n  const replaced = hex.replace('#', '');\n  return (\n    typeof replaced === 'string' && replaced.length === 6 && !Number.isNaN(Number(`0x${replaced}`))\n  );\n}\n\nfunction hexToRgba(color: string): RGBA {\n  const replaced = color.replace('#', '');\n\n  const parsed = parseInt(replaced, 16);\n  const r = (parsed >> 16) & 255;\n  const g = (parsed >> 8) & 255;\n  const b = parsed & 255;\n\n  return {\n    r,\n    g,\n    b,\n    a: 1,\n  };\n}\n\nfunction rgbStringToRgba(color: string): RGBA {\n  const [r, g, b, a] = color\n    .replace(/[^0-9,.]/g, '')\n    .split(',')\n    .map(Number);\n\n  return { r, g, b, a: a || 1 };\n}\n\nexport function toRgba(color: string): RGBA {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith('rgb')) {\n    return rgbStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}