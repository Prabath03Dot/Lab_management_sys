{"ast":null,"code":"import React from 'react';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { isMarkFilled } from './is-mark-filled.js';\nimport useStyles from './Marks.styles.js';\nimport { Box } from '../../Box/Box.js';\n\nfunction Marks(_ref) {\n  let {\n    marks,\n    color,\n    size,\n    min,\n    max,\n    value,\n    classNames,\n    styles,\n    offset,\n    onChange\n  } = _ref;\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size,\n    color\n  }, {\n    classNames,\n    styles,\n    name: \"Slider\"\n  });\n  const items = marks.map((mark, index) => /* @__PURE__ */React.createElement(Box, {\n    className: classes.markWrapper,\n    sx: {\n      left: `${getPosition({\n        value: mark.value,\n        min,\n        max\n      })}%`\n    },\n    key: index\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.mark, {\n      [classes.markFilled]: isMarkFilled({\n        mark,\n        value,\n        offset\n      })\n    })\n  }), mark.label && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.markLabel,\n    onMouseDown: event => {\n      event.stopPropagation();\n      onChange(mark.value);\n    },\n    onTouchStart: event => {\n      event.stopPropagation();\n      onChange(mark.value);\n    }\n  }, mark.label)));\n  return /* @__PURE__ */React.createElement(\"div\", null, items);\n}\n\nMarks.displayName = \"@mantine/core/SliderMarks\";\nexport { Marks };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\core\\src\\components\\Slider\\Marks\\Marks.tsx"],"names":[],"mappings":";;;;;;AAKO,SAAS,KAAT,OAWJ;AAAA,MAXmB;AACpB,IAAA,KADoB;AAEpB,IAAA,KAFoB;AAGpB,IAAA,IAHoB;AAIpB,IAAA,GAJoB;AAKpB,IAAA,GALoB;AAMpB,IAAA,KANoB;AAOpB,IAAA,UAPoB;AAQpB,IAAA,MARoB;AASpB,IAAA,MAToB;AAUpB,IAAA;AAVoB,GAWnB;AACD,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,MAAkB,SAAS,CAAC;AAAE,IAAA,IAAF;AAAQ,IAAA;AAAR,GAAD,EAAkB;AAAE,IAAA,UAAF;AAAc,IAAA,MAAd;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAlB,CAAjC;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU,CAAC,IAAD,EAAO,KAAP,KAAY,eAAqB,KAAK,CAAC,aAAN,CAAoB,GAApB,EAAyB;AAChF,IAAA,SAAS,EAAE,OAAO,CAAC,WAD6D;AAEhF,IAAA,EAAE,EAAE;AAAE,MAAA,IAAI,EAAG,GAAE,WAAW,CAAC;AAAE,QAAA,KAAK,EAAE,IAAI,CAAC,KAAd;AAAqB,QAAA,GAArB;AAA0B,QAAA;AAA1B,OAAD,CAAkC;AAAxD,KAF4E;AAGhF,IAAA,GAAG,EAAE;AAH2E,GAAzB,EAIxD,eAAkB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC5C,IAAA,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAT,EAAe;AAC1B,OAAC,OAAO,CAAC,UAAT,GAAsB,YAAY,CAAC;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAR;AAAe,QAAA;AAAf,OAAD;AADR,KAAf;AAD+B,GAA3B,CAJsC,EAQrD,IAAI,CAAC,KAAL,IAAU,eAAoB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAC3D,IAAA,SAAS,EAAE,OAAO,CAAC,SADwC;AAE3D,IAAA,WAAW,EAAG,KAAD,IAAW;AACtB,MAAA,KAAK,CAAC,eAAN;AACA,MAAA,QAAQ,CAAC,IAAI,CAAC,KAAN,CAAR;AACD,KAL0D;AAM3D,IAAA,YAAY,EAAG,KAAD,IAAW;AACvB,MAAA,KAAK,CAAC,eAAN;AACA,MAAA,QAAQ,CAAC,IAAI,CAAC,KAAN,CAAR;AACD;AAT0D,GAA3B,EAU/B,IAAI,CAAC,KAV0B,CARuB,CAA3C,CAAd;AAmBA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,KAAjC,CAAvB;AACD;;AACD,KAAK,CAAC,WAAN,GAAoB,2BAApB","sourcesContent":["import React from 'react';\nimport { DefaultProps, MantineNumberSize, MantineColor, ClassNames } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { isMarkFilled } from './is-mark-filled';\nimport useStyles from './Marks.styles';\n\nexport type MarksStylesNames = ClassNames<typeof useStyles>;\n\nexport interface MarksProps extends DefaultProps<MarksStylesNames> {\n  marks: { value: number; label?: React.ReactNode }[];\n  size: MantineNumberSize;\n  color: MantineColor;\n  min: number;\n  max: number;\n  value: number;\n  onChange(value: number): void;\n  offset?: number;\n}\n\nexport function Marks({\n  marks,\n  color,\n  size,\n  min,\n  max,\n  value,\n  classNames,\n  styles,\n  offset,\n  onChange,\n}: MarksProps) {\n  const { classes, cx } = useStyles({ size, color }, { classNames, styles, name: 'Slider' });\n\n  const items = marks.map((mark, index) => (\n    <Box\n      className={classes.markWrapper}\n      sx={{ left: `${getPosition({ value: mark.value, min, max })}%` }}\n      key={index}\n    >\n      <div\n        className={cx(classes.mark, {\n          [classes.markFilled]: isMarkFilled({ mark, value, offset }),\n        })}\n      />\n      {mark.label && (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n          className={classes.markLabel}\n          onMouseDown={(event) => {\n            event.stopPropagation();\n            onChange(mark.value);\n          }}\n          onTouchStart={(event) => {\n            event.stopPropagation();\n            onChange(mark.value);\n          }}\n        >\n          {mark.label}\n        </div>\n      )}\n    </Box>\n  ));\n\n  return <div>{items}</div>;\n}\n\nMarks.displayName = '@mantine/core/SliderMarks';\n"]},"metadata":{},"sourceType":"module"}