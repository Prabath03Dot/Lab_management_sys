{"ast":null,"code":"import { useRef, useState, useMemo, useEffect } from 'react';\nconst defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nconst browser = typeof window !== \"undefined\";\n\nfunction useResizeObserver() {\n  const frameID = useRef(0);\n  const ref = useRef(null);\n  const [rect, setRect] = useState(defaultState);\n  const observer = useMemo(() => browser ? new ResizeObserver(entries => {\n    const entry = entries[0];\n\n    if (entry) {\n      cancelAnimationFrame(frameID.current);\n      frameID.current = requestAnimationFrame(() => {\n        if (ref.current) {\n          setRect(entry.contentRect);\n        }\n      });\n    }\n  }) : null, []);\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.disconnect();\n\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n  return [ref, rect];\n}\n\nfunction useElementSize() {\n  const [ref, {\n    width,\n    height\n  }] = useResizeObserver();\n  return {\n    ref,\n    width,\n    height\n  };\n}\n\nexport { useElementSize, useResizeObserver };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\node_modules\\@mantine\\hooks\\src\\use-resize-observer\\use-resize-observer.ts"],"names":[],"mappings":";AACA,MAAM,YAAY,GAAG;AACnB,EAAA,CAAC,EAAE,CADgB;AAEnB,EAAA,CAAC,EAAE,CAFgB;AAGnB,EAAA,KAAK,EAAE,CAHY;AAInB,EAAA,MAAM,EAAE,CAJW;AAKnB,EAAA,GAAG,EAAE,CALc;AAMnB,EAAA,IAAI,EAAE,CANa;AAOnB,EAAA,MAAM,EAAE,CAPW;AAQnB,EAAA,KAAK,EAAE;AARY,CAArB;AAUA,MAAM,OAAO,GAAG,OAAO,MAAP,KAAkB,WAAlC;;AACO,SAAS,iBAAT,GAA6B;AAClC,QAAM,OAAO,GAAG,MAAM,CAAC,CAAD,CAAtB;AACA,QAAM,GAAG,GAAG,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAC,YAAD,CAAhC;AACA,QAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,OAAO,GAAG,IAAI,cAAJ,CAAoB,OAAD,IAAa;AACvE,UAAM,KAAK,GAAG,OAAO,CAAC,CAAD,CAArB;;AACA,QAAI,KAAJ,EAAW;AACT,MAAA,oBAAoB,CAAC,OAAO,CAAC,OAAT,CAApB;AACA,MAAA,OAAO,CAAC,OAAR,GAAkB,qBAAqB,CAAC,MAAM;AAC5C,YAAI,GAAG,CAAC,OAAR,EAAiB;AACf,UAAA,OAAO,CAAC,KAAK,CAAC,WAAP,CAAP;AACD;AACF,OAJsC,CAAvC;AAKD;AACF,GAVwC,CAAH,GAUjC,IAVmB,EAUb,EAVa,CAAxB;AAWA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,GAAG,CAAC,OAAR,EAAiB;AACf,MAAA,QAAQ,CAAC,OAAT,CAAiB,GAAG,CAAC,OAArB;AACD;;AACD,WAAO,MAAM;AACX,MAAA,QAAQ,CAAC,UAAT;;AACA,UAAI,OAAO,CAAC,OAAZ,EAAqB;AACnB,QAAA,oBAAoB,CAAC,OAAO,CAAC,OAAT,CAApB;AACD;AACF,KALD;AAMD,GAVQ,EAUN,CAAC,GAAG,CAAC,OAAL,CAVM,CAAT;AAWA,SAAO,CAAC,GAAD,EAAM,IAAN,CAAP;AACD;;AACM,SAAS,cAAT,GAA0B;AAC/B,QAAM,CAAC,GAAD,EAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,GAAN,IAA2B,iBAAiB,EAAlD;AACA,SAAO;AAAE,IAAA,GAAF;AAAO,IAAA,KAAP;AAAc,IAAA;AAAd,GAAP;AACF","sourcesContent":["import { useEffect, useMemo, useRef, useState } from 'react';\n\ntype ObserverRect = Omit<DOMRectReadOnly, 'toJSON'>;\n\nconst defaultState: ObserverRect = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nconst browser = typeof window !== 'undefined';\n\nexport function useResizeObserver<T extends HTMLElement = any>() {\n  const frameID = useRef(0);\n  const ref = useRef<T>(null);\n\n  const [rect, setRect] = useState<ObserverRect>(defaultState);\n\n  const observer = useMemo(\n    () =>\n      browser\n        ? new ResizeObserver((entries: any) => {\n            const entry = entries[0];\n\n            if (entry) {\n              cancelAnimationFrame(frameID.current);\n\n              frameID.current = requestAnimationFrame(() => {\n                if (ref.current) {\n                  setRect(entry.contentRect);\n                }\n              });\n            }\n          })\n        : null,\n    []\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.disconnect();\n\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n\n  return [ref, rect] as const;\n}\n\nexport function useElementSize<T extends HTMLElement = any>() {\n  const [ref, { width, height }] = useResizeObserver<T>();\n  return { ref, width, height };\n}\n"]},"metadata":{},"sourceType":"module"}