{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, d as __spreadArray, _ as __assign, w as withSendbirdContext, u as uuidv4, e as _toConsumableArray } from './LocalizationContext-2dd9ebb4.js';\nimport React__default, { useRef, useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { M as Modal, T as Type, a as TextButton, C as ContextMenu, I as IconButton, b as MenuItems, c as MenuItem, B as Button, d as ButtonTypes, e as ButtonSizes, U as UserProfileContext, f as ConnectedUserProfile, g as getSdk, h as UserProfileProvider } from './index-5ffc2e37.js';\nimport { I as InviteMembers$1, B as Badge, c as createDefaultUserListQuery, L as LeaveChannel } from './LeaveChannel-2a6e54c8.js';\nimport { A as Avatar, L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, P as PlaceHolder, f as PlaceHolderTypes } from './index-8f3e6954.js';\nimport { I as InputLabel, a as Input, n as noop, U as UserListItem$2, M as MutedAvatarOverlay } from './index-89e256af.js';\nimport { C as ChannelAvatar } from './index-881fbba8.js';\nimport { A as AccordionGroup, a as Accordion } from './index-c5333808.js';\nimport 'react-dom';\nimport './index-2b8da253.js';\nimport './utils-dadb8f4b.js';\n\nvar EditDetails = function EditDetails(props) {\n  var _onSubmit = props.onSubmit,\n      onCancel = props.onCancel,\n      channel = props.channel,\n      userId = props.userId,\n      theme = props.theme;\n  var inputRef = useRef(null);\n  var formRef = useRef(null);\n  var hiddenInputRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentImg = _useState2[0],\n      setCurrentImg = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newFile = _useState4[0],\n      setNewFile = _useState4[1];\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var title = channel.name;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: stringSet.MODAL__CHANNEL_INFORMATION__TITLE,\n    submitText: stringSet.BUTTON__SAVE,\n    onCancel: onCancel,\n    onSubmit: function onSubmit() {\n      if (title !== '' && !inputRef.current.value) {\n        if (formRef.current.reportValidity) {\n          // might not work in explorer\n          formRef.current.reportValidity();\n        }\n\n        return;\n      }\n\n      _onSubmit(newFile, inputRef.current.value);\n\n      onCancel();\n    },\n    type: Type.PRIMARY\n  }, /*#__PURE__*/React__default.createElement(\"form\", {\n    className: \"channel-profile-form\",\n    ref: formRef,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__img-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__avatar\"\n  }, currentImg ? /*#__PURE__*/React__default.createElement(Avatar, {\n    height: \"80px\",\n    width: \"80px\",\n    src: currentImg\n  }) : /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    height: 80,\n    width: 80,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })), /*#__PURE__*/React__default.createElement(\"input\", {\n    ref: hiddenInputRef,\n    type: \"file\",\n    accept: \"image/gif, image/jpeg, image/png\",\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      setCurrentImg(URL.createObjectURL(e.target.files[0]));\n      setNewFile(e.target.files[0]);\n      hiddenInputRef.current.value = '';\n    }\n  }), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"channel-profile-form__avatar-button\",\n    onClick: function onClick() {\n      return hiddenInputRef.current.click();\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.PRIMARY\n  }, stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__name-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME), /*#__PURE__*/React__default.createElement(Input, {\n    required: title !== '',\n    name: \"channel-profile-form__name\",\n    ref: inputRef,\n    value: title,\n    placeHolder: stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER\n  }))));\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired\n};\n\nvar ChannelProfile = function ChannelProfile(props) {\n  var disabled = props.disabled,\n      channel = props.channel,\n      userId = props.userId,\n      theme = props.theme,\n      onChannelInfoChange = props.onChannelInfoChange;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var getChannelName = function getChannelName() {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map(function (member) {\n        return member.nickname || stringSet.NO_NAME;\n      }).join(', ');\n    }\n\n    return stringSet.NO_TITLE;\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile--inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile__avatar\"\n  }, /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    width: 80,\n    height: 80\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-profile__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, getChannelName()), /*#__PURE__*/React__default.createElement(TextButton, {\n    disabled: disabled,\n    className: \"sendbird-channel-profile__edit\",\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n\n      setShowModal(true);\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY\n  }, stringSet.CHANNEL_SETTING__PROFILE__EDIT)), showModal && /*#__PURE__*/React__default.createElement(EditDetails, {\n    onCancel: function onCancel() {\n      return setShowModal(false);\n    },\n    onSubmit: onChannelInfoChange,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })));\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(PropTypes.shape({\n      nickname: PropTypes.string\n    }))\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func\n};\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: function onChannelInfoChange() {}\n};\n\nfunction MembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All Members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      currentUser: currentUser,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, channel.myRole === 'operator' && /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: 'operator'\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: ''\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'), // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: false\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: true\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  setMembers(members.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Ban\"));\n          }\n        }));\n      }\n    });\n  }))));\n}\n\nvar SHOWN_MEMBER_MAX = 10;\n\nvar UserListItem$1 = function UserListItem(_ref) {\n  var _ref$member = _ref.member,\n      member = _ref$member === void 0 ? {} : _ref$member,\n      _ref$currentUser = _ref.currentUser,\n      currentUser = _ref$currentUser === void 0 ? '' : _ref$currentUser;\n  var avatarRef = useRef(null);\n\n  var _useContext = useContext(UserProfileContext),\n      disableUserProfile = _useContext.disableUserProfile,\n      renderUserProfile = _useContext.renderUserProfile;\n\n  var _useContext2 = useContext(LocalizationContext),\n      stringSet = _useContext2.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member-avatar\"\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        src: member.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: member,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: member,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, member.nickname || stringSet.NO_NAME, currentUser === member.userId && stringSet.CHANNEL_SETTING__MEMBERS__YOU));\n};\n\nUserListItem$1.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired\n};\n\nvar MembersAccordion = function MembersAccordion(_ref2) {\n  var channel = _ref2.channel,\n      disabled = _ref2.disabled,\n      currentUser = _ref2.currentUser,\n      userQueryCreator = _ref2.userQueryCreator,\n      onInviteMembers = _ref2.onInviteMembers,\n      swapParams = _ref2.swapParams;\n  var members = channel.members || [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMoreModal = _useState2[0],\n      setShowMoreModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showAddUserModal = _useState4[0],\n      setShowAddUserModal = _useState4[1];\n\n  var _useContext3 = useContext(LocalizationContext),\n      stringSet = _useContext3.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__list\"\n  }, members.slice(0, SHOWN_MEMBER_MAX).map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      member: member,\n      currentUser: currentUser,\n      key: member.userId\n    });\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__footer\"\n  }, members.length >= SHOWN_MEMBER_MAX && /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__all-members\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowMoreModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS), members.length >= SHOWN_MEMBER_MAX && showMoreModal && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: currentUser,\n    hideModal: function hideModal() {\n      setShowMoreModal(false);\n    },\n    channel: channel\n  }), /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__invite-users\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    disabled: disabled,\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n\n      setShowAddUserModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER), showAddUserModal && /*#__PURE__*/React__default.createElement(InviteMembers$1, {\n    swapParams: swapParams,\n    titleText: stringSet.MODAL__INVITE_MEMBER__TITLE,\n    submitText: stringSet.BUTTON__INVITE,\n    closeModal: function closeModal() {\n      return setShowAddUserModal(false);\n    },\n    idsToFilter: members.map(function (member) {\n      return member.userId;\n    }),\n    userQueryCreator: userQueryCreator,\n    onSubmit: onInviteMembers\n  })));\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({}))\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired\n};\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {}\n}; // might move to reusable/UI\n\nvar COMPONENT_NAME = 'sendbird-user-list-item--small';\n\nvar UserListItem = function UserListItem(_a) {\n  var user = _a.user,\n      className = _a.className,\n      currentUser = _a.currentUser,\n      action = _a.action;\n  var actionRef = useRef(null);\n  var parentRef = useRef(null);\n  var avatarRef = useRef(null);\n  var stringSet = useContext(LocalizationContext).stringSet;\n\n  var _b = useContext(UserProfileContext),\n      disableUserProfile = _b.disableUserProfile,\n      renderUserProfile = _b.renderUserProfile;\n\n  var injectingClassNames = Array.isArray(className) ? className : [className];\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: parentRef,\n    className: __spreadArray([COMPONENT_NAME], injectingClassNames, true).join(' ')\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, null), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        className: COMPONENT_NAME + \"__avatar\",\n        src: user.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && \" (You)\"), // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: actionRef,\n    className: COMPONENT_NAME + \"__action\"\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n};\n\nfunction OperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      operators = _b[0],\n      setOperators = _b[1];\n\n  var _c = useState(null),\n      operatorQuery = _c[0],\n      setOperatorQuery = _c[1];\n\n  useEffect(function () {\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All operators\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = operatorQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        operatorQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setOperators(__spreadArray(__spreadArray([], operators, true), o, true));\n        });\n      }\n    }\n  }, operators.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([member.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nfunction AddOperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      _onSubmit = _a.onSubmit;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState({}),\n      selectedMembers = _c[0],\n      setSelectedMembers = _c[1];\n\n  var _d = useState(null),\n      memberQuery = _d[0],\n      setMemberQuery = _d[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  var selectedCount = Object.keys(selectedMembers).filter(function (m) {\n    return selectedMembers[m];\n  }).length;\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    type: Type.PRIMARY,\n    submitText: \"Add\",\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, selectedCount + \" \" + stringSet.MODAL__INVITE_MEMBER__SELECTEC), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\n\nvar OperatorList = function OperatorList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      operators = _b[0],\n      setOperators = _b[1];\n\n  var _c = useState(false),\n      showMore = _c[0],\n      setShowMore = _c[1];\n\n  var _d = useState(false),\n      showAdd = _d[0],\n      setShowAdd = _d[1];\n\n  var _e = useState(false),\n      hasNext = _e[0],\n      setHasNext = _e[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, operators.map(function (operator) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: operator.userId,\n      user: operator,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([operator.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== operator.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD)), showMore && /*#__PURE__*/React__default.createElement(OperatorsModal, {\n    currentUser: sdk.currentUser.userId,\n    hideModal: function hideModal() {\n      setShowMore(false);\n      refershList();\n    },\n    channel: channel\n  }), showAdd && /*#__PURE__*/React__default.createElement(AddOperatorsModal, {\n    hideModal: function hideModal() {\n      return setShowAdd(false);\n    },\n    channel: channel,\n    onSubmit: function onSubmit(members) {\n      setShowAdd(false);\n      channel.addOperators(members, function () {\n        refershList();\n      });\n    }\n  }));\n};\n\nvar mapStoreToProps$3 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar OperatorList$1 = withSendbirdContext(OperatorList, mapStoreToProps$3);\n\nfunction InviteMembers(_a) {\n  var hideModal = _a.hideModal,\n      userQueryCreator = _a.userQueryCreator,\n      _onSubmit = _a.onSubmit;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState({}),\n      selectedMembers = _c[0],\n      setSelectedMembers = _c[1];\n\n  var _d = useState(null),\n      userQuery = _d[0],\n      setUserQuery = _d[1];\n\n  useEffect(function () {\n    var userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    disabled: Object.keys(selectedMembers).length === 0,\n    submitText: \"Invite\",\n    type: Type.PRIMARY,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = userQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        userQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\n\nvar MemberList = function MemberList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel,\n      userQueryCreator = _a.userQueryCreator,\n      userId = _a.userId;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showAllMembers = _d[0],\n      setShowAllMembers = _d[1];\n\n  var _e = useState(false),\n      showInviteMembers = _e[0],\n      setShowInviteMembers = _e[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: userId !== member.userId ? function (_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'), // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  refershList();\n                  closeDropdown();\n                });\n              }\n            }, \"Ban\"));\n          }\n        });\n      } : null\n    });\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowAllMembers(true);\n    }\n  }, \"All members\"), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowInviteMembers(true);\n    }\n  }, \"Invite members\")), showAllMembers && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowAllMembers(false);\n      refershList();\n    }\n  }), showInviteMembers && /*#__PURE__*/React__default.createElement(InviteMembers, {\n    userQueryCreator: userQueryCreator,\n    onSubmit: function onSubmit(selectedMembers) {\n      channel.inviteWithUserIds(selectedMembers, function () {\n        setShowInviteMembers(false);\n        refershList();\n      });\n    },\n    channel: channel,\n    hideModal: function hideModal() {\n      return setShowInviteMembers(false);\n    }\n  }));\n};\n\nvar mapStoreToProps$2 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar MemberList$1 = withSendbirdContext(MemberList, mapStoreToProps$2);\n\nfunction BannedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nvar BannedMemberList = function BannedMemberList(_a) {\n  var channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showModal = _d[0],\n      setShowModal = _d[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  refreshList();\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No banned members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All banned members\")), showModal && /*#__PURE__*/React__default.createElement(BannedMembersModal, {\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\n\nvar mapStoreToProps$1 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar BannedMemberList$1 = withSendbirdContext(BannedMemberList, mapStoreToProps$1);\n\nfunction MutedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nvar MutedMemberList = function MutedMemberList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showModal = _d[0],\n      setShowModal = _d[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              closeDropdown: closeDropdown,\n              openLeft: true,\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  refreshList();\n                  closeDropdown();\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No muted members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All muted members\")), showModal && /*#__PURE__*/React__default.createElement(MutedMembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\n\nvar mapStoreToProps = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar MutedMemberList$1 = withSendbirdContext(MutedMemberList, mapStoreToProps);\n\nvar kFormatter$1 = function kFormatter(num) {\n  return Math.abs(num) > 999 ? (Math.abs(num) / 1000).toFixed(1) + \"K\" : num;\n};\n\nfunction AdminPannel(_a) {\n  var userQueryCreator = _a.userQueryCreator,\n      channel = _a.channel,\n      userId = _a.userId;\n\n  var _b = useState(false),\n      frozen = _b[0],\n      setFrozen = _b[1]; // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n\n\n  useEffect(function () {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(AccordionGroup, {\n    className: \"sendbird-channel-settings__operator\"\n  }, /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__operators-list\",\n    id: \"operators\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.OPERATOR,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(OperatorList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__members-list\",\n    id: \"members\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MEMBERS,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE), /*#__PURE__*/React__default.createElement(Badge, {\n        count: kFormatter$1(channel.memberCount)\n      }));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MemberList$1, {\n        userQueryCreator: userQueryCreator,\n        channel: channel,\n        userId: userId\n      }));\n    }\n  }), // No muted members in broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(Accordion, {\n    id: \"mutedMembers\",\n    className: \"sendbird-channel-settings__muted-members-list\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MUTE,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MutedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__banned-members-list\",\n    id: \"bannedMembers\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.BAN,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(BannedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }), // cannot frozen broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__freeze\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.FREEZE,\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: \"sendbird-channel-settings__accordion-icon\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__FREEZE_CHANNEL), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__frozen-icon\"\n  }, frozen ? /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.unfreeze(function () {\n        setFrozen(false);\n      });\n    },\n    type: IconTypes.TOGGLE_ON,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }) : /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.freeze(function () {\n        setFrozen(true);\n      });\n    },\n    type: IconTypes.TOGGLE_OFF,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }))));\n}\n\nvar COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nvar kFormatter = function kFormatter(num) {\n  return Math.abs(num) > 999 ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\") : num;\n};\n\nfunction ChannelSettings(props) {\n  var className = props.className,\n      onCloseClick = props.onCloseClick,\n      channelUrl = props.channelUrl,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      _onChannelModified = props.onChannelModified,\n      renderChannelProfile = props.renderChannelProfile,\n      onBeforeUpdateChannel = props.onBeforeUpdateChannel;\n  var sdkStore = props.stores.sdkStore,\n      _props$config = props.config,\n      userListQuery = _props$config.userListQuery,\n      theme = _props$config.theme,\n      userId = _props$config.userId,\n      logger = _props$config.logger,\n      isOnline = _props$config.isOnline,\n      _props$queries = props.queries,\n      queries = _props$queries === void 0 ? {} : _props$queries;\n  var _props$config2 = props.config,\n      config = _props$config2 === void 0 ? {} : _props$config2;\n  var userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  var userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  var userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var sdk = sdkStore.sdk,\n      initialized = sdkStore.initialized; // hack to kepp track of channel updates by triggering useEffect\n\n  var _useState = useState(uuidv4()),\n      _useState2 = _slicedToArray(_useState, 2),\n      channelUpdateId = _useState2[0],\n      setChannelUpdateId = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      channel = _useState4[0],\n      setChannel = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      invalidChannel = _useState6[0],\n      setInvalidChannel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showAccordion = _useState8[0],\n      setShowAccordion = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showLeaveChannelModal = _useState10[0],\n      setShowLeaveChannelModal = _useState10[1];\n\n  var componentClassNames = (Array.isArray(className) ? [COMPONENT_CLASS_NAME].concat(_toConsumableArray(className)) : [COMPONENT_CLASS_NAME, className]).join(' ');\n  useEffect(function () {\n    logger.info('ChannelSettings: Setting up');\n\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl, function (groupChannel) {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassNames\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-channel-settings__header\"\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.H_2,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"sendbird-channel-settings__close-icon\",\n      type: IconTypes.CLOSE,\n      height: \"24px\",\n      width: \"24px\",\n      onClick: function onClick() {\n        logger.info('ChannelSettings: Click close');\n        onCloseClick();\n      }\n    })), /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    })));\n  }\n\n  return /*#__PURE__*/React__default.createElement(UserProfileProvider, {\n    className: componentClassNames,\n    disableUserProfile: userDefinedDisableUserProfile,\n    renderUserProfile: userDefinedRenderProfile\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header-icon\"\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    width: \"32px\",\n    height: \"32px\",\n    onClick: function onClick() {\n      logger.info('ChannelSettings: Click close');\n      onCloseClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__close-icon\",\n    type: IconTypes.CLOSE,\n    height: \"22px\",\n    width: \"22px\"\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__scroll-area\"\n  }, renderChannelProfile ? renderChannelProfile({\n    channel: channel\n  }) : /*#__PURE__*/React__default.createElement(ChannelProfile, {\n    disabled: !isOnline,\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    onChannelInfoChange: function onChannelInfoChange(currentImg, currentTitle) {\n      logger.info('ChannelSettings: Channel information being updated');\n      var swapParams = sdk.getErrorFirstCallback();\n\n      if (onBeforeUpdateChannel) {\n        var params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data); // swapParams\n\n        channel.updateChannel(params, function (response, error) {\n          var groupChannel = response;\n\n          if (swapParams) {\n            groupChannel = error;\n          }\n\n          _onChannelModified(groupChannel);\n\n          setChannelUpdateId(uuidv4());\n        });\n        return;\n      }\n\n      channel.updateChannel(currentTitle, currentImg, channel.data, function (response, error) {\n        var groupChannel = response;\n\n        if (swapParams) {\n          groupChannel = error;\n        }\n\n        logger.info('ChannelSettings: Channel information updated', groupChannel);\n\n        _onChannelModified(groupChannel);\n\n        setChannelUpdateId(uuidv4());\n      });\n    }\n  }), channel.myRole === 'operator' ? /*#__PURE__*/React__default.createElement(AdminPannel, {\n    channel: channel,\n    userId: userId,\n    onChannelModified: function onChannelModified(groupChannel) {\n      // setChannelUpdateId(uuidv4());\n      _onChannelModified(groupChannel);\n    },\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    }\n  }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__members'].join(' '),\n    role: \"switch\",\n    \"aria-checked\": showAccordion,\n    onKeyDown: function onKeyDown() {\n      return setShowAccordion(!showAccordion);\n    },\n    onClick: function onClick() {\n      return setShowAccordion(!showAccordion);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__panel-icon-left\",\n    type: IconTypes.MEMBERS,\n    fillColor: IconColors.PRIMARY,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE, /*#__PURE__*/React__default.createElement(Badge, {\n    count: kFormatter(channel.memberCount)\n  })), /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-right', 'sendbird-channel-settings__panel-icon--chevron', showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''].join(' '),\n    type: IconTypes.CHEVRON_RIGHT,\n    height: \"24px\",\n    width: \"24px\"\n  })), showAccordion && /*#__PURE__*/React__default.createElement(MembersAccordion, {\n    currentUser: userId,\n    disabled: !isOnline // eslint-disable-next-line\n    ,\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    },\n    swapParams: sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback(),\n    channel: channel,\n    members: channel.members,\n    onInviteMembers: function onInviteMembers(selectedMembers) {\n      logger.info('ChannelSettings: Inviting new users');\n      channel.inviteWithUserIds(selectedMembers).then(function (res) {\n        _onChannelModified(res);\n\n        setChannelUpdateId(uuidv4());\n        logger.info('ChannelSettings: Inviting new users success!', res);\n      });\n    }\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__leave-channel', !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : ''].join(' '),\n    role: \"button\",\n    disabled: true,\n    onKeyDown: function onKeyDown() {\n      if (!isOnline) {\n        return;\n      }\n\n      setShowLeaveChannelModal(true);\n    },\n    onClick: function onClick() {\n      if (!isOnline) {\n        return;\n      }\n\n      setShowLeaveChannelModal(true);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-left', 'sendbird-channel-settings__panel-icon__leave'].join(' '),\n    type: IconTypes.LEAVE,\n    fillColor: IconColors.ERROR,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)), showLeaveChannelModal && /*#__PURE__*/React__default.createElement(LeaveChannel, {\n    onCloseModal: function onCloseModal() {\n      return setShowLeaveChannelModal(false);\n    },\n    onLeaveChannel: function onLeaveChannel() {\n      logger.info('ChannelSettings: Leaving channel', channel);\n      channel.leave().then(function () {\n        logger.info('ChannelSettings: Leaving channel successful!', channel);\n        onCloseClick();\n      });\n    }\n  })));\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string)\n    })\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([PropTypes.shape({\n          getChannel: PropTypes.func\n        }), PropTypes.func]),\n        createApplicationUserListQuery: PropTypes.any\n      }),\n      initialized: PropTypes.bool\n    })\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func\n    })\n  }).isRequired\n};\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: function onCloseClick() {},\n  onChannelModified: function onChannelModified() {}\n};\nvar ChannelSettings$1 = withSendbirdContext(ChannelSettings);\nexport { ChannelSettings$1 as default };","map":{"version":3,"sources":["D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\EditDetails.jsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\ChannelProfile.jsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MembersModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\MembersAccordion.jsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\UserListItem.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorsModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\AddOperatorsModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorList.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\InviteMembersModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MemberList.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMembersModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMemberList.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMembersModal.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMemberList.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\index.tsx","D:\\D-Downlods\\MINI_ Prpject 2022\\lab-manage-sys\\client\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\index.jsx"],"names":["EditDetails","onSubmit","onCancel","channel","userId","theme","props","inputRef","useRef","formRef","hiddenInputRef","currentImg","setCurrentImg","useState","newFile","setNewFile","stringSet","useContext","title","ButtonType","PRIMARY","e","React","display","URL","LabelTypography","LabelColors","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","PropTypes","name","string","isRequired","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","member","ONBACKGROUND_1","members","nickname","func","MembersModal","_a","hideModal","currentUser","setMembers","memberQuery","setMemberQuery","useEffect","memberListQuery","target","fetchMore","hasNext","o","parentRef","actionRef","toggleDropdown","IconTypes","IconColors","CONTENT_INVERSE","m","role","closeDropdown","isMuted","SHOWN_MEMBER_MAX","UserListItem","avatarRef","disableUserProfile","renderUserProfile","paddingTop","paddingBottom","user","currentUserId","close","profileUrl","MembersAccordion","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","ButtonTypes","ButtonSizes","COMPONENT_NAME","className","action","injectingClassNames","Array","__spreadArray","ONBACKGROUND_2","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","AddOperatorsModal","selectedMembers","setSelectedMembers","selectedCount","CAPTION_1","modifiedSelectedMembers","event","id","checked","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","setHasNext","refershList","useCallback","operator","mapStoreToProps","getSdk","withSendbirdContext","InviteMembers","userQuery","setUserQuery","userListQuery","Object","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","BannedMembersModal","bannedUserListQuery","BannedMemberList","refreshList","ONBACKGROUND_3","MutedMembersModal","MutedMemberList","kFormatter","Math","AdminPannel","frozen","setFrozen","COMPONENT_CLASS_NAME","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","sdkStore","logger","isOnline","queries","config","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","initialized","channelUpdateId","setChannelUpdateId","uuidv4","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","PlaceHolderTypes","WRONG","params","groupChannel","createDefaultUserListQuery","ChannelSettings","applicationUserListQuery","limit","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","stores","getErrorFirstCallback","GroupChannel","getChannel","createApplicationUserListQuery","any","bool","info","error","warning"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"]},"metadata":{},"sourceType":"module"}