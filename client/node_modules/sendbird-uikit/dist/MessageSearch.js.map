{"version":3,"file":"MessageSearch.js","sources":["../src/smart-components/MessageSearch/dux/actionTypes.ts","../src/smart-components/MessageSearch/dux/reducers.ts","../src/smart-components/MessageSearch/dux/initialState.ts","../src/smart-components/MessageSearch/hooks/useSetChannel.ts","../src/smart-components/MessageSearch/hooks/useGetSearchedMessages.ts","../src/smart-components/MessageSearch/hooks/useScrollCallback.ts","../src/ui/MessageSearchItem/getCreatedAt.ts","../src/ui/MessageSearchItem/index.tsx","../src/ui/MessageSearchFileItem/utils.ts","../src/ui/MessageSearchFileItem/index.tsx","../src/smart-components/MessageSearch/hooks/useSearchStringEffect.ts","../src/smart-components/MessageSearch/index.tsx"],"sourcesContent":["export const GET_SEARCHED_MESSAGES = 'GET_SEARCHED_MESSAGES';\nexport const GET_NEXT_SEARCHED_MESSAGES = 'GET_NEXT_SEARCHED_MESSAGES';\nexport const START_MESSAGE_SEARCH = 'START_MESSAGE_SEARCH';\nexport const START_GETTING_SEARCHED_MESSAGES = 'START_GETTING_SEARCHED_MESSAGES';\nexport const SET_QUERY_INVALID = 'SET_QUERY_INVALID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const CHANNEL_INVALID = 'CHANNEL_INVALID';\nexport const RESET_SEARCH_STRING = 'RESET_SEARCH_STRING';\n","import { State as initialStateInterface } from './initialState';\nimport * as actionTypes from './actionTypes';\n\ninterface ActionInterface {\n  type: string;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  payload?: any;\n}\n\nexport default function reducer(\n  state: initialStateInterface,\n  action: ActionInterface,\n): initialStateInterface {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      const currentChannel = action.payload;\n      return {\n        ...state,\n        currentChannel,\n        initialized: true,\n      };\n    }\n    case actionTypes.CHANNEL_INVALID: {\n      return {\n        ...state,\n        currentChannel: null,\n        initialized: false,\n      };\n    }\n    case actionTypes.GET_SEARCHED_MESSAGES: {\n      const { messages, createdQuery } = action.payload;\n      if (\n        createdQuery\n        && createdQuery.channelUrl === state.currentMessageSearchQuery.channelUrl\n        && createdQuery.key === state.currentMessageSearchQuery.key\n      ) {\n        return {\n          ...state,\n          loading: false,\n          isInvalid: false,\n          allMessages: [...messages],\n          hasMoreResult: state.currentMessageSearchQuery.hasNext,\n        };\n      }\n      return { ...state };\n    }\n    case actionTypes.SET_QUERY_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      }\n    }\n    case actionTypes.START_MESSAGE_SEARCH: {\n      return {\n        ...state,\n        isInvalid: false,\n        loading: false,\n      }\n    }\n    case actionTypes.START_GETTING_SEARCHED_MESSAGES: {\n      const currentMessageSearchQuery = action.payload;\n      return {\n        ...state,\n        loading: true,\n        currentMessageSearchQuery,\n      };\n    }\n    case actionTypes.GET_NEXT_SEARCHED_MESSAGES: {\n      const messages = action.payload;\n      return {\n        ...state,\n        allMessages: [...state.allMessages, ...messages],\n        hasMoreResult: state.currentMessageSearchQuery.hasNext,\n      };\n    }\n    case actionTypes.RESET_SEARCH_STRING: {\n      return {\n        ...state,\n        allMessages: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import SendbirdUIKit from '../../../index';\nexport interface State {\n  allMessages: Array<SendbirdUIKit.ClientFileMessage | SendbirdUIKit.ClientUserMessage>;\n  loading: boolean;\n  isInvalid: boolean;\n  initialized: boolean;\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  currentMessageSearchQuery: SendbirdUIKit.ClientMessageSearchQuery;\n  hasMoreResult: boolean;\n}\n\nconst initialState: State = {\n  allMessages: [],\n  loading: false,\n  isInvalid: false,\n  initialized: false,\n  currentChannel: null,\n  currentMessageSearchQuery: null,\n  hasMoreResult: false,\n};\n\nexport default initialState;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface MainProps {\n  channelUrl: string;\n  sdkInit: boolean;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useSetChannel(\n  { channelUrl, sdkInit }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && (sdk.OpenChannel || sdk.GroupChannel)) {\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useSetChannel group channel', groupChannel);\n          messageSearchDispathcer({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        } else {\n          messageSearchDispathcer({\n            type: messageActionTypes.CHANNEL_INVALID,\n            payload: null,\n          });\n        }\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\nimport SendBird from 'sendbird';\n\ninterface MainProps {\n  currentChannel: SendbirdUIKit.GroupChannelType;\n  channelUrl: string;\n  requestString?: string;\n  messageSearchQuery?: SendbirdUIKit.MessageSearchQueryType;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n  retryCount: number;\n}\ninterface ToolProps {\n  sdk: SendbirdUIKit.Sdk;\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nfunction useGetSearchedMessages(\n  { currentChannel, channelUrl, requestString, messageSearchQuery, onResultLoaded, retryCount }: MainProps,\n  { sdk, logger, messageSearchDispathcer }: ToolProps,\n): void {\n  useEffect(() => {\n    messageSearchDispathcer({\n      type: messageActionTypes.START_MESSAGE_SEARCH,\n      payload: null,\n    });\n    if (sdk && channelUrl && sdk.createMessageSearchQuery && currentChannel) {\n      if (requestString) {\n        const inputSearchMessageQueryObject = {\n          ...messageSearchQuery,\n          order: 'ts' as const,\n          channelUrl,\n          messageTimestampFrom: currentChannel.invitedAt,\n        };\n        const createdQuery = sdk.createMessageSearchQuery(requestString, inputSearchMessageQueryObject);\n        createdQuery.next((messages, error) => {\n          if (!error) {\n            logger.info('MessageSearch | useGetSearchedMessages: succeeded getting messages', messages);\n            messageSearchDispathcer({\n              type: messageActionTypes.GET_SEARCHED_MESSAGES,\n              payload: {\n                messages,\n                createdQuery,\n              },\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(messages, null);\n            }\n          } else {\n            logger.warning('MessageSearch | useGetSearchedMessages: getting failed', error);\n            messageSearchDispathcer({\n              type: messageActionTypes.SET_QUERY_INVALID,\n              payload: null,\n            });\n            if (onResultLoaded && typeof onResultLoaded === 'function') {\n              onResultLoaded(null, error);\n            }\n          }\n        });\n        messageSearchDispathcer({\n          type: messageActionTypes.START_GETTING_SEARCHED_MESSAGES,\n          payload: createdQuery,\n        });\n      } else {\n        logger.info('MessageSearch | useGetSeasrchedMessages: search string is empty');\n      }\n    }\n  }, [channelUrl, messageSearchQuery, requestString, currentChannel, retryCount]);\n}\n\nexport default useGetSearchedMessages;\n","import { useCallback } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport SendbirdUIKit from '../../../index';\n\ninterface MainProps {\n  currentMessageSearchQuery: SendBird.MessageSearchQuery;\n  hasMoreResult: boolean;\n  onResultLoaded?: (\n    messages?: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    error?: SendbirdUIKit.SendbirdError,\n  ) => void;\n}\ninterface ToolProps {\n  logger: SendbirdUIKit.Logger;\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\ntype CallbackReturn = (\n  callback: (\n    messages: Array<SendBird.UserMessage | SendBird.FileMessage | SendBird.AdminMessage>,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    error: any,\n  ) => void\n) => void;\n\nfunction useScrollCallback(\n  { currentMessageSearchQuery, hasMoreResult, onResultLoaded }: MainProps,\n  { logger, messageSearchDispathcer }: ToolProps,\n): CallbackReturn {\n  return useCallback((cb) => {\n    if (!hasMoreResult) {\n      logger.warning('MessageSearch | useScrollCallback: no more searched results', hasMoreResult);\n    }\n    if (currentMessageSearchQuery && currentMessageSearchQuery.hasNext) {\n      currentMessageSearchQuery.next((messages, error) => {\n        if (!error) {\n          logger.info('MessageSearch | useScrollCallback: succeeded getting searched messages', messages);\n          messageSearchDispathcer({\n            type: messageActionTypes.GET_NEXT_SEARCHED_MESSAGES,\n            payload: messages,\n          });\n          cb(messages, null);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(messages, null);\n          }\n        } else {\n          logger.warning('MessageSearch | useScrollCallback: failed getting searched messages', error);\n          cb(null, error);\n          if (onResultLoaded && typeof onResultLoaded === 'function') {\n            onResultLoaded(null, error);\n          }\n        }\n      });\n    } else {\n      logger.warning('MessageSearch | useScrollCallback: no currentMessageSearchQuery');\n    }\n  }, [currentMessageSearchQuery, hasMoreResult]);\n}\n\nexport default useScrollCallback;\n","import format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\n\n// getCreatedAt\nexport default (createdAt: number, locale: Locale): string => {\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n};\n","import React, { useContext } from 'react';\nimport './index.scss';\nimport getCreatedAt from './getCreatedAt';\n\nimport Avatar from '../Avatar';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientUserMessage;\n  selected?: boolean;\n  onClick?: (message: SendbirdUIKit.ClientMessage) => void;\n}\n\nexport default function MessageSearchItem({\n  className,\n  message,\n  selected,\n  onClick,\n}: Props): JSX.Element {\n  const { createdAt } = message;\n  const messageText = message.message;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-search-item',\n        selected ? 'sendbird-message-search-item--selected' : '',\n      ].join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-item__right\">\n        <Label\n          className=\"sendbird-message-search-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-text\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {messageText}\n        </Label>\n        <Label\n          className=\"sendbird-message-search-item__right__message-created-at\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {getCreatedAt(createdAt, dateLocale)}\n        </Label>\n      </div>\n      <div className=\"sendbird-message-search-item__right-footer\" />\n    </div>\n  );\n}\n","import format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\nimport { IconTypes } from '../Icon';\n\nexport function getCreatedAt(createdAt: number, locale: Locale): string {\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n}\n\nexport function getIconOfFileType(message: SendbirdUIKit.ClientFileMessage): string {\n  const { url } = message;\n  const fileMessageUrl = url;\n  const fileExtension = (fileMessageUrl.match(/\\.([^.]*?)(?=\\?|#|$)/))[1];\n\n  if (/(jpg|jpeg|png)$/i.test(fileExtension)) {\n    return IconTypes.PHOTO;\n  } else if (/mp4$/i.test(fileExtension)) {\n    return IconTypes.PLAY;\n  } else if (/mp3/i.test(fileExtension)) {\n    return IconTypes.FILE_AUDIO;\n  } else if (/gif/i.test(fileExtension)) {\n    return IconTypes.GIF;\n  } else {\n    return IconTypes.FILE_DOCUMENT;\n  }\n}\n\nexport function truncate(fullText: string, textLimit: number): string {\n  if (fullText.length <= textLimit) return fullText;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = textLimit - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullText.substr(0, frontChars) + separator + fullText.substr(fullText.length - backChars);\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport Icon, { IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { getCreatedAt, getIconOfFileType, truncate } from './utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: SendbirdUIKit.ClientFileMessage;\n  selected?: boolean;\n  onClick?: (message: SendbirdUIKit.ClientFileMessage) => void;\n}\n\nexport default function MessageSearchFileItem(props: Props): ReactElement {\n  const {\n    className,\n    message,\n    selected,\n    onClick,\n  } = props;\n  const { createdAt, url, name } = message;\n  const fileMessageUrl = url;\n  const sender = message.sender || message._sender;\n  const { profileUrl, nickname } = sender;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-search-file-item',\n        selected ? 'sendbird-message-search-file-item--selected' : '',\n      ].join(' ')}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(message);\n      }}\n    >\n      <div className=\"sendbird-message-search-file-item__left\">\n        <Avatar\n          className=\"sendbird-message-search-file-item__left__sender-avatar\"\n          src={profileUrl}\n          alt=\"profile image\"\n          width=\"56px\"\n          height=\"56px\"\n        />\n      </div>\n      <div className=\"sendbird-message-search-file-item__right\">\n        <Label\n          className=\"sendbird-message-search-file-item__right__sender-name\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {nickname || stringSet.NO_NAME}\n        </Label>\n        <div className=\"sendbird-message-search-file-item__right__content\">\n          <div className=\"sendbird-message-search-file-item__right__content__type-icon\">\n            <Icon\n              type={getIconOfFileType(message)}\n              fillColor={IconColors.PRIMARY}\n              width=\"18px\"\n              height=\"18px\"\n            />\n          </div>\n          <Label\n            className=\"sendbird-message-search-file-item__right__content__url\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {truncate(name || fileMessageUrl, 28)}\n          </Label>\n        </div>\n      </div>\n      <Label\n        className=\"sendbird-message-search-file-item__message-created-at\"\n        type={LabelTypography.CAPTION_3}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {getCreatedAt(createdAt, dateLocale)}\n      </Label>\n      <div className=\"sendbird-message-search-file-item__right-footer\" />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as messageActionTypes from '../dux/actionTypes';\n\ninterface DynamicParams {\n  searchString: string;\n}\n\ninterface StaticParams {\n  messageSearchDispathcer: ({ type: string, payload: any }) => void;\n}\n\nconst DEBOUNCING_TIME = 500;\n\nfunction useSearchStringEffect(\n  { searchString }: DynamicParams,\n  { messageSearchDispathcer }: StaticParams,\n): string {\n  const [requestString, setRequestString] = useState('');\n  const [debouncingTimer, setDebouncingTimer] = useState(null);\n  useEffect(() => {\n    clearTimeout(debouncingTimer);\n    if (searchString) {\n      setDebouncingTimer(\n        setTimeout(() => {\n          setRequestString(searchString);\n        }, DEBOUNCING_TIME)\n      );\n    } else {\n      setRequestString('');\n      messageSearchDispathcer({\n        type: messageActionTypes.RESET_SEARCH_STRING,\n        payload: '',\n      });\n    }\n  }, [searchString]);\n  return requestString;\n}\n\nexport default useSearchStringEffect;\n","import React, { useReducer, useRef, useContext, useState } from 'react';\nimport './index.scss';\n\nimport widthSendbirdContext from '../../lib/SendbirdSdkContext';\nimport messageSearchReducer from './dux/reducers';\nimport messageSearchInitialState from './dux/initialState';\n\nimport useSetChannel from './hooks/useSetChannel';\nimport useGetSearchMessages from './hooks/useGetSearchedMessages';\nimport useScrollCallback from './hooks/useScrollCallback';\n\nimport MessageSearchItem from '../../ui/MessageSearchItem';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport MessageSearchFileItem from '../../ui/MessageSearchFileItem';\n\nimport SendbirdUIKit from '../../index';\nimport useSearchStringEffect from './hooks/useSearchStringEffect';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search';\n\ninterface Props extends SendbirdUIKit.MessageSearchProps {\n  // sendbird internal props\n  stores: {\n    sdkStore?: SendbirdUIKit.SdkStore,\n    userStore?: SendbirdUIKit.UserStore,\n  };\n  config: {\n    userId: string,\n    isOnline: boolean,\n    logger?: SendbirdUIKit.Logger,\n    theme?: string,\n    /* eslint-disable @typescript-eslint/no-explicit-any*/\n    pubSub: any,\n    disableUserProfile?: boolean,\n    renderUserProfile?(): JSX.Element,\n    imageCompression?: {\n      compressionRate?: number,\n      resizingWidth?: number | string,\n      resizingHeight?: number | string,\n    },\n  };\n}\n\nfunction MessageSearch(props: Props): JSX.Element {\n  const {\n    // sendbird internal props\n    stores,\n    config,\n    // message search props\n    channelUrl,\n    searchString,\n    messageSearchQuery,\n    renderSearchItem,\n    onResultLoaded,\n    onResultClick,\n  } = props;\n\n  // hook variables\n  const { stringSet } = useContext(LocalizationContext);\n  const [retryCount, setRetryCount] = useState(0); // this is a trigger flag for activating useGetSearchMessages\n  const [selectedMessageId, setSelectedMessageId] = useState(0);\n  const [messageSearchStore, messageSearchDispathcer] = useReducer(messageSearchReducer, messageSearchInitialState);\n  const {\n    allMessages,\n    loading,\n    isInvalid,\n    currentChannel,\n    currentMessageSearchQuery,\n    hasMoreResult,\n  } = messageSearchStore;\n\n  const getChannelName = () => {\n    if (currentChannel && currentChannel.name && currentChannel.name !== 'Group Channel') {\n      return currentChannel.name;\n    }\n    if (currentChannel && (currentChannel.name === 'Group Channel' || !currentChannel.name)) {\n      return currentChannel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  // const\n  const { sdkStore } = stores;\n  const { logger } = config;\n  const { sdk } = sdkStore;\n  const sdkInit = sdkStore.initialized;\n  const scrollRef = useRef(null);\n  const handleOnScroll = (e) => {\n    const scrollElement = e.target;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight,\n    } = scrollElement;\n\n    if (!hasMoreResult) {\n      return;\n    }\n    if (scrollTop + clientHeight >= scrollHeight) {\n      onScroll(() => {\n        // after load more searched messages\n      });\n    }\n  };\n\n  useSetChannel(\n    { channelUrl, sdkInit },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  const requestString = useSearchStringEffect({ searchString }, { messageSearchDispathcer });\n\n  useGetSearchMessages(\n    { currentChannel, channelUrl, requestString, messageSearchQuery, onResultLoaded, retryCount },\n    { sdk, logger, messageSearchDispathcer },\n  );\n\n  const onScroll = useScrollCallback(\n    { currentMessageSearchQuery, hasMoreResult, onResultLoaded },\n    { logger, messageSearchDispathcer },\n  );\n\n  const handleRetryToConnect = () => {\n    setRetryCount(retryCount + 1);\n  };\n\n  if (isInvalid && searchString && requestString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={handleRetryToConnect}\n        />\n      </div>\n    );\n  }\n\n  if (loading && searchString && requestString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder type={PlaceHolderTypes.SEARCHING} />\n      </div>\n    );\n  }\n\n  if (!searchString) {\n    return (\n      <div className={COMPONENT_CLASS_NAME}>\n        <PlaceHolder\n          type={PlaceHolderTypes.SEARCH_IN}\n          searchInString={getChannelName()}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={COMPONENT_CLASS_NAME}\n      onScroll={handleOnScroll}\n      ref={scrollRef}\n    >\n      {\n        (allMessages.length > 0)\n          ? (\n            allMessages.map((message) => {\n              if (renderSearchItem) {\n                return renderSearchItem({ message, onResultClick });\n              }\n              if (message.messageType === 'file') {\n                return (\n                  <MessageSearchFileItem\n                    className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                    message={message}\n                    key={message.messageId}\n                    selected={(selectedMessageId === message.messageId)}\n                    onClick={() => {\n                      onResultClick(message);\n                      setSelectedMessageId(message.messageId);\n                    }}\n                  />\n                );\n              }\n              return (\n                <MessageSearchItem\n                  className={`${COMPONENT_CLASS_NAME}__message-search-item`}\n                  message={message}\n                  key={message.messageId}\n                  selected={(selectedMessageId === message.messageId)}\n                  onClick={() => {\n                    onResultClick(message);\n                    setSelectedMessageId(message.messageId);\n                  }}\n                />\n              );\n            })\n          )\n          : (\n            <PlaceHolder type={PlaceHolderTypes.NO_RESULTS} />\n          )\n      }\n    </div>\n  );\n}\n\nexport default widthSendbirdContext(MessageSearch);\n"],"names":["GET_SEARCHED_MESSAGES","GET_NEXT_SEARCHED_MESSAGES","START_MESSAGE_SEARCH","START_GETTING_SEARCHED_MESSAGES","SET_QUERY_INVALID","SET_CURRENT_CHANNEL","CHANNEL_INVALID","RESET_SEARCH_STRING","reducer","state","action","type","actionTypes","currentChannel","payload","initialized","_a","messages","createdQuery","channelUrl","currentMessageSearchQuery","key","loading","isInvalid","allMessages","hasMoreResult","hasNext","initialState","useSetChannel","_b","sdkInit","sdk","logger","messageSearchDispathcer","useEffect","OpenChannel","GroupChannel","getChannel","groupChannel","error","info","messageActionTypes","useGetSearchedMessages","requestString","messageSearchQuery","onResultLoaded","retryCount","createMessageSearchQuery","inputSearchMessageQueryObject","order","messageTimestampFrom","invitedAt","createdQuery_1","next","warning","useScrollCallback","useCallback","cb","createdAt","locale","optionalParam","isToday","format","isYesterday","formatRelative","Date","MessageSearchItem","className","message","selected","onClick","messageText","sender","_sender","profileUrl","nickname","useContext","LocalizationContext","stringSet","dateLocale","React","__spreadArray","Array","isArray","join","e","stopPropagation","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","NO_NAME","BODY_2","ONBACKGROUND_3","CAPTION_3","ONBACKGROUND_2","getCreatedAt","getIconOfFileType","url","fileMessageUrl","fileExtension","match","test","IconTypes","PHOTO","PLAY","FILE_AUDIO","GIF","FILE_DOCUMENT","truncate","fullText","textLimit","length","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","MessageSearchFileItem","props","name","IconColors","PRIMARY","DEBOUNCING_TIME","useSearchStringEffect","searchString","_c","useState","setRequestString","_d","debouncingTimer","setDebouncingTimer","clearTimeout","setTimeout","COMPONENT_CLASS_NAME","MessageSearch","stores","config","renderSearchItem","onResultClick","setRetryCount","selectedMessageId","setSelectedMessageId","useReducer","messageSearchReducer","messageSearchInitialState","messageSearchStore","getChannelName","members","map","member","NO_TITLE","sdkStore","scrollRef","useRef","handleOnScroll","scrollElement","target","scrollTop","scrollHeight","clientHeight","onScroll","useGetSearchMessages","handleRetryToConnect","PlaceHolderTypes","WRONG","SEARCHING","SEARCH_IN","messageType","messageId","NO_RESULTS","widthSendbirdContext"],"mappings":"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"}