{"version":3,"file":"ChannelList.js","sources":["../../src/smart-components/ChannelList/dux/actionTypes.js","../../src/smart-components/ChannelList/dux/initialState.js","../../src/smart-components/ChannelList/dux/reducers.js","../../src/ui/ChannelPreview/utils.js","../../src/ui/ChannelPreview/index.jsx","../../src/ui/ChannelHeader/index.jsx","../../src/ui/EditUserProfile/index.tsx","../../src/smart-components/ChannelList/components/AddChannel.jsx","../../src/smart-components/ChannelList/components/ChannelPreviewAction.jsx","../../src/smart-components/ChannelList/components/Placeholder.jsx","../../src/smart-components/ChannelList/utils.js","../../src/smart-components/ChannelList/index.jsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const SET_AUTO_SELECT_CHANNEL_ITEM = 'SET_AUTO_SELECT_CHANNEL_ITEM';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\nexport const CHANNEL_LIST_PARAMS_UPDATED = 'CHANNEL_LIST_PARAMS_UPDATED';\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: null,\n  currentUserId: '',\n  disableAutoSelect: false,\n};\n","import { filterChannelListParams, getChannelsWithUpsertedChannel } from '../../../utils';\nimport * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS: {\n      const nextChannel = (action.payload && action.payload.length && action.payload.length > 0)\n        ? action.payload[0].url\n        : null;\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: action.payload,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n      };\n    }\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        return {\n          ...state,\n          currentChannel: channel.url,\n        };\n      }\n      return {\n        ...state,\n        currentChannel: channel.url,\n        allChannels: [channel, ...state.allChannels.filter((ch) => ch.url !== channel.url)],\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n      }\n      const nextChannel = (channel.url === state.currentChannel)\n        ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n      };\n    }\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      const nextChannel = (channelUrl === state.currentChannel)\n        ? state.allChannels[0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channelUrl),\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          const filteredChannels = getChannelsWithUpsertedChannel(state.allChannels, channel);\n          const nextChannel = (isMe && (channel.url === state.currentChannel))\n            ? filteredChannels[0].url\n            : state.currentChannel;\n          return {\n            ...state,\n            currentChannel: state.disableAutoSelect ? null : nextChannel,\n            allChannels: filteredChannels,\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[0].url\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      const filteredChannels = state.allChannels.filter((c) => !(c.url === channel.url && isMe));\n      const nextChannel = (isMe && (channel.url === state.currentChannel))\n        ? filteredChannels[0].url\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: filteredChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const channel = action.payload;\n      const { unreadMessageCount } = channel;\n      if (!channel.lastMessage) return state;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel.url);\n        const currentUnreadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnreadCount === 0) {\n          return {\n            ...state,\n            allChannels: state.allChannels.map((ch) => (ch.url === channel.url ? channel : ch)),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          channel,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => (\n          channel.url === action.payload.url ? action.payload : channel)),\n      };\n    case actions.ON_CHANNEL_FROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = true;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.ON_CHANNEL_UNFROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel.url === state.currentChannel)\n          ? state.allChannels[state.allChannels[0].url === channel.url ? 1 : 0].url\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel.url),\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = false;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.CHANNEL_REPLACED_TO_TOP: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel.url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.CHANNEL_LIST_PARAMS_UPDATED:\n      return {\n        ...state,\n        currentUserId: action.payload.currentUserId,\n        channelListQuery: action.payload.channelListQuery,\n      };\n    case actions.SET_AUTO_SELECT_CHANNEL_ITEM:\n      return {\n        ...state,\n        disableAutoSelect: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import isToday from 'date-fns/isToday';\n\nimport format from 'date-fns/format';\nimport formatRelative from 'date-fns/formatRelative';\nimport isYesterday from 'date-fns/isYesterday';\n\nimport { truncateString } from '../../utils';\nimport { LabelStringSet } from '../Label';\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n\nexport const getLastMessageCreatedAt = (channel, locale) => {\n  const createdAt = channel?.lastMessage?.createdAt;\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return formatRelative(createdAt, new Date(), optionalParam);\n  }\n  return format(createdAt, 'MMM dd', optionalParam);\n};\n\nexport const getTotalMembers = (channel) => (\n  channel && channel.memberCount\n    ? channel.memberCount\n    : 0\n);\n\nconst getPrettyLastMessage = (message = {}) => {\n  const MAXLEN = 30;\n  const { messageType, name } = message;\n  if (messageType === 'file') {\n    return truncateString(name, MAXLEN);\n  }\n  return message.message;\n};\n\nexport const getLastMessage = (channel) => (\n  channel && channel.lastMessage\n    ? getPrettyLastMessage(channel.lastMessage)\n    : ''\n);\n\nexport const getChannelUnreadMessageCount = (channel) => (\n  (channel && channel.unreadMessageCount)\n    ? channel.unreadMessageCount\n    : 0\n);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport ChannelAvatar from '../ChannelAvatar/index';\nimport Badge from '../Badge';\nimport Icon, { IconColors, IconTypes } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport * as utils from './utils';\n\nexport default function ChannelPreview({\n  channel,\n  currentUser,\n  isActive,\n  ChannelAction,\n  theme,\n  onClick,\n  tabIndex,\n}) {\n  const {\n    userId,\n  } = currentUser;\n  const { isBroadcast, isFrozen } = channel;\n  const { stringSet, dateLocale } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        'sendbird-channel-preview',\n        isActive ? 'sendbird-channel-preview--active' : '',\n      ].join(' ')}\n      role=\"link\"\n      onClick={onClick}\n      onKeyPress={onClick}\n      tabIndex={tabIndex}\n    >\n      <div\n        className=\"sendbird-channel-preview__avatar\"\n      >\n        <ChannelAvatar\n          channel={channel}\n          userId={userId}\n          theme={theme}\n        />\n      </div>\n      <div className=\"sendbird-channel-preview__content\">\n        <div className=\"sendbird-channel-preview__content__upper\">\n          <div className=\"sendbird-channel-preview__content__upper__header\">\n            {\n              isBroadcast\n              && (\n                <div className=\"sendbird-channel-preview__content__upper__header__broadcast-icon\">\n                  <Icon\n                    type={IconTypes.BROADCAST}\n                    fillColor={IconColors.SECONDARY}\n                    height=\"16px\"\n                    width=\"16px\"\n                  />\n                </div>\n              )\n            }\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__channel-name\"\n              type={LabelTypography.SUBTITLE_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {utils.getChannelTitle(channel, userId, stringSet)}\n            </Label>\n            <Label\n              className=\"sendbird-channel-preview__content__upper__header__total-members\"\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {utils.getTotalMembers(channel)}\n            </Label>\n            {\n              isFrozen\n              && (\n                <div title=\"Frozen\" className=\"sendbird-channel-preview__content__upper__header__frozen-icon\">\n                  <Icon\n                    type={IconTypes.FREEZE}\n                    fillColor={IconColors.PRIMARY}\n                    height={12}\n                    width={12}\n                  />\n                </div>\n              )\n            }\n          </div>\n          <Label\n            className=\"sendbird-channel-preview__content__upper__last-message-at\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {utils.getLastMessageCreatedAt(channel, dateLocale)}\n          </Label>\n        </div>\n        <div className=\"sendbird-channel-preview__content__lower\">\n          <Label\n            className=\"sendbird-channel-preview__content__lower__last-message\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {utils.getLastMessage(channel)}\n          </Label>\n          <div className=\"sendbird-channel-preview__content__lower__unread-message-count\">\n            {\n              utils.getChannelUnreadMessageCount(channel) // return number\n                ? <Badge count={utils.getChannelUnreadMessageCount(channel)} />\n                : null\n            }\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"sendbird-channel-preview__action\"\n      >\n        {ChannelAction}\n      </div>\n    </div>\n  );\n}\n\nChannelPreview.propTypes = {\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n    isBroadcast: PropTypes.bool,\n    isFrozen: PropTypes.bool,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  isActive: PropTypes.bool,\n  ChannelAction: PropTypes.element.isRequired,\n  theme: PropTypes.string,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n};\n\nChannelPreview.defaultProps = {\n  channel: {},\n  currentUser: {},\n  isActive: false,\n  theme: 'light',\n  onClick: () => { },\n  tabIndex: 0,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport IconButton from '../IconButton';\n\nimport './index.scss';\nimport Avatar from '../Avatar/index';\n\nexport default function ChannelHeader({\n  user,\n  renderHeader,\n  iconButton,\n  onEdit,\n  allowProfileEdit,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        'sendbird-channel-header',\n        allowProfileEdit ? 'sendbird-channel-header--allow-edit' : '',\n      ].join(' ')}\n    >\n      {\n        renderHeader\n          ? renderHeader()\n          : (\n            <div\n              className=\"sendbird-channel-header__title\"\n              role=\"button\"\n              onClick={onEdit}\n              onKeyDown={onEdit}\n              tabIndex=\"0\"\n            >\n              <div className=\"sendbird-channel-header__title__left\">\n                <Avatar\n                  width=\"32px\"\n                  height=\"32px\"\n                  src={user.profileUrl}\n                  alt={user.nickname}\n                />\n              </div>\n              <div className=\"sendbird-channel-header__title__right\">\n                <Label\n                  className=\"sendbird-channel-header__title__right__name\"\n                  type={LabelTypography.SUBTITLE_2}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {user.nickname || stringSet.NO_NAME}\n                </Label>\n                <Label\n                  className=\"sendbird-channel-header__title__right__user-id\"\n                  type={LabelTypography.BODY_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {user.userId}\n                </Label>\n              </div>\n            </div>\n          )\n      }\n      <div className=\"sendbird-channel-header__right-icon\">\n        {iconButton}\n      </div>\n    </div>\n  );\n}\n\nChannelHeader.propTypes = {\n  user: PropTypes.shape({\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n    userId: PropTypes.string,\n  }),\n  renderHeader: PropTypes.func,\n  iconButton: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.instanceOf(IconButton),\n  ]),\n  onEdit: PropTypes.func.isRequired,\n  allowProfileEdit: PropTypes.bool,\n};\n\nChannelHeader.defaultProps = {\n  user: {},\n  renderHeader: null,\n  iconButton: null,\n  allowProfileEdit: false,\n};\n","import React, {\n  ReactElement,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport './index.scss';\n\nimport Modal from '../Modal';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Input, { InputLabel } from '../Input';\nimport Avatar from '../Avatar';\nimport Icon, { IconTypes } from '../Icon';\nimport { Type as ButtonType } from '../Button/type';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport TextButton from '../TextButton';\nimport { SendbirdTypes } from '../../types';\nimport { noop } from '../../utils/utils';\n\ninterface Props {\n  user: SendbirdTypes['User'];\n  theme?: string;\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  changeTheme?(theme: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nexport function EditUserProfile({\n  user,\n  theme = 'light',\n  onCancel,\n  onSubmit,\n  changeTheme = noop,\n  onThemeChange = null,\n}: Props): ReactElement {\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n\n  return (\n    <Modal\n      titleText={stringSet.EDIT_PROFILE__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      type={ButtonType.PRIMARY}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (user.nickname !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(inputRef.current.value, newFile);\n        onCancel();\n      }}\n    >\n      <form\n        className=\"sendbird-edit-user-profile\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <section className=\"sendbird-edit-user-profile__img\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__IMAGE_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__img__avatar\">\n            <Avatar\n              width=\"80px\"\n              height=\"80px\"\n              src={currentImg || user.profileUrl}\n            />\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"sendbird-edit-user-profile__img__avatar-button\"\n            notUnderline\n            onClick={() => hiddenInputRef.current.click()}\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.EDIT_PROFILE__IMAGE_UPLOAD}\n            </Label>\n          </TextButton>\n        </section>\n        <section className=\"sendbird-edit-user-profile__name\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__NICKNAME_LABEL}\n          </InputLabel>\n          <Input\n            required={user.nickname !== ''}\n            name=\"sendbird-edit-user-profile__name__input\"\n            ref={inputRef}\n            value={user.nickname}\n            placeHolder={stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__userid\">\n          <InputLabel>\n            {/*  userID */}\n            {stringSet.EDIT_PROFILE__USERID_LABEL}\n          </InputLabel>\n          <Input\n            disabled\n            name=\"sendbird-edit-user-profile__userid__input\"\n            value={user.userId}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__theme\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__THEME_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__theme__theme-icon\">\n            {\n              theme === 'dark'\n                ? (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('light');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('light');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_ON}\n                    width={44}\n                    height={24}\n                  />\n                )\n                : (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('dark');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('dark');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_OFF}\n                    width={44}\n                    height={24}\n                  />\n                )\n            }\n          </div>\n        </section>\n      </form>\n    </Modal>\n  );\n}\n\nconst mapStoreToProps = (store) => {\n  return {\n    theme: store.config.theme,\n    changeTheme: store.config.setCurrenttheme,\n  };\n};\n\ninterface ConnectedEditUserProfileProps {\n  user: SendbirdTypes['User'];\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nconst ConnectedEditUserProfile: (\n  props: ConnectedEditUserProfileProps\n) => React.Component = withSendbirdContext(EditUserProfile, mapStoreToProps);\n\nexport default ConnectedEditUserProfile;\n","import './add-channel.scss';\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport IconButton from '../../../ui/IconButton';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport InviteMembers from '../../InviteMembers';\n\nimport {\n  createChannel,\n  createDefaultUserListQuery,\n  isBroadcastChannelEnabled,\n  isSuperGroupChannelEnabled,\n} from './utils';\nimport { CREATE_CHANNEL } from '../dux/actionTypes';\nimport Modal from '../../../ui/Modal';\n\nexport default function AddChannel({\n  sdk,\n  disabled,\n  channelListDispatcher,\n  onBeforeCreateChannel,\n  userId,\n  userFilledApplicationUserListQuery,\n  userListQuery,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState('group');\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (!sdk || !sdk.createApplicationUserListQuery) {\n    return null;\n  }\n\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n\n  return (\n    <>\n      <IconButton\n        height=\"32px\"\n        width=\"32px\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n        disabled={disabled}\n      >\n        <Icon\n          type={IconTypes.CREATE}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </IconButton>\n      {\n        showModal && step === 0 && (\n          <Modal\n            titleText={stringSet.MODAL__CHOOSE_CHANNEL_TYPE__TITLE}\n            hideFooter\n            onCancel={() => { setShowModal(false); }}\n            onSubmit={() => { }}\n          >\n            <div className=\"sendbird-add-channel__rectangle-wrap\">\n              <div\n                className=\"sendbird-add-channel__rectangle\"\n                onClick={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n              >\n                <Icon\n                  className=\"sendbird-add-channel__rectangle__chat-icon\"\n                  type={IconTypes.CHAT}\n                  fillColor={IconColors.PRIMARY}\n                  width=\"28px\"\n                  height=\"28px\"\n                />\n                <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                  {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__GROUP}\n                </Label>\n              </div>\n              {\n                isSupergroupAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__supergroup-icon\"\n                      type={IconTypes.SUPERGROUP}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP}\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                isBroadcastAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__broadcast-icon\"\n                      type={IconTypes.BROADCAST}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet.MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST}\n                    </Label>\n                  </div>\n                )\n              }\n            </div>\n          </Modal>\n        )\n      }\n      {\n        showModal && step === 1 && (\n          <InviteMembers\n            swapParams={\n              sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n            }\n            titleText={stringSet.MODAL__CREATE_CHANNEL__TITLE}\n            submitText={stringSet.BUTTON__CREATE}\n            closeModal={() => {\n              setStep(0);\n              setShowModal(false);\n            }}\n            idsToFilter={[userId]}\n            userQueryCreator={() => ((userListQuery && typeof userListQuery === 'function')\n              ? userListQuery()\n              : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n            )}\n            onSubmit={(selectedUsers) => createChannel(\n              sdk,\n              selectedUsers,\n              onBeforeCreateChannel,\n              userId,\n              type,\n            ).then((channel) => {\n              // maybe - do this in event listener\n              channelListDispatcher({\n                type: CREATE_CHANNEL,\n                payload: channel,\n              });\n            })}\n          />\n        )\n      }\n    </>\n  );\n}\n\nAddChannel.propTypes = {\n  sdk: PropTypes.shape({\n    getErrorFirstCallback: PropTypes.func,\n    createApplicationUserListQuery: PropTypes.func,\n  }).isRequired,\n  disabled: PropTypes.bool,\n  channelListDispatcher: PropTypes.func.isRequired,\n  userFilledApplicationUserListQuery: PropTypes.shape({}),\n  onBeforeCreateChannel: PropTypes.func,\n  userId: PropTypes.string.isRequired,\n  userListQuery: PropTypes.func,\n};\n\nAddChannel.defaultProps = {\n  disabled: false,\n  userFilledApplicationUserListQuery: {},\n  onBeforeCreateChannel: null,\n  userListQuery: null,\n};\n","import React, {\n  useState,\n  useRef,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../ui/ContextMenu';\nimport IconButton from '../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport LeaveChannelModal from '../../ChannelSettings/components/LeaveChannel';\n\nexport default function ChannelPreviewAction({ disabled, onLeaveChannel }) {\n  const parentRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div\n      role=\"button\"\n      style={{ display: 'inline-block' }}\n      onKeyDown={(e) => { e.stopPropagation(); }}\n      tabIndex={0}\n      onClick={(e) => { e.stopPropagation(); }}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <IconButton\n            ref={parentRef}\n            onClick={toggleDropdown}\n            height=\"32px\"\n            width=\"32px\"\n          >\n            <Icon\n              type={IconTypes.MORE}\n              fillColor={IconColors.PRIMARY}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            parentRef={parentRef}\n            parentContainRef={parentRef}\n            closeDropdown={closeDropdown}\n          >\n            <MenuItem\n              onClick={() => {\n                if (disabled) { return; }\n                setShowModal(true);\n                closeDropdown();\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n            </MenuItem>\n          </MenuItems>\n        )}\n      />\n      {\n        showModal && (\n          <LeaveChannelModal\n            onCloseModal={() => setShowModal(false)}\n            onLeaveChannel={onLeaveChannel}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nChannelPreviewAction.propTypes = {\n  disabled: PropTypes.bool,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nChannelPreviewAction.defaultProps = {\n  disabled: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Placeholder from '../../../ui/PlaceHolder';\n\nexport default function ChannelsPlaceholder({\n  type,\n}) {\n  return (\n    <div className=\"sendbird-channel-list\">\n      <Placeholder type={type} />\n    </div>\n  );\n}\n\nChannelsPlaceholder.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new sdk.ChannelHandler();\n\n  ChannelHandler.onChannelChanged = (channel) => {\n    logger.info('ChannelList: onChannelChanged', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_CHANGED,\n      payload: channel,\n    });\n  };\n  ChannelHandler.onChannelDeleted = (channelUrl) => {\n    logger.info('ChannelList: onChannelDeleted', channelUrl);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_DELETED,\n      payload: channelUrl,\n    });\n  };\n  ChannelHandler.onUserJoined = (channel) => {\n    logger.info('ChannelList: onUserJoined', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_JOINED,\n        payload: channel,\n      });\n    }\n  };\n  ChannelHandler.onUserBanned = (channel, user) => {\n    const { currentUser } = sdk;\n    logger.info('Channel | useHandleChannelEvents: onUserBanned', channel);\n    if (user.userId === currentUser.userId) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: true,\n        },\n      });\n    } else {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: false,\n        },\n      });\n    }\n  };\n  ChannelHandler.onUserLeft = (channel, leftUser) => {\n    const { currentUser } = sdk;\n    const isMe = (currentUser.userId === leftUser.userId);\n    logger.info('ChannelList: onUserLeft', channel);\n    channelListDispatcher({\n      type: channelActions.ON_USER_LEFT,\n      payload: {\n        channel,\n        isMe,\n      },\n    });\n  };\n\n  ChannelHandler.onReadStatus = (channel) => {\n    logger.info('ChannelList: onReadStatus', channel);\n    channelListDispatcher({\n      type: channelActions.ON_READ_RECEIPT_UPDATED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n    logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onMessageUpdated = (channel, message) => {\n    if (channel.lastMessage.isEqual(message)) {\n      logger.info('ChannelList: onMessageUpdated', channel);\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onChannelHidden = (channel) => {\n    logger.info('ChannelList: onChannelHidden', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_ARCHIVED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelFrozen = (channel) => {\n    logger.info('ChannelList: onChannelFrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_FROZEN,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelUnfrozen = (channel) => {\n    logger.info('ChannelList: onChannelUnfrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_UNFROZEN,\n      payload: channel,\n    });\n  };\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.addChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createChannelListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const channelListQuery = sdk.GroupChannel.createMyGroupChannelListQuery();\n  channelListQuery.includeEmpty = false;\n  channelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n  channelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      channelListQuery[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n  disableAutoSelect,\n}) {\n  if (sdk && sdk.ChannelHandler) {\n    createEventHandler({\n      sdk,\n      channelListDispatcher,\n      sdkChannelHandlerId,\n      logger,\n    });\n  } else {\n    logger.console.warning('ChannelList - createEventHandler: sdk or sdk.ChannelHandler does not exist', sdk);\n  }\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  if (userFilledChannelListQuery) {\n    logger.info('ChannelList - setting up channelListQuery', channelListQuery);\n    channelListDispatcher({\n      type: channelActions.CHANNEL_LIST_PARAMS_UPDATED,\n      payload: {\n        channelListQuery,\n        currentUserId: sdk && sdk.currentUser && sdk.currentUser.userId,\n      },\n    });\n  }\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next((response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let channelList = response;\n      let err = error;\n      if (swapParams) {\n        channelList = error;\n        err = response;\n      }\n      logger.info('ChannelList - fetched channels', channelList);\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n        return;\n      }\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sorted = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sorted = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sorted);\n      }\n      if (!disableAutoSelect) {\n        onChannelSelect(sorted[0]);\n      }\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: sorted,\n      });\n      if (channelList && typeof channelList.forEach === 'function') {\n        logger.info('ChannelList - mark all channels as delivered');\n        channelList.forEach((c) => c.markAsDelivered());\n      }\n    });\n  } else {\n    logger.warning('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subScriber = new Map();\n  if (!pubSub) return subScriber;\n  subScriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subScriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    if (updatedChannel?.lastMessage?.messageId === message.messageId) {\n      updatedChannel.lastMessage = message;\n    }\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subScriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel.url,\n    });\n  }));\n\n  subScriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subScriber;\n};\n\nexport default setupChannelList;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as userActions from '../../lib/dux/user/actionTypes';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport * as channelListActions from './dux/actionTypes';\nimport channelListInitialState from './dux/initialState';\nimport channelListReducers from './dux/reducers';\n\nimport ChannelPreview from '../../ui/ChannelPreview';\nimport ChannelHeader from '../../ui/ChannelHeader';\nimport EditUserProfile from '../../ui/EditUserProfile';\nimport PlaceholderTypes from '../../ui/PlaceHolder/type';\n\nimport AddChannel from './components/AddChannel';\nimport ChannelPreviewAction from './components/ChannelPreviewAction';\nimport PlaceHolder from './components/Placeholder';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from './utils';\nimport { uuidv4 } from '../../utils/uuid';\n\nimport './index.scss';\n\nconst noop = () => { };\n\nfunction ChannelList(props) {\n  const {\n    stores: { sdkStore = {}, userStore = {} },\n    config: {\n      userId,\n      isOnline,\n      userListQuery,\n      logger,\n      pubSub,\n      theme,\n    },\n    dispatchers: {\n      userDispatcher,\n    },\n    queries = {},\n    renderChannelPreview,\n    renderHeader,\n    renderUserProfile,\n    disableUserProfile,\n    allowProfileEdit,\n    sortChannelList,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    onChannelSelect,\n    disableAutoSelect,\n  } = props;\n  const { config = {} } = props;\n  // enable if it is true atleast once(both are flase by default)\n  const enableEditProfile = allowProfileEdit || config.allowProfileEdit;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const { sdk = {} } = sdkStore;\n  const userFilledChannelListQuery = queries.channelListQuery;\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  const sdkError = sdkStore.error;\n  const sdkIntialized = sdkStore.initialized;\n\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  );\n  const [user, setUser] = useState({});\n  const [channelSource, setChannelSource] = useState({});\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n  const [sdkChannelHandlerId, setSdkChannelHandlerId] = useState(null);\n\n  const { loading, currentChannel } = channelListStore;\n\n  useEffect(() => {\n    setUser(userStore.user);\n  }, [userStore.user]);\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    setSdkChannelHandlerId(uuidv4);\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n        disableAutoSelect,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource({});\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  useEffect(() => {\n    channelListDispatcher({\n      type: channelListActions.SET_AUTO_SELECT_CHANNEL_ITEM,\n      payload: disableAutoSelect,\n    });\n  }, [disableAutoSelect]);\n\n  useEffect(() => {\n    if (!sdk || !sdk.GroupChannel || !currentChannel) { return; }\n    sdk.GroupChannel.getChannel(currentChannel, (groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel]);\n\n  return (\n    <UserProfileProvider\n      className=\"sendbird-channel-list\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-list__header\">\n        <ChannelHeader\n          renderHeader={renderHeader}\n          user={user}\n          onEdit={() => {\n            if (enableEditProfile) {\n              setShowProfileEdit(true);\n            }\n          }}\n          allowProfileEdit={enableEditProfile}\n          iconButton={(\n            <AddChannel\n              disabled={!isOnline}\n              userListQuery={userListQuery}\n              sdk={sdk}\n              channelListDispatcher={channelListDispatcher}\n              userId={userId}\n              userFilledApplicationUserListQuery={userFilledApplicationUserListQuery}\n              onBeforeCreateChannel={onBeforeCreateChannel}\n            />\n          )}\n        />\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            user={user}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onSubmit={(newName, newFile) => {\n              sdk.updateCurrentUserInfoWithProfileImage(newName, newFile, (updatedUser) => {\n                userDispatcher({ type: userActions.UPDATE_USER_INFO, payload: updatedUser });\n                if (onProfileEditSuccess && typeof onProfileEditSuccess === 'function') {\n                  onProfileEditSuccess(updatedUser);\n                }\n              });\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const fetchMore = e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight;\n          if (fetchMore && channelSource.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n            });\n            channelSource.next((response, error) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let channelList = response;\n              let err = error;\n              if (swapParams) {\n                channelList = error;\n                err = response;\n              }\n              if (err) {\n                logger.info('ChannelList: Fetching channels failed', err);\n                channelListDispatcher({\n                  type: channelListActions.FETCH_CHANNELS_FAILURE,\n                  payload: channelList,\n                });\n                return;\n              }\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n              if (channelList && typeof channelList.forEach === 'function') {\n                logger.info('ChannelList: Marking all channels as read');\n                channelList.forEach((c) => c.markAsDelivered());\n              }\n            });\n          }\n        }}\n      >\n        {\n          (sdkError) && (\n            <PlaceHolder type={PlaceholderTypes.WRONG} />\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            sortedChannels && sortedChannels.map((channel, idx) => {\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel.url,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      currentUser={user}\n                      theme={theme}\n                      isActive={channel.url === currentChannel}\n                      // todo - potential performance hit refactor\n                      ChannelAction={(\n                        <ChannelPreviewAction\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel)}\n                        />\n                      )}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!sdkIntialized || loading) && (\n            <PlaceHolder type={PlaceholderTypes.LOADING} />\n          )\n        }\n        {\n          //  placeholder\n          (!allChannels || allChannels.length === 0) && (\n            <PlaceHolder type={PlaceholderTypes.NO_CHANNELS} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelList.propTypes = {\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    userDispatcher: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string.isRequired,\n    userListQuery: PropTypes.func,\n    theme: PropTypes.string,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    channelListQuery: PropTypes.shape({\n      channelNameContainsFilter: PropTypes.string,\n      channelUrlsFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypesFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypeStartsWithFilter: PropTypes.string,\n      hiddenChannelFilter: PropTypes.string,\n      includeEmpty: PropTypes.bool,\n      limit: PropTypes.number,\n      memberStateFilter: PropTypes.string,\n      metadataOrderKeyFilter: PropTypes.string,\n      nicknameContainsFilter: PropTypes.string,\n      order: PropTypes.string,\n      publicChannelFilter: PropTypes.string,\n      superChannelFilter: PropTypes.string,\n      unreadChannelFilter: PropTypes.string,\n      userIdsExactFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilterQueryType: PropTypes.string,\n    }),\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeCreateChannel: PropTypes.func,\n  renderChannelPreview: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  sortChannelList: PropTypes.func,\n  onThemeChange: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  renderHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChannelSelect: PropTypes.func,\n  disableAutoSelect: PropTypes.bool,\n};\n\nChannelList.defaultProps = {\n  onBeforeCreateChannel: null,\n  renderChannelPreview: null,\n  renderHeader: null,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  allowProfileEdit: false,\n  onThemeChange: null,\n  sortChannelList: null,\n  onProfileEditSuccess: null,\n  queries: {},\n  onChannelSelect: noop,\n  disableAutoSelect: false,\n};\n\nexport default withSendbirdContext(ChannelList);\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","SET_AUTO_SELECT_CHANNEL_ITEM","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","CHANNEL_LIST_PARAMS_UPDATED","initialized","loading","allChannels","currentChannel","showSettings","channelListQuery","currentUserId","disableAutoSelect","reducer","state","action","type","actions","initialState","nextChannel","payload","length","url","currentChannels","map","c","filteredChannels","filter","find","channel","filterChannelListParams","getChannelsWithUpsertedChannel","ch","channelUrl","isMe","unreadMessageCount","lastMessage","currentUnreadCount","isFrozen","getChannelTitle","stringSet","LabelStringSet","name","members","NO_TITLE","NO_MEMBERS","userId","nickname","NO_NAME","join","getLastMessageCreatedAt","locale","createdAt","optionalParam","isToday","format","isYesterday","formatRelative","Date","getTotalMembers","memberCount","getPrettyLastMessage","message","MAXLEN","messageType","truncateString","getLastMessage","getChannelUnreadMessageCount","ChannelPreview","currentUser","isActive","ChannelAction","theme","onClick","tabIndex","isBroadcast","useContext","LocalizationContext","dateLocale","React","ChannelAvatar","Icon","IconTypes","BROADCAST","IconColors","SECONDARY","Label","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","utils","CAPTION_2","ONBACKGROUND_2","FREEZE","PRIMARY","CAPTION_3","BODY_2","ONBACKGROUND_3","Badge","propTypes","PropTypes","shape","arrayOf","coverUrl","string","bool","element","isRequired","func","number","defaultProps","ChannelHeader","user","renderHeader","iconButton","onEdit","allowProfileEdit","Avatar","profileUrl","oneOfType","instanceOf","IconButton","EditUserProfile","_a","_b","onCancel","onSubmit","_c","changeTheme","noop","_d","onThemeChange","hiddenInputRef","useRef","inputRef","formRef","_e","useState","currentImg","setCurrentImg","_f","newFile","setNewFile","Modal","EDIT_PROFILE__TITLE","BUTTON__SAVE","ButtonType","current","value","reportValidity","e","preventDefault","InputLabel","EDIT_PROFILE__IMAGE_LABEL","display","URL","createObjectURL","target","files","TextButton","click","BUTTON_1","EDIT_PROFILE__IMAGE_UPLOAD","EDIT_PROFILE__NICKNAME_LABEL","Input","EDIT_PROFILE__NICKNAME_PLACEHOLDER","EDIT_PROFILE__USERID_LABEL","EDIT_PROFILE__THEME_LABEL","TOGGLE_ON","TOGGLE_OFF","mapStoreToProps","store","config","setCurrenttheme","ConnectedEditUserProfile","withSendbirdContext","AddChannel","sdk","disabled","channelListDispatcher","onBeforeCreateChannel","userFilledApplicationUserListQuery","userListQuery","showModal","setShowModal","step","setStep","setType","createApplicationUserListQuery","isBroadcastAvailable","isBroadcastChannelEnabled","isSupergroupAvailable","isSuperGroupChannelEnabled","CREATE","MODAL__CHOOSE_CHANNEL_TYPE__TITLE","CHAT","SUBTITLE_1","MODAL__CHOOSE_CHANNEL_TYPE__GROUP","SUPERGROUP","MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP","MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST","InviteMembers","getErrorFirstCallback","MODAL__CREATE_CHANNEL__TITLE","BUTTON__CREATE","createDefaultUserListQuery","selectedUsers","createChannel","then","ChannelPreviewAction","onLeaveChannel","parentRef","stopPropagation","ContextMenu","toggleDropdown","MORE","closeDropdown","MenuItems","MenuItem","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","ChannelsPlaceholder","Placeholder","createEventHandler","sdkChannelHandlerId","logger","ChannelHandler","onChannelChanged","info","channelActions","onChannelDeleted","onUserJoined","onUserBanned","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","addChannelHandler","createChannelListQuery","userFilledChannelListQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","order","limit","Object","keys","forEach","key","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","console","warning","hasNext","next","response","error","swapParams","channelList","err","sorted","markAsDelivered","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","subScriber","Map","set","topics","subscribe","msg","updatedChannel","messageId","ChannelList","props","stores","sdkStore","userStore","isOnline","userDispatcher","dispatchers","queries","renderChannelPreview","renderUserProfile","disableUserProfile","onProfileEditSuccess","enableEditProfile","userDefinedDisableUserProfile","userDefinedRenderProfile","applicationUserListQuery","sdkError","sdkIntialized","useReducer","channelListReducers","channelListInitialState","channelListStore","setUser","channelSource","showProfileEdit","setShowProfileEdit","setSdkChannelHandlerId","useEffect","uuidv4","removeChannelHandler","channelListActions","sortedChannels","warn","before","after","getChannel","groupChannel","UserProfileProvider","newName","updateCurrentUserInfoWithProfileImage","updatedUser","userActions","fetchMore","clientHeight","scrollTop","scrollHeight","PlaceHolder","PlaceholderTypes","WRONG","idx","cb","leave","res","catch","LOADING","NO_CHANNELS","publish","channelNameContainsFilter","channelUrlsFilter","customTypesFilter","customTypeStartsWithFilter","hiddenChannelFilter","memberStateFilter","metadataOrderKeyFilter","nicknameContainsFilter","publicChannelFilter","superChannelFilter","unreadChannelFilter","userIdsExactFilter","userIdsIncludeFilter","userIdsIncludeFilterQueryType","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter"],"mappings":"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"}